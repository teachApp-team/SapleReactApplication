import { AnnotationLayer } from "./AnnotationLayer";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { DependencyProperty } from "igniteui-react-core";
import { CategoryHighlightLayerFrame } from "./CategoryHighlightLayerFrame";
import { Type } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { Axis } from "./Axis";
import { Frame } from "./Frame";
import { CategoryHighlightFrameRect } from "./CategoryHighlightFrameRect";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { Pool$1 } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { Brush } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class CategoryHighlightLayer extends AnnotationLayer {
    static $t: Type;
    constructor();
    protected bf(): SeriesView;
    iv(a: SeriesView): void;
    protected m6: CategoryHighlightLayerView;
    m5: CategoryAxisBase;
    m8: boolean;
    m9: number;
    static readonly ng: DependencyProperty;
    protected ml(a: Axis, b: boolean): void;
    private m7;
    protected mo(a: Frame, b: SeriesView): void;
    private ne;
    nd(a: Rect, b: CategoryHighlightLayerFrame, c: Axis): void;
    protected mr(a: Frame, b: SeriesView): void;
    protected c8(): boolean;
    nf(a: CategoryHighlightFrameRect, b: Rectangle): void;
    protected i0(a: any, b: string, c: any, d: any): void;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CategoryHighlightLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: CategoryHighlightLayer);
    protected b1: CategoryHighlightLayer;
    b2: Pool$1<Rectangle>;
    ap(): void;
    protected b3: List$1<Rectangle>;
    private ca;
    private b5;
    private b7;
    private b6;
    b8(a: Brush): Brush;
    b9(a: Brush): Brush;
    b4(a: Rectangle, b: number, c: number, d: number, e: number): void;
    protected a3(a: RenderingContext, b: boolean): void;
    ai(a: any): void;
}
