/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { IShortPeriodLongPeriod_$type } from "./IShortPeriodLongPeriod";
import { AbsoluteVolumeOscillatorIndicatorStrategy } from "./AbsoluteVolumeOscillatorIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let AbsoluteVolumeOscillatorIndicator = /*@__PURE__*/ (() => {
    class AbsoluteVolumeOscillatorIndicator extends StrategyBasedIndicator {
        get_qd() {
            return new AbsoluteVolumeOscillatorIndicatorStrategy();
        }
        get qd() {
            return this.get_qd();
        }
        get_qq() {
            return AbsoluteVolumeOscillatorIndicator.$;
        }
        get qq() {
            return this.get_qq();
        }
        get shortPeriod() {
            return typeGetValue(this.c(AbsoluteVolumeOscillatorIndicator.qz));
        }
        set shortPeriod(a) {
            this.h(AbsoluteVolumeOscillatorIndicator.qz, a);
        }
        ql() {
            return this.shortPeriod;
        }
        get longPeriod() {
            return typeGetValue(this.c(AbsoluteVolumeOscillatorIndicator.qy));
        }
        set longPeriod(a) {
            this.h(AbsoluteVolumeOscillatorIndicator.qy, a);
        }
        qi() {
            return this.longPeriod;
        }
    }
    AbsoluteVolumeOscillatorIndicator.$t = /*@__PURE__*/ markType(AbsoluteVolumeOscillatorIndicator, 'AbsoluteVolumeOscillatorIndicator', StrategyBasedIndicator.$, [IShortPeriodLongPeriod_$type]);
    AbsoluteVolumeOscillatorIndicator.qz = /*@__PURE__*/ StrategyBasedIndicator.qx(10, AbsoluteVolumeOscillatorIndicator.$);
    AbsoluteVolumeOscillatorIndicator.qy = /*@__PURE__*/ StrategyBasedIndicator.qt(30, AbsoluteVolumeOscillatorIndicator.$);
    return AbsoluteVolumeOscillatorIndicator;
})();
//# sourceMappingURL=AbsoluteVolumeOscillatorIndicator.js.map
