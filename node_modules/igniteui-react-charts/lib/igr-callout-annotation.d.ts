import { IgrSeries } from "./igr-series";
import { CalloutAnnotation as CalloutAnnotation_internal } from "./CalloutAnnotation";
/**
 * Represents a callout annotation
*/
export declare class IgrCalloutAnnotation {
    protected createImplementation(): CalloutAnnotation_internal;
    protected _implementation: any;
    /**
     * @hidden
     */
    readonly i: CalloutAnnotation_internal;
    private onImplementationCreated;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * Gets or sets the XValue at which this annotation is displayed on the axis.
    */
    xValue: any;
    /**
     * Gets or sets the YValue at which this annotation is displayed on the axis.
    */
    yValue: any;
    /**
     * Gets or sets the text that should be displayed for the annotation. Leave null to display the value automatically.
    */
    text: string;
    /**
     * Gets or sets the Key that should be annotated.
    */
    key: any;
    /**
     * Gets or sets the Content that should be annotated.
    */
    content: any;
    /**
     * Gets or sets the series to which the callout pertains to. Leave unset for an automatic value.
    */
    series: IgrSeries;
    /**
     * Sets or gets a function which takes an object that produces a formatted label for the value of this annotation.
    */
    formatLabel: (item: any) => string;
    /**
     * Gets or sets the color to use for the text in the annotation.
    */
    textColor: string;
    /**
     * Gets or sets the background to use for tha axis annotation box.
    */
    background: string;
    /**
     * Gets or sets the Outline to use for tha axis annotation box.
    */
    outline: string;
    /**
     * Gets or sets the LeaderBrush to use for tha axis annotation box.
    */
    leaderBrush: string;
    /**
     * Gets or sets the border stroke thickness to use for tha axis annotation box.
    */
    strokeThickness: number;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    backgroundPaddingLeft: number;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    backgroundPaddingTop: number;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    backgroundPaddingRight: number;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    backgroundPaddingBottom: number;
    findByName(name: string): any;
}
