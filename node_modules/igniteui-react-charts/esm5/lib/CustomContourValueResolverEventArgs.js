/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { EventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var CustomContourValueResolverEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(CustomContourValueResolverEventArgs, _super);
    function CustomContourValueResolverEventArgs(a) {
        var _this = _super.call(this) || this;
        _this._valueColumn = null;
        _this._contourValuesEnumerable = null;
        _this.b = null;
        _this.valueColumn = a;
        return _this;
    }
    Object.defineProperty(CustomContourValueResolverEventArgs.prototype, "valueColumn", {
        get: function () {
            return this._valueColumn;
        },
        set: function (a) {
            this._valueColumn = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CustomContourValueResolverEventArgs.prototype, "contourValuesEnumerable", {
        get: function () {
            return this._contourValuesEnumerable;
        },
        set: function (a) {
            this._contourValuesEnumerable = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CustomContourValueResolverEventArgs.prototype, "values", {
        get: function () {
            if (this.valueColumn == null) {
                return [];
            }
            return this.valueColumn.asArray();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CustomContourValueResolverEventArgs.prototype, "contourValues", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            if (a == null) {
                this.contourValuesEnumerable = null;
            }
            else {
                this.contourValuesEnumerable = a;
            }
        },
        enumerable: true,
        configurable: true
    });
    CustomContourValueResolverEventArgs.$t = markType(CustomContourValueResolverEventArgs, 'CustomContourValueResolverEventArgs', EventArgs.$);
    return CustomContourValueResolverEventArgs;
}(EventArgs));
export { CustomContourValueResolverEventArgs };
//# sourceMappingURL=CustomContourValueResolverEventArgs.js.map
