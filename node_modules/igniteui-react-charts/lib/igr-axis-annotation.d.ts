import { AxisAnnotation as AxisAnnotation_internal } from "./AxisAnnotation";
/**
 * Represents an axis annotation
*/
export declare class IgrAxisAnnotation {
    protected createImplementation(): AxisAnnotation_internal;
    protected _implementation: any;
    /**
     * @hidden
     */
    readonly i: AxisAnnotation_internal;
    private onImplementationCreated;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * Gets or sets the value at which this annotation is displayed on the axis.
    */
    value: any;
    /**
     * Gets or sets the text that should be displayed for the annotation. Leave null to display the value automatically.
    */
    text: string;
    /**
     * Gets or sets the label format string to use for the label.
    */
    labelFormat: string;
    /**
     * Gets or sets the format specifiers to use with the LabelFormat string.
    */
    labelFormatSpecifiers: any[];
    /**
     * Sets or gets a function which takes an object that produces a formatted label for the value of this annotation.
    */
    formatLabel: (item: any) => string;
    /**
     * Gets or sets the color to use for the text in the annotation.
    */
    textColor: string;
    /**
     * Gets or sets the background to use for tha axis annotation box.
    */
    background: string;
    /**
     * Gets or sets the Outline to use for tha axis annotation box.
    */
    outline: string;
    /**
     * Gets or sets the border stroke thickness to use for tha axis annotation box.
    */
    strokeThickness: number;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    backgroundPaddingLeft: number;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    backgroundPaddingTop: number;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    backgroundPaddingRight: number;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    backgroundPaddingBottom: number;
    findByName(name: string): any;
    resetCachedExtent(): void;
    resolveLabelValue(): string;
}
