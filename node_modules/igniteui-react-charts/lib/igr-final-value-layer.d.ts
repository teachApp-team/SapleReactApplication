import { IgrSeries } from "./igr-series";
import { FinalValueSelectionMode } from "./FinalValueSelectionMode";
import { IgrAnnotationLayer, IIgrAnnotationLayerProps } from "./igr-annotation-layer";
import { FinalValueLayer } from "./FinalValueLayer";
/**
 * Represents an annotation layer that displays crosshair lines that cross through the closest value of the target series under the cursor.
*/
export declare class IgrFinalValueLayer extends IgrAnnotationLayer<IIgrFinalValueLayerProps> {
    protected createImplementation(): FinalValueLayer;
    /**
                                 * @hidden
                                 */
    readonly i: FinalValueLayer;
    constructor(props: IIgrFinalValueLayerProps);
    /**
     * Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
    */
    targetSeries: IgrSeries;
    /**
     * Gets or sets how to select the final value to annotate.
    */
    finalValueSelectionMode: FinalValueSelectionMode;
    /**
     * Gets or sets the color to use for the axis annotation text. Leave unset for an automatic value.
    */
    axisAnnotationTextColor: string;
    /**
     * Gets or sets the color to use for the axis annotation backing. Leave unset for an automatic value.
    */
    axisAnnotationBackground: string;
    /**
     * Gets or sets the precision to use displaying values for interpolated crosshair positions.
    */
    axisAnnotationInterpolatedValuePrecision: number;
    /**
     * Gets or sets the color to use for the axis annotation outline. Leave unset for an automatic value.
    */
    axisAnnotationOutline: string;
    /**
     * Gets or sets the left padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    axisAnnotationPaddingLeft: number;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    axisAnnotationPaddingTop: number;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    axisAnnotationPaddingRight: number;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    axisAnnotationPaddingBottom: number;
    /**
     * Gets or sets the stroke thickness for the axis annotation backing. Leave unset for an automatic value.
    */
    axisAnnotationStrokeThickness: number;
    findByName(name: string): any;
    protected _styling(container: any, component: any, parent?: any): void;
}
export interface IIgrFinalValueLayerProps extends IIgrAnnotationLayerProps {
    /**
     * Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
    */
    targetSeries?: IgrSeries;
    /**
     * Gets or sets how to select the final value to annotate.
    */
    finalValueSelectionMode?: FinalValueSelectionMode | string;
    /**
     * Gets or sets the color to use for the axis annotation text. Leave unset for an automatic value.
    */
    axisAnnotationTextColor?: string;
    /**
     * Gets or sets the color to use for the axis annotation backing. Leave unset for an automatic value.
    */
    axisAnnotationBackground?: string;
    /**
     * Gets or sets the precision to use displaying values for interpolated crosshair positions.
    */
    axisAnnotationInterpolatedValuePrecision?: number | string;
    /**
     * Gets or sets the color to use for the axis annotation outline. Leave unset for an automatic value.
    */
    axisAnnotationOutline?: string;
    /**
     * Gets or sets the left padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    axisAnnotationPaddingLeft?: number | string;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    axisAnnotationPaddingTop?: number | string;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    axisAnnotationPaddingRight?: number | string;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    axisAnnotationPaddingBottom?: number | string;
    /**
     * Gets or sets the stroke thickness for the axis annotation backing. Leave unset for an automatic value.
    */
    axisAnnotationStrokeThickness?: number | string;
}
