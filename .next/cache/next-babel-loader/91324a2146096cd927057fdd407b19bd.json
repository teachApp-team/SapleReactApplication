{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fujitakosuke/Projects/TanngoNext/tanngo_app/components/Counter.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"msgStyle\", {\n      fontSize: \"12pt\",\n      padding: \"5px 15px\"\n    });\n\n    this.doAction = this.doAction.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  doAction(e) {\n    if (e.shiftKey) {\n      return this.props.dispatch({\n        type: 'DECREMENT'\n      });\n    } else {\n      return this.props.dispatch({\n        type: 'INCREMENT'\n      });\n    }\n  }\n\n  reset() {\n    return this.props.dispatch({\n      type: 'RESET'\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [this.props.message, \":\", this.props.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: this.style,\n        onClick: this.doAction,\n        children: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: this.style,\n        onClick: this.reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCounter = connect(mapStateToProps)(Counter);\nexport default Counter;","map":{"version":3,"sources":["/Users/fujitakosuke/Projects/TanngoNext/tanngo_app/components/Counter.js"],"names":["React","Component","connect","Counter","constructor","props","fontSize","padding","doAction","bind","reset","e","shiftKey","dispatch","type","render","message","count","style","mapStateToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAM9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,sCALR;AACTC,MAAAA,QAAQ,EAAE,MADD;AAETC,MAAAA,OAAO,EAAC;AAFC,KAKQ;;AAEjB,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAEDD,EAAAA,QAAQ,CAACG,CAAD,EAAI;AACV,QAAIA,CAAC,CAACC,QAAN,EAAgB;AACd,aAAO,KAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAACC,QAAAA,IAAI,EAAC;AAAN,OAApB,CAAP;AACD,KAFD,MAEK;AACH,aAAO,KAAKT,KAAL,CAAWQ,QAAX,CAAoB;AAACC,QAAAA,IAAI,EAAC;AAAN,OAApB,CAAP;AACD;AACF;;AAEDJ,EAAAA,KAAK,GAAE;AACL,WAAO,KAAKL,KAAL,CAAWQ,QAAX,CAAoB;AAACC,MAAAA,IAAI,EAAC;AAAN,KAApB,CAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,mBAAI,KAAKV,KAAL,CAAWW,OAAf,OAAyB,KAAKX,KAAL,CAAWY,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAE,KAAKC,KAApB;AAA2B,QAAA,OAAO,EAAE,KAAKV,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,KAAK,EAAE,KAAKU,KAApB;AAA2B,QAAA,OAAO,EAAE,KAAKR,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAhC6B;;AAoChCP,OAAO,GAAGD,OAAO,CAACiB,eAAD,CAAP,CAAyBhB,OAAzB,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nclass Counter extends Component {\n  msgStyle = {\n    fontSize: \"12pt\",\n    padding:\"5px 15px\"\n  }\n\n  constructor(props) {\n    super(props);\n    this.doAction = this.doAction.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  doAction(e) {\n    if (e.shiftKey) {\n      return this.props.dispatch({type:'DECREMENT'});\n    }else{\n      return this.props.dispatch({type:'INCREMENT'});\n    }\n  }\n\n  reset(){\n    return this.props.dispatch({type:'RESET'});\n  }\n\n  render() {\n    return (\n      <div>\n        <p>{this.props.message}:{this.props.count}</p>\n        <button style={this.style} onClick={this.doAction}>Count</button>\n        <button style={this.style} onClick={this.reset}>Reset</button>\n      </div>\n    );\n  }\n}\n\n\nCounter = connect(mapStateToProps)(Counter);\nexport default Counter;"]},"metadata":{},"sourceType":"module"}