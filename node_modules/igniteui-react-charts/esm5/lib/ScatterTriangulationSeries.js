/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Series } from "./Series";
import { DependencyProperty } from "igniteui-react-core";
import { IEnumerable_$type, runOn, delegateCombine, delegateRemove, typeCast, markType, markDep } from "igniteui-react-core";
import { NumericXAxis } from "./NumericXAxis";
import { NumericYAxis } from "./NumericYAxis";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { Triangulator } from "igniteui-react-core";
import { TriangulationStatusEventArgs } from "igniteui-react-core";
import { FastItemsSource } from "igniteui-react-core";
import { SeriesViewer } from "./SeriesViewer";
import { Axis } from "./Axis";
import { AxisRange } from "./AxisRange";
import { PropertyMetadata } from "igniteui-react-core";
/**
 * @hidden
 */
var ScatterTriangulationSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ScatterTriangulationSeries, _super);
    function ScatterTriangulationSeries() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.l8 = null;
        _this.l9 = null;
        _this.mh = false;
        _this.l4 = null;
        _this.triangulationStatusChanged = null;
        _this.mk = null;
        _this.l5 = null;
        _this.l6 = null;
        _this.l7 = null;
        return _this;
    }
    ScatterTriangulationSeries.prototype.hu = function () {
        _super.prototype.hu.call(this);
        this.l1 = null;
        this.l2 = null;
    };
    ScatterTriangulationSeries.prototype.fs = function (a, b) {
        var c = this.gv(b);
        if (c == ScatterTriangulationSeries.$$p[6]) {
            return this.ft(a, b, this.mz);
        }
        if (c == ScatterTriangulationSeries.$$p[8]) {
            return this.ft(a, b, this.m3);
        }
        return _super.prototype.fs.call(this, a, b);
    };
    Object.defineProperty(ScatterTriangulationSeries.prototype, "me", {
        get: function () {
            return this.l8;
        },
        set: function (a) {
            var b = this.me != a;
            if (b) {
                var c = this.me;
                this.l8 = a;
                this.raisePropertyChanged("XColumn", c, this.me);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScatterTriangulationSeries.prototype, "mf", {
        get: function () {
            return this.l9;
        },
        set: function (a) {
            var b = this.mf != a;
            if (b) {
                var c = this.mf;
                this.l9 = a;
                this.raisePropertyChanged("YColumn", c, this.mf);
            }
        },
        enumerable: true,
        configurable: true
    });
    ScatterTriangulationSeries.prototype.jf = function (a) {
        var b = this.bz != null && this.mg == null && this.mk == null && this.me != null && this.mf != null && this.me.count >= 3 && this.mf.count >= 3 && !this.mh;
        if (b) {
            this.m7();
            this.mh = true;
        }
    };
    ScatterTriangulationSeries.prototype.m7 = function () {
        this.l4 = new Triangulator(this.bz.count, this.me, this.mf);
        var a = this.l4;
        a.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.m8));
        this.l4.y();
    };
    ScatterTriangulationSeries.prototype.m5 = function () {
        if (this.l4 == null) {
            return;
        }
        this.l4.r();
        var a = this.l4;
        a.triangulationStatusChanged = delegateRemove(a.triangulationStatusChanged, runOn(this, this.m8));
        this.l4 = null;
    };
    ScatterTriangulationSeries.prototype.m8 = function (a, b) {
        var _this = this;
        if (this.triangulationStatusChanged != null) {
            this.triangulationStatusChanged(this, new TriangulationStatusEventArgs(b.currentStatus));
        }
        if (b.currentStatus >= 100) {
            if (this.l4 == null) {
                return;
            }
            var c = this.l4;
            c.triangulationStatusChanged = delegateRemove(c.triangulationStatusChanged, runOn(this, this.m8));
            this.mk = this.l4.n();
            this.l4 = null;
            var d = ((function () {
                var $ret = new FastItemsSource();
                $ret.e = _this.mk;
                return $ret;
            })());
            this.mb = this.ma(d, "v1");
            this.mc = this.ma(d, "v2");
            this.md = this.ma(d, "v3");
            this.je(false);
        }
    };
    ScatterTriangulationSeries.prototype.ma = function (a, b) {
        if (b == null) {
            return a.registerColumnInt(null, null, false);
        }
        var c = null;
        var d = SeriesViewer.bb(b, this.coercionMethods);
        c = d.a;
        return a.registerColumnInt(b, c, this.expectFunctions);
    };
    ScatterTriangulationSeries.prototype.i0 = function (a, b, c, d) {
        var _this = this;
        _super.prototype.i0.call(this, a, b, c, d);
        switch (b) {
            case "FastItemsSource":
                var e = typeCast(IFastItemsSource_$type, c);
                if (e != null) {
                    e.deregisterColumn(this.me);
                    e.deregisterColumn(this.mf);
                    this.me = null;
                    this.mf = null;
                }
                this.m6();
                var f = typeCast(IFastItemsSource_$type, d);
                if (f != null) {
                    this.me = this.bw(this.mz);
                    this.mf = this.bw(this.m3);
                }
                this.je(false);
                break;
            case ScatterTriangulationSeries.$$p[6]:
                if (this.bz != null) {
                    this.bz.deregisterColumn(this.me);
                    this.me = this.bw(this.mz);
                }
                this.m6();
                this.je(false);
                this.il();
                break;
            case ScatterTriangulationSeries.$$p[8]:
                if (this.bz != null) {
                    this.bz.deregisterColumn(this.mf);
                    this.mf = this.bw(this.m3);
                }
                this.m6();
                this.je(false);
                this.il();
                break;
            case ScatterTriangulationSeries.$$p[5]:
                if (c != null) {
                    (typeCast(Axis.$, c)).bx(this);
                }
                if (d != null) {
                    (typeCast(Axis.$, d)).ck(this);
                }
                if ((this.l1 != null && !this.l1.cn()) || (d == null && c != null)) {
                    this.je(false);
                }
                this.il();
                break;
            case ScatterTriangulationSeries.$$p[7]:
                if (c != null) {
                    (typeCast(Axis.$, c)).bx(this);
                }
                if (d != null) {
                    (typeCast(Axis.$, d)).ck(this);
                }
                if ((this.l2 != null && !this.l2.cn()) || (d == null && c != null)) {
                    this.je(false);
                }
                this.il();
                break;
            case ScatterTriangulationSeries.$$p[1]:
                if (this.trianglesSource != null) {
                    this.m5();
                    this.mg = ((function () {
                        var $ret = new FastItemsSource();
                        $ret.e = _this.trianglesSource;
                        return $ret;
                    })());
                }
                else {
                    this.mg = null;
                }
                break;
            case ScatterTriangulationSeries.$$p[0]:
                var g = typeCast(IFastItemsSource_$type, c);
                if (g != null) {
                    g.deregisterColumn(this.mb);
                    g.deregisterColumn(this.mc);
                    g.deregisterColumn(this.md);
                    this.mb = null;
                    this.mc = null;
                    this.md = null;
                }
                var h = typeCast(IFastItemsSource_$type, d);
                if (h != null) {
                    this.mb = this.ma(h, this.mr);
                    this.mc = this.ma(h, this.mt);
                    this.md = this.ma(h, this.mv);
                }
                this.je(false);
                this.il();
                break;
            case ScatterTriangulationSeries.$$p[2]:
                if (this.mg != null) {
                    this.mg.deregisterColumn(this.mb);
                    this.mb = this.ma(this.mg, this.mr);
                }
                this.je(false);
                this.il();
                break;
            case ScatterTriangulationSeries.$$p[3]:
                if (this.mg != null) {
                    this.mg.deregisterColumn(this.mc);
                    this.mc = this.ma(this.mg, this.mt);
                }
                this.je(false);
                this.il();
                break;
            case ScatterTriangulationSeries.$$p[4]:
                if (this.mg != null) {
                    this.mg.deregisterColumn(this.md);
                    this.md = this.ma(this.mg, this.mv);
                }
                this.je(false);
                this.il();
                break;
            case "XColumn":
                if (this.l1 != null) {
                    this.l1.cn();
                }
                break;
            case "YColumn":
                if (this.l2 != null) {
                    this.l2.cn();
                }
                break;
        }
    };
    ScatterTriangulationSeries.prototype.mj = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    ScatterTriangulationSeries.prototype.mi = function (a) {
        if (typeCast(NumericXAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    ScatterTriangulationSeries.prototype.dw = function (a, b, c) {
        return _super.prototype.dw.call(this, a, b, c) && this.bz != null && this.l1 != null && this.l2 != null && this.l1.bh != null && this.l2.bh != null && a.width > 0 && a.height > 0 && this.mb != null && this.mb.count > 0 && this.mc != null && this.mc.count > 0 && this.md != null && this.md.count > 0 && this.me != null && this.me.count > 0 && this.mf != null && this.mf.count > 0;
    };
    ScatterTriangulationSeries.prototype.m6 = function () {
        if (this.trianglesSource == null) {
            this.mk = null;
            this.mb = null;
            this.mc = null;
            this.md = null;
            this.mh = false;
        }
    };
    ScatterTriangulationSeries.prototype.ic = function () {
        _super.prototype.ic.call(this);
        if (this.l1 != null) {
            this.l1.ha();
        }
        if (this.l2 != null) {
            this.l2.ha();
        }
    };
    ScatterTriangulationSeries.prototype.hz = function (a, b, c, d) {
        _super.prototype.hz.call(this, a, b, c, d);
        this.m6();
        this.je(false);
    };
    ScatterTriangulationSeries.prototype.an = function (a) {
        if (a != null && a == this.l1 && this.me != null) {
            return new AxisRange(this.me.minimum, this.me.maximum);
        }
        if (a != null && a == this.l2 && this.mf != null) {
            return new AxisRange(this.mf.minimum, this.mf.maximum);
        }
        return null;
    };
    ScatterTriangulationSeries.prototype.ju = function (a, b) {
        this.je(false);
    };
    ScatterTriangulationSeries.prototype.jt = function (a, b) {
        this.je(false);
    };
    Object.defineProperty(ScatterTriangulationSeries.prototype, "mb", {
        get: function () {
            return this.l5;
        },
        set: function (a) {
            var b = this.mb != a;
            if (b) {
                var c = this.mb;
                this.l5 = a;
                this.raisePropertyChanged("TriangleVertexColumn1", c, this.mb);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScatterTriangulationSeries.prototype, "mc", {
        get: function () {
            return this.l6;
        },
        set: function (a) {
            var b = this.mc != a;
            if (b) {
                var c = this.mc;
                this.l6 = a;
                this.raisePropertyChanged("TriangleVertexColumn2", c, this.mc);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScatterTriangulationSeries.prototype, "md", {
        get: function () {
            return this.l7;
        },
        set: function (a) {
            var b = this.md != a;
            if (b) {
                var c = this.md;
                this.l7 = a;
                this.raisePropertyChanged("TriangleVertexColumn3", c, this.md);
            }
        },
        enumerable: true,
        configurable: true
    });
    ScatterTriangulationSeries.prototype.get_c5 = function () {
        return true;
    };
    ScatterTriangulationSeries.$t = markType(ScatterTriangulationSeries, 'ScatterTriangulationSeries', Series.$);
    ScatterTriangulationSeries.$$p = markDep(DependencyProperty, PropertyMetadata, ScatterTriangulationSeries, 'raisePropertyChanged', ['FastTrianglesSource:mg:m9', [IFastItemsSource_$type, null], 'TrianglesSource::na', [IEnumerable_$type, null], 'TriangleVertexMemberPath1:mr:nb', [2, null], 'TriangleVertexMemberPath2:mt:nc', [2, null], 'TriangleVertexMemberPath3:mv:nd', [2, null], 'XAxis:l1:ne', [NumericXAxis.$, null], 'XMemberPath:mz:nf', [2, null], 'YAxis:l2:ng', [NumericYAxis.$, null], 'YMemberPath:m3:nh', [2, null]]);
    return ScatterTriangulationSeries;
}(Series));
export { ScatterTriangulationSeries };
//# sourceMappingURL=ScatterTriangulationSeries.js.map
