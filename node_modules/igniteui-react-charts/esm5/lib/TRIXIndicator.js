/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { TRIXIndicatorStrategy } from "./TRIXIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
/**
 * @hidden
 */
var TRIXIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(TRIXIndicator, _super);
    function TRIXIndicator() {
        var _this = _super.call(this) || this;
        _this.pl = 0;
        _this.trendLineBrush = ((function () {
            var $ret = new Brush();
            $ret.fill = "#565656";
            return $ret;
        })());
        _this.trendLineType = 9;
        _this.trendLinePeriod = 9;
        return _this;
    }
    TRIXIndicator.prototype.get_qd = function () {
        return new TRIXIndicatorStrategy();
    };
    Object.defineProperty(TRIXIndicator.prototype, "qd", {
        get: function () {
            return this.get_qd();
        },
        enumerable: true,
        configurable: true
    });
    TRIXIndicator.prototype.get_qq = function () {
        return TRIXIndicator.$;
    };
    Object.defineProperty(TRIXIndicator.prototype, "qq", {
        get: function () {
            return this.get_qq();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TRIXIndicator.prototype, "qy", {
        get: function () {
            return typeGetValue(this.c(TRIXIndicator.qz));
        },
        set: function (a) {
            this.h(TRIXIndicator.qz, a);
        },
        enumerable: true,
        configurable: true
    });
    TRIXIndicator.prototype.qj = function () {
        return this.qy;
    };
    TRIXIndicator.prototype.qs = function (a) {
        this.qy = a;
    };
    TRIXIndicator.$t = markType(TRIXIndicator, 'TRIXIndicator', StrategyBasedIndicator.$);
    TRIXIndicator.qz = StrategyBasedIndicator.qv(15, TRIXIndicator.$);
    return TRIXIndicator;
}(StrategyBasedIndicator));
export { TRIXIndicator };
//# sourceMappingURL=TRIXIndicator.js.map
