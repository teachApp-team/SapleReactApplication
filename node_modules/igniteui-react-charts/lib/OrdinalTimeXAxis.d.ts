import { CategoryXAxis } from "./CategoryXAxis";
import { ITimeRangeSelectorAxis } from "./ITimeRangeSelectorAxis";
import { TimeAxisLabelFormatCollection } from "./TimeAxisLabelFormatCollection";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { CategoryMode } from "./CategoryMode";
import { IList$1, EventArgs, Type } from "igniteui-react-core";
import { IGetItemAtIndex } from "igniteui-react-core";
import { FastItemsSourceEventArgs } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class OrdinalTimeXAxis extends CategoryXAxis implements ITimeRangeSelectorAxis {
    static $t: Type;
    d0(a: number, b: Rect, c: Rect): number;
    dz(a: number, b: ScalerParams, c: CategoryMode): number;
    dy(a: number, b: ScalerParams): number;
    gr(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    gs(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    d3(a: number, b: Rect, c: Rect): number;
    getUnscaledValue3(a: number, b: Rect, c: Rect, d: CategoryMode): number;
    d1(a: number, b: ScalerParams): number;
    d2(a: number, b: ScalerParams, c: CategoryMode): number;
    gt(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    constructor();
    protected gz(a: any, b: string, c: any, d: any): void;
    private lw;
    actualMinimumValue: Date;
    private lv;
    actualMaximumValue: Date;
    private l0;
    visibleMinimum: Date;
    private lz;
    visibleMaximum: Date;
    private mf;
    private mg;
    private l5;
    dateTimeMemberPath: string;
    private lt;
    private lu;
    protected hn(a: Rect, b: Rect): void;
    getWindowRectForSelection(a: Date, b: Date): Rect;
    private lr;
    readonly ls: TimeAxisLabelFormatCollection;
    private me;
    g1(a: string): void;
    e8(a: any): any;
    fl(a: number): string;
    private readonly md;
    protected k5(): IGetItemAtIndex;
    protected hm(a: Rect, b: Rect): void;
    protected lb(a: number, b: ScalerParams): number;
    protected la(a: number, b: number, c: boolean, d: ScalerParams): number;
    private mc;
    private mb;
    itemLabelFormat(): string;
    private ly;
    minimumValue: Date;
    private lx;
    maximumValue: Date;
    cp(): boolean;
    visibleRangeChanged: (sender: any, e: EventArgs) => void;
    protected kr(a: FastItemsSourceEventArgs): void;
    readonly isVertical: boolean;
    j$c(a: number, b: ScalerParams): number;
    j$b(a: number, b: ScalerParams): number;
    j$d(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    j$e(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    j$f(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    readonly j$a: boolean;
}
