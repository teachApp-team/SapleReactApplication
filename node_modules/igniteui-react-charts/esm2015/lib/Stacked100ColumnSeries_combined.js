/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { StackedColumnSeries } from "./StackedColumnSeries";
import { IStacked100Series_$type } from "./IStacked100Series";
import { markType } from "igniteui-react-core";
import { Stacked100DataPreparer } from "./Stacked100DataPreparer";
import { StackedColumnSeriesView } from "./StackedColumnSeriesView";
import { Stacked100ColumnBucketCalculator } from "./Stacked100ColumnBucketCalculator";
/**
 * @hidden
 */
export let Stacked100ColumnSeries = /*@__PURE__*/ (() => {
    class Stacked100ColumnSeries extends StackedColumnSeries {
        constructor() {
            super();
            this.ab = Stacked100ColumnSeries.$;
        }
        ac() {
            super.ac();
            this.je(false);
        }
        bf() {
            return new Stacked100ColumnSeriesView(this);
        }
        iv(a) {
            super.iv(a);
            this.qd = a;
        }
        o2() {
            return this.qd;
        }
        pp() {
            super.pp();
            Stacked100DataPreparer.a(this);
        }
        get useHighMarkerFidelity() {
            return this.n6;
        }
    }
    Stacked100ColumnSeries.$t = /*@__PURE__*/ markType(Stacked100ColumnSeries, 'Stacked100ColumnSeries', StackedColumnSeries.$, [IStacked100Series_$type]);
    return Stacked100ColumnSeries;
})();
/**
 * @hidden
 */
export let Stacked100ColumnSeriesView = /*@__PURE__*/ (() => {
    class Stacked100ColumnSeriesView extends StackedColumnSeriesView {
        constructor(a) {
            super(a);
            this.c1 = null;
            this.c1 = a;
        }
        co() {
            return new Stacked100ColumnBucketCalculator(this);
        }
    }
    Stacked100ColumnSeriesView.$t = /*@__PURE__*/ markType(Stacked100ColumnSeriesView, 'Stacked100ColumnSeriesView', StackedColumnSeriesView.$);
    return Stacked100ColumnSeriesView;
})();
//# sourceMappingURL=Stacked100ColumnSeries_combined.js.map
