import * as React from 'react';
import { IgrPropertyUpdatedEventArgs } from "igniteui-react-core";
import { ColorScale } from "./ColorScale";
/**
 * Base class for classes which provide colors corresponding to numeric values within a known list of numeric values.
*/
export declare abstract class IgrColorScale<P extends IIgrColorScaleProps = IIgrColorScaleProps> extends React.Component<P, {}> {
    protected createImplementation(): ColorScale;
    protected _implementation: any;
    /**
     * @hidden
     */
    readonly i: ColorScale; /**
                                 * @hidden
                                 */
    static _createFromInternal(internal: any): IgrColorScale;
    private onImplementationCreated;
    constructor(props: P);
    componentDidMount(): void;
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    render(): any;
    findByName(name: string): any;
    protected __p: string;
    protected _hasUserValues: Set<string>;
    protected readonly hasUserValues: Set<string>;
    protected __m(propertyName: string): void;
    protected _stylingContainer: any;
    protected _stylingParent: any;
    protected _inStyling: boolean;
    protected _styling(container: any, component: any, parent?: any): void;
    private _propertyUpdated;
    private _propertyUpdated_wrapped;
    /**
     * Event raised when a property (including "effective" and non-dependency property) value changes.
    */
    propertyUpdated: (s: IgrColorScale, e: IgrPropertyUpdatedEventArgs) => void;
}
export interface IIgrColorScaleProps {
    /**
     * Event raised when a property (including "effective" and non-dependency property) value changes.
    */
    propertyUpdated?: (s: IgrColorScale, e: IgrPropertyUpdatedEventArgs) => void;
}
