/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Brush } from "igniteui-react-core";
import { XYChart } from "./XYChart";
import { IndicatorPane } from "./IndicatorPane";
import { Base, BaseError, EventArgs, runOn, delegateRemove, delegateCombine, typeCast, fromEnum, EnumUtil, Number_$type, String_$type, enumGetBox, markType, TypeRegistrar, fromEn } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { DataSeriesType_$type } from "igniteui-react-core";
import { IDataSeriesAdapterRule_$type } from "igniteui-react-core";
import { SimpleFinancialPriceSeriesRule } from "igniteui-react-core";
import { SubCollectionsRule } from "igniteui-react-core";
import { XamDataChart } from "./XamDataChart";
import { FinancialChartVolumeType_$type } from "./FinancialChartVolumeType";
import { FinancialChartXAxisMode_$type } from "./FinancialChartXAxisMode";
import { FinancialChartYAxisMode_$type } from "./FinancialChartYAxisMode";
import { FinancialChartType_$type } from "./FinancialChartType";
import { NumericYAxis } from "./NumericYAxis";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { FinancialChartZoomSliderType_$type } from "./FinancialChartZoomSliderType";
import { BrushCollection } from "igniteui-react-core";
import { FinancialChartRangeSelectorOptionCollection } from "./FinancialChartRangeSelectorOptionCollection";
import { ObservableCollection$1 } from "igniteui-react-core";
import { TemplatedHtmlControl } from "./TemplatedHtmlControl";
import { FinancialChartContext } from "./FinancialChartContext";
import { FinancialChartToolbarContext } from "./FinancialChartToolbarContext";
import { FinancialChartViewModel } from "./FinancialChartViewModel";
import { FinancialChartToolbarViewModel } from "./FinancialChartToolbarViewModel";
import { Series } from "./Series";
import { Rect } from "igniteui-react-core";
import { Axis } from "./Axis";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { MarkerSeries } from "./MarkerSeries";
import { SyncSettings } from "./SyncSettings";
import { SyncManager } from "./SyncManager";
import { FinancialOverlayType_$type } from "./FinancialOverlayType";
import { ArrayExtension } from "igniteui-react-core";
import { FinancialIndicatorType_$type } from "./FinancialIndicatorType";
import { IndicatorDisplayType_$type } from "./IndicatorDisplayType";
import { ITimeRangeSelectorAxis_$type } from "./ITimeRangeSelectorAxis";
import { FinancialChartVisualData } from "./FinancialChartVisualData";
import { FinancialChartCustomIndicatorArgs } from "./FinancialChartCustomIndicatorArgs";
import { ScalerParams } from "./ScalerParams";
import { stringReplace, stringJoin, stringIsNullOrEmpty } from "igniteui-react-core";
import { timeSpanFromDays } from "igniteui-react-core";
import { dateMaxValue, dateMinValue } from "igniteui-react-core";
import { isNaN_, isInfinity } from "igniteui-react-core";
import { FinancialChartTypePicker } from "./FinancialChartTypePicker";
import { FinancialChartIndicatorMenu } from "./FinancialChartIndicatorMenu";
import { TrendLineType_$type } from "igniteui-react-core";
import { FinancialChartIndicatorMenuContext } from "./FinancialChartIndicatorMenuContext";
import { FinancialChartTypePickerContext } from "./FinancialChartTypePickerContext";
import { FinancialChartRangeSelectorContext } from "./FinancialChartRangeSelectorContext";
import { FinancialChartToolbarVisualData } from "./FinancialChartToolbarVisualData";
import { FinancialChartRangeSelectorViewModel } from "./FinancialChartRangeSelectorViewModel";
import { FinancialChartRangeSelectorView } from "./FinancialChartRangeSelectorView";
/**
 * @hidden
 */
var FinancialChart = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(FinancialChart, _super);
    function FinancialChart() {
        var _this = _super.call(this) || this;
        _this.qr = null;
        _this.s9 = null;
        _this.s7 = null;
        _this.s4 = null;
        _this.s6 = null;
        _this.s8 = null;
        _this.s5 = null;
        _this.px = null;
        _this.tr = null;
        _this.ts = null;
        _this.to = null;
        _this.tt = null;
        _this.tu = null;
        _this.tp = null;
        _this.tq = null;
        _this.rf = null;
        _this.sk = 40;
        _this.ql = null;
        _this.qj = null;
        _this.qn = null;
        _this.qs = null;
        _this.t2 = null;
        _this.rb = null;
        _this.rz = false;
        _this.ry = false;
        _this.r4 = false;
        _this.rl = false;
        _this.tf = 10;
        _this.sm = NaN;
        _this.so = NaN;
        _this.sn = NaN;
        _this.sp = 0;
        _this.p3 = 0;
        _this.p6 = 0;
        _this.p8 = 0;
        _this.ri = true;
        _this.pz = 0;
        _this.rj = false;
        _this.qd = null;
        _this.qf = null;
        _this.r6 = null;
        _this.rk = true;
        _this.rc = null;
        _this.qa = 1;
        _this.o1 = null;
        _this.o2 = null;
        _this.o3 = null;
        _this.o4 = null;
        _this.o6 = null;
        _this.o5 = null;
        _this.o0 = null;
        _this.oz = null;
        _this.sl = 1;
        _this.sj = 1;
        _this.si = 1;
        _this.qp = null;
        _this.tb = -2147483648;
        _this.sh = 2;
        _this.te = 3;
        _this.tc = 10;
        _this.ta = 30;
        _this.td = 9;
        _this.pu = null;
        _this.pv = null;
        _this.pq = null;
        _this.applyCustomIndicators = null;
        _this.xm = null;
        _this.sq = 1;
        _this.rh = false;
        _this.qh = null;
        _this.se = dateMinValue();
        _this.sd = dateMaxValue();
        _this.sb = null;
        _this.f6();
        _this.sb = new ObservableCollection$1(Base.$, 0);
        if (_this.xAxisBreaks != null) {
            var a = _this.xAxisBreaks;
            a.collectionChanged = delegateCombine(a.collectionChanged, function (a, b) { return _this.xb(); });
        }
        _this.ww();
        return _this;
    }
    FinancialChart.prototype.g5 = function (a, b, c) {
        _super.prototype.g5.call(this, a, b, c);
        switch (a) {
            case "ToolbarTemplate":
            case "RangeSelectorTemplate":
                this.py = new FinancialChartToolbar(this, this.tz);
                break;
            case "Toolbar":
                var d = b;
                if (d != null) {
                    d.chartTypeChanged = delegateRemove(d.chartTypeChanged, runOn(this, this.wk));
                    d.trendLineTypeChanged = delegateRemove(d.trendLineTypeChanged, runOn(this, this.wn));
                    d.volumeTypeChanged = delegateRemove(d.volumeTypeChanged, runOn(this, this.wo));
                    d.l(null);
                }
                if (this.py != null) {
                    this.py.ac = this.p5;
                    this.py.ai = this.av;
                    this.py.y = this.p0;
                    this.py.al = this.rw;
                    if (this.s6 != null) {
                        this.py.l(this.s6);
                    }
                    var e = this.py;
                    e.chartTypeChanged = delegateCombine(e.chartTypeChanged, runOn(this, this.wk));
                    ;
                    var f = this.py;
                    f.trendLineTypeChanged = delegateCombine(f.trendLineTypeChanged, runOn(this, this.wn));
                    var g = this.py;
                    g.volumeTypeChanged = delegateCombine(g.volumeTypeChanged, runOn(this, this.wo));
                }
                break;
            case "ChartType":
                if (this.py != null) {
                    this.py.y = this.p0;
                }
                break;
            case "VolumeType":
                if (this.py != null) {
                    this.py.ac = this.p5;
                }
                break;
            case "TrendLineType":
                if (this.py != null) {
                    this.py.ai = this.av;
                }
                break;
            case "IsToolbarVisible":
                if (this.py == null) {
                    break;
                }
                this.py.al = this.rw;
                this.setGridRows();
                break;
        }
    };
    FinancialChart.prototype.wo = function (a, b) {
        this.p5 = this.py.ac;
    };
    FinancialChart.prototype.wn = function (a, b) {
        this.av = this.py.ai;
    };
    FinancialChart.prototype.wk = function (a, b) {
        this.p0 = this.py.y;
    };
    FinancialChart.prototype.ww = function () {
        this.qr = new IndicatorPane();
        this.qi = TypeRegistrar.create("FinancialLegend");
    };
    FinancialChart.prototype.provideGrid = function (a) {
        this.s9 = a;
        this.xh();
        this.setGridRows();
        if (this.py != null) {
            this.py.bg(a);
        }
    };
    FinancialChart.prototype.onDocumentClick = function (a) {
        if (this.py != null) {
            this.py.bl(a);
        }
    };
    FinancialChart.prototype.getContext = function () {
        var a = this.py.v();
        var b = new FinancialChartContext();
        b.vm = new FinancialChartViewModel();
        b.vm.toolbar = a;
        b.container = this.di;
        b.toolbarContainer = this.s6;
        b.legendContainer = this.s5;
        b.indicatorsContainer = this.s4;
        b.volumeContainer = this.s7;
        b.zoomContainer = this.s8;
        return b;
    };
    FinancialChart.prototype.provideContainer = function (a) {
        var b = a;
        if (b != null) {
            var c = "financialChartMainGrid";
            var d = b.createElement("div");
            d.setStyleProperty("width", "100%");
            d.setStyleProperty("height", "100%");
            if (this.py == null) {
                this.py = new FinancialChartToolbar(this, this.tz);
            }
            this.py.w.isIndicatorMenuVisible = this.rn && this.ro;
            this.s6 = b.getSubRenderer(d);
            this.py.l(this.s6);
            var e = b.createElement("div");
            e.setStyleProperty("width", "100%");
            e.setStyleProperty("height", "100%");
            var f = b.createElement("div");
            f.setStyleProperty("width", "100%");
            f.setStyleProperty("height", "100%");
            this.s5 = b.getSubRenderer(f);
            var g = b.createElement("div");
            g.setStyleProperty("width", "100%");
            g.setStyleProperty("height", "100%");
            this.s4 = b.getSubRenderer(g);
            var h = b.createElement("div");
            h.setStyleProperty("width", "100%");
            h.setStyleProperty("height", "100%");
            this.s7 = b.getSubRenderer(h);
            var i = b.createElement("div");
            i.setStyleProperty("width", "100%");
            i.setStyleProperty("height", "100%");
            this.s8 = b.getSubRenderer(i);
            a = b.getSubRenderer(e);
        }
        else {
            this.s6 = null;
            if (this.py != null) {
                this.py.l(null);
            }
            if (this.rg != null) {
                this.rg.provideContainer(null);
                this.rg = null;
            }
            if (this.qi != null) {
                this.qi.provideContainer(null);
            }
        }
        _super.prototype.provideContainer.call(this, a);
        if (b != null) {
            if (this.volumeChart != null) {
                this.volumeChart.provideContainer(this.s7);
            }
            if (this.qr != null) {
                this.qr.h(this.s4);
            }
            if (this.zoomSliderChart != null) {
                this.zoomSliderChart.provideContainer(this.s8);
                if (a != null) {
                    this.v4();
                }
                else {
                    this.rg = null;
                }
            }
            if (this.qi != null) {
                this.qi.provideContainer(this.s5);
            }
            this.setGridRows();
        }
    };
    FinancialChart.prototype.w7 = function (a, b, c) {
        if (a != null) {
            a.provideContainer(null);
        }
        if (b != null) {
            b.provideContainer(c);
        }
        this.setGridRows();
    };
    FinancialChart.prototype.xl = function (a, b) {
        this.w7(a, b, this.s8);
        if (b == null) {
            return;
        }
        this.v4();
    };
    FinancialChart.prototype.v4 = function () {
        var _this = this;
        if (this.s8 == null) {
            return;
        }
        if (this.rg != null) {
            this.rg.provideContainer(null);
        }
        this.rg = TypeRegistrar.create("ZoomSlider");
        this.rg.provideContainer(this.s8);
        var a = this.rg;
        a.windowRectChanged = delegateCombine(a.windowRectChanged, function (a, b) {
            if (_this.dataChart != null) {
                _this.dataChart.m6 = new Rect(0, _this.rg.windowRect.left, _this.dataChart.mr.top, _this.rg.windowRect.width, _this.dataChart.mr.height);
            }
        });
        this.v5();
    };
    FinancialChart.prototype.xj = function (a, b) {
        this.w7(a, b, this.s7);
    };
    FinancialChart.prototype.setGridRows = function () {
        if (this.s9 == null) {
            return;
        }
        var a = new Array(6);
        a[0] = (this.rw ? this.sv : 0) + "px";
        a[1] = this.rs ? "min-content" : "0px";
        a[2] = "auto";
        a[3] = this.indicatorCharts == null || this.indicatorCharts.count == 0 ? "0px" : this.indicatorCharts.count * 150 + "px";
        a[4] = this.volumeChart == null ? "0px" : "100px";
        a[5] = this.zoomSliderChart == null ? "0px" : "100px";
        if (this.rg != null) {
            if (a[5] == "0px") {
                this.rg.hide();
            }
            else {
                this.rg.show();
            }
        }
        this.s9.setStyleProperty("-ms-grid-rows", stringReplace(stringJoin.apply(void 0, tslib_1.__spread([" "], a)), "auto", "1fr"));
        this.s9.setStyleProperty("grid-template-rows", stringJoin.apply(void 0, tslib_1.__spread([" "], a)));
        if (this.di == null) {
            return;
        }
        if (this.dataChart != null) {
            this.dataChart.notifyContainerResized();
        }
        if (this.qr != null) {
            this.qr.f();
        }
        if (this.volumeChart != null) {
            this.volumeChart.notifyContainerResized();
        }
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.notifyContainerResized();
        }
        if (this.rg != null) {
            this.rg.notifySizeChanged();
        }
    };
    FinancialChart.prototype.gj = function () {
        _super.prototype.gj.call(this);
        this.il = 3;
        this.nw = 0;
        this.cu = NaN;
        this.cs = 30;
        this.bq = true;
        this.bw = false;
        if (this.dataChart != null) {
            var a = this.dataChart.bn.i.e();
            this.o9 = a.d;
            this.pa = a.e;
            this.o8 = a.d;
            this.xn = this.dataChart.po;
        }
        var b = new BrushCollection();
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "rgba(116, 70, 185, .3)";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "rgba(159, 179, 40, .3)";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "rgba(46, 156, 166, .3)";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "rgba(63, 81, 181, .3)";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "rgba(154, 154, 154, .3)";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "rgba(67, 156, 71, .3)";
            return $ret;
        })()));
        this.pb = b;
        var c = new BrushCollection();
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#7446B9";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#9FB328";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#2E9CA6";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#3F51B5";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#9A9A9A";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#439C47";
            return $ret;
        })()));
        this.pc = c;
    };
    FinancialChart.prototype.w3 = function () {
        if (this.qr != null) {
            this.qr.b = null;
            this.qr.b = this.indicatorCharts;
        }
        this.setGridRows();
    };
    FinancialChart.prototype.w4 = function () {
        this.setGridRows();
    };
    FinancialChart.prototype.xd = function () {
        this.w3();
    };
    FinancialChart.prototype.v3 = function () {
        if (this.rg == null || this.zoomSliderChart == null || this.dataChart == null || this.dataChart.series.count == 0) {
            return;
        }
        var a = this.di.rootWrapper.width();
        var b = this.dataChart.m5.left + this.dataChart.m5.width;
        var c = this.dataChart.m5.left;
        var d = a - b;
        this.rg.startInset = c - this.rg.trackStartInset;
        this.rg.endInset = d - this.rg.trackEndInset;
        if (this.rg.endInset < 0) {
            var e = this.rg.endInset;
            this.rg.endInset = 0;
            this.dataChart.el += (e * -1);
        }
        if (this.rg.startInset < 0) {
            var f = this.rg.startInset;
            this.rg.startInset = 0;
            this.dataChart.ej += (f * -1);
        }
        this.zoomSliderChart.ej = c;
        this.zoomSliderChart.el = d;
        this.zoomSliderChart.ef = this.rg.barExtent;
    };
    FinancialChart.prototype.wu = function () {
        this.v3();
    };
    FinancialChart.prototype.gg = function (a) {
        _super.prototype.gg.call(this, a);
        if (a != null) {
            a.ee = 0;
        }
    };
    FinancialChart.prototype.xo = function (a) {
        return a.mk();
    };
    FinancialChart.prototype.xr = function () {
        return this.s5 == null ? null : this.xq(this.s5.rootWrapper);
    };
    FinancialChart.prototype.xp = function (a) {
        if (a == null || a.d == null) {
            return null;
        }
        return this.xq(a.d.rootWrapper);
    };
    FinancialChart.prototype.xq = function (a) {
        if (a == null) {
            return null;
        }
        var b = a.getOffset();
        return new Rect(0, b.left, b.top, a.width(), a.height());
    };
    FinancialChart.prototype.sr = function () {
        if (this.s9 == null) {
            return NaN;
        }
        var a = this.s9.getOffset();
        return this.s9.width() + (a == null ? 0 : a.left);
    };
    FinancialChart.prototype.gr = function (source_, a, b) {
        _super.prototype.gr.call(this, source_, a, b);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.hz(source_, a, b);
        }
    };
    FinancialChart.prototype.gs = function (source_, a, b) {
        _super.prototype.gs.call(this, source_, a, b);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.h0(source_, a, b);
        }
    };
    FinancialChart.prototype.gq = function (source_) {
        _super.prototype.gq.call(this, source_);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.hw(source_);
        }
    };
    FinancialChart.prototype.gu = function (source_, a, b, c) {
        _super.prototype.gu.call(this, source_, a, b, c);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.h1(source_, a, b, c);
        }
    };
    FinancialChart.prototype.gm = function (a, b) {
        _super.prototype.gm.call(this, a, b);
        if (this.rt(a)) {
            a.toolTip = null;
        }
    };
    Object.defineProperty(FinancialChart.prototype, "py", {
        get: function () {
            return this.px;
        },
        set: function (a) {
            var b = this.py;
            if (a != b) {
                this.px = a;
                this.g3("Toolbar", b, this.py);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ty", {
        get: function () {
            return this.tr;
        },
        set: function (a) {
            var b = this.ty;
            if (a != b) {
                this.tr = a;
                this.g3("RangeSelectorTemplate", b, this.ty);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tz", {
        get: function () {
            return this.ts;
        },
        set: function (a) {
            var b = this.tz;
            if (a != b) {
                this.ts = a;
                this.g3("ToolbarTemplate", b, this.tz);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tv", {
        get: function () {
            return this.to;
        },
        set: function (a) {
            var b = this.tv;
            if (a != b) {
                this.to = a;
                this.g3("ChartTypePickerTemplate", b, this.tv);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "t0", {
        get: function () {
            return this.tt;
        },
        set: function (a) {
            var b = this.t0;
            if (a != b) {
                this.tt = a;
                this.g3("TrendLineTypePickerTemplate", b, this.t0);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "t1", {
        get: function () {
            return this.tu;
        },
        set: function (a) {
            var b = this.t1;
            if (a != b) {
                this.tu = a;
                this.g3("VolumeTypePickerTemplate", b, this.t1);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tw", {
        get: function () {
            return this.tp;
        },
        set: function (a) {
            var b = this.tw;
            if (a != b) {
                this.tp = a;
                this.g3("IndicatorMenuTemplate", b, this.tw);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tx", {
        get: function () {
            return this.tq;
        },
        set: function (a) {
            var b = this.tx;
            if (a != b) {
                this.tq = a;
                this.g3("OverlayPickerTemplate", b, this.tx);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "rg", {
        get: function () {
            return this.rf;
        },
        set: function (a) {
            var b = this.rg;
            if (a != b) {
                this.rf = a;
                this.g3("ZoomSlider", b, this.rg);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.get_cs = function () {
        return _super.prototype.get_cs.call(this);
    };
    FinancialChart.prototype.set_cs = function (a) {
        _super.prototype.set_cs.call(this, a);
    };
    FinancialChart.prototype.get_bq = function () {
        return _super.prototype.get_bq.call(this);
    };
    FinancialChart.prototype.set_bq = function (a) {
        _super.prototype.set_bq.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "sv", {
        get: function () {
            return this.sk;
        },
        set: function (a) {
            var b = this.sv;
            if (a != b) {
                this.sk = a;
                this.g3("ToolbarHeight", b, this.sv);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.id = function () {
        return this.xAxis;
    };
    FinancialChart.prototype.ie = function () {
        return this.yAxis;
    };
    FinancialChart.prototype.onAttachedToUI = function () {
        _super.prototype.onAttachedToUI.call(this);
        if (this.rg != null) {
            this.rg.onAttachedToUI();
        }
    };
    FinancialChart.prototype.onDetachedFromUI = function () {
        _super.prototype.onDetachedFromUI.call(this);
        if (this.rg != null) {
            this.rg.onDetachedFromUI();
        }
    };
    FinancialChart.prototype.u = function (a) {
        return 20;
    };
    FinancialChart.prototype.get_b5 = function () {
        return ((function () {
            var $ret = new List$1(DataSeriesType_$type, 0);
            $ret.add(20);
            return $ret;
        })());
    };
    Object.defineProperty(FinancialChart.prototype, "b5", {
        get: function () {
            return this.get_b5();
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.get_b4 = function () {
        return ((function () {
            var $ret = new List$1(IDataSeriesAdapterRule_$type, 0);
            $ret.add(new SimpleFinancialPriceSeriesRule());
            $ret.add(new SubCollectionsRule());
            return $ret;
        })());
    };
    Object.defineProperty(FinancialChart.prototype, "b4", {
        get: function () {
            return this.get_b4();
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.pk = function (a) {
        return this.pl(a);
    };
    FinancialChart.prototype.qy = function (a) {
        return this.qz(a);
    };
    FinancialChart.prototype.pj = function (a) {
        var b = this.pk(0);
        b.name = a;
        return b;
    };
    FinancialChart.prototype.f3 = function () {
        this.xAxis = this.pj("xAxis");
        this.yAxis = this.qy(0);
        this.yAxis.name = "yAxis";
        this.volumeAxis = this.qy(0);
        this.volumeAxis.name = "volumeAxis";
        this.volumeXAxis = this.pj("volumeXAxis");
        this.r8 = new List$1(NumericYAxis.$, 0);
        this.sa = new List$1(CategoryAxisBase.$, 0);
        this.indicatorAxis = this.qy(0);
        this.indicatorAxis.name = "indicatorAxis";
        this.indicatorXAxis = this.pj("indicatorXAxis_0");
        this.r8.add(this.indicatorAxis);
        this.sa.add(this.indicatorXAxis);
        if (this.xAxis.ax == null) {
            this.xAxis.ax = new AxisLabelSettings();
        }
        if (this.yAxis.ax == null) {
            this.yAxis.ax = new AxisLabelSettings();
        }
        if (this.volumeAxis.ax == null) {
            this.volumeAxis.ax = new AxisLabelSettings();
        }
        if (this.volumeXAxis.ax == null) {
            this.volumeAxis.ax = new AxisLabelSettings();
        }
        if (this.indicatorAxis.ax == null) {
            this.indicatorAxis.ax = new AxisLabelSettings();
        }
        if (this.indicatorXAxis.ax == null) {
            this.indicatorXAxis.ax = new AxisLabelSettings();
        }
        this.zoomSliderAxis = this.qy(0);
        this.zoomSliderAxis.name = "zoomSliderAxis";
        this.zoomSliderXAxis = this.pj("zoomSliderXAxis");
        if (this.zoomSliderAxis.ax == null) {
            this.zoomSliderAxis.ax = new AxisLabelSettings();
        }
        if (this.zoomSliderXAxis.ax == null) {
            this.zoomSliderXAxis.ax = new AxisLabelSettings();
        }
    };
    FinancialChart.prototype.f1 = function (a, b) {
        var c = typeCast(MarkerSeries.$, a);
        if (c != null) {
            c.l2 = this.ai(a, b);
        }
    };
    FinancialChart.prototype.hj = function (a) {
        if (a.suggestedSecondaryAxis == 2) {
            this.yAxis.j0 = true;
            this.yAxis.kn = 10;
        }
    };
    FinancialChart.prototype.hm = function () {
        this.yAxis.j0 = this.r1;
        this.yAxis.kn = this.tn;
    };
    FinancialChart.prototype.p2 = function (a) {
        var b;
        if (this.p0 == 0) {
            if (a == null || a.index > 0 || stringIsNullOrEmpty(a.getMemberPathFor(12))) {
                b = 4;
            }
            else {
                b = 2;
            }
        }
        else {
            b = this.p0;
        }
        b = this.p1(b);
        return b;
    };
    FinancialChart.prototype.p1 = function (a) {
        if ((a == 1 || a == 2)) {
            if (TypeRegistrar.isRegistered("FinancialPriceSeries")) {
                return a;
            }
            a = 4;
        }
        if (a == 4) {
            if (TypeRegistrar.isRegistered("LineSeries")) {
                return a;
            }
            a = 3;
        }
        if (a == 3) {
            if (TypeRegistrar.isRegistered("ColumnSeries")) {
                return a;
            }
        }
        return a;
    };
    FinancialChart.prototype.qb = function (a) {
        if ((a == 2 || a == 3)) {
            if (TypeRegistrar.isRegistered("FinancialPriceSeries")) {
                return a;
            }
            a = 5;
        }
        if (a == 5) {
            if (TypeRegistrar.isRegistered("LineSeries")) {
                return a;
            }
            a = 6;
        }
        if (a == 6) {
            if (TypeRegistrar.isRegistered("AreaSeries")) {
                return a;
            }
            a = 4;
        }
        if (a == 4) {
            if (TypeRegistrar.isRegistered("ColumnSeries")) {
                return a;
            }
        }
        return a;
    };
    FinancialChart.prototype.p4 = function (a) {
        if (a == 2) {
            if (TypeRegistrar.isRegistered("LineSeries")) {
                return a;
            }
            a = 3;
        }
        if (a == 3) {
            if (TypeRegistrar.isRegistered("AreaSeries")) {
                return a;
            }
            a = 1;
        }
        if (a == 1) {
            if (TypeRegistrar.isRegistered("ColumnSeries")) {
                return a;
            }
        }
        return a;
    };
    FinancialChart.prototype.t9 = function (a) {
        var b = a.getMemberPathFor(14);
        if (stringIsNullOrEmpty(b)) {
            b = a.getMemberPathFor(11);
        }
        return b;
    };
    FinancialChart.prototype.pl = function (axisType_) {
        if ((this.externalObject)) {
            return (this.externalObject.createXAxis(axisType_).i);
        }
        else {
            var a = void 0;
            switch (axisType_) {
                case 0:
                    if (TypeRegistrar.isRegistered("OrdinalTimeXAxis")) {
                        a = TypeRegistrar.create("OrdinalTimeXAxis");
                    }
                    else if (TypeRegistrar.isRegistered("TimeXAxis")) {
                        a = TypeRegistrar.create("TimeXAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
                case 1:
                    if (TypeRegistrar.isRegistered("TimeXAxis")) {
                        a = TypeRegistrar.create("TimeXAxis");
                    }
                    else if (TypeRegistrar.isRegistered("OrdinalTimeXAxis")) {
                        a = TypeRegistrar.create("OrdinalTimeXAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
            }
            return null;
        }
    };
    FinancialChart.prototype.qz = function (axisType_) {
        if ((this.externalObject)) {
            return (this.externalObject.createYAxis(axisType_).i);
        }
        else {
            var a = void 0;
            switch (axisType_) {
                case 0:
                    if (TypeRegistrar.isRegistered("NumericYAxis")) {
                        a = TypeRegistrar.create("NumericYAxis");
                    }
                    else if (TypeRegistrar.isRegistered("PercentChangeYAxis")) {
                        a = TypeRegistrar.create("PercentChangeYAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
                case 1:
                    if (TypeRegistrar.isRegistered("PercentChangeYAxis")) {
                        a = TypeRegistrar.create("PercentChangeYAxis");
                    }
                    else if (TypeRegistrar.isRegistered("NumericYAxis")) {
                        a = TypeRegistrar.create("NumericYAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
            }
            return null;
        }
    };
    FinancialChart.prototype.q5 = function () {
        return this.ar(1);
    };
    FinancialChart.prototype.q6 = function () {
        return this.ar(0);
    };
    FinancialChart.prototype.q4 = function () {
        return this.ar(2);
    };
    FinancialChart.prototype.q7 = function () {
        return this.ar(20);
    };
    Object.defineProperty(FinancialChart.prototype, "rm", {
        get: function () {
            return (TypeRegistrar.isRegistered("HorizontalAnchoredCategorySeriesProxy"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "qm", {
        get: function () {
            if (TypeRegistrar.isRegistered("HorizontalAnchoredCategorySeriesProxy")) {
                return TypeRegistrar.create("HorizontalAnchoredCategorySeriesProxy");
            }
            else {
                throw new BaseError(1, "horizontal series module is not loaded, but is required.");
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "rp", {
        get: function () {
            return (TypeRegistrar.isRegistered("FinancialPriceSeriesProxy"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "qk", {
        get: function () {
            if (TypeRegistrar.isRegistered("FinancialPriceSeriesProxy")) {
                return TypeRegistrar.create("FinancialPriceSeriesProxy");
            }
            else {
                throw new BaseError(1, "financial series module is not loaded, but is required.");
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "rn", {
        get: function () {
            return (TypeRegistrar.isRegistered("IndicatorProxy"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "qo", {
        get: function () {
            if (TypeRegistrar.isRegistered("IndicatorProxy")) {
                return TypeRegistrar.create("IndicatorProxy");
            }
            else {
                throw new BaseError(1, "financial series module is not loaded, but is required.");
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ro", {
        get: function () {
            return (TypeRegistrar.isRegistered("OverlayProxy"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "qt", {
        get: function () {
            if (TypeRegistrar.isRegistered("OverlayProxy")) {
                return TypeRegistrar.create("OverlayProxy");
            }
            else {
                throw new BaseError(1, "overlay series module is not loaded, but is required.");
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.aq = function (a, b) {
        var c = this.t9(a);
        switch (this.p2(a)) {
            case 3:
                var d = this.q5();
                this.qm.setValueMemberPath(d, c);
                this.qm.setXAxis(d, this.xAxis);
                this.qm.setYAxis(d, this.yAxis);
                this.qm.setCategoryMode(d, 1);
                return d;
            case 4:
                var e = this.q6();
                this.qm.setValueMemberPath(e, c);
                this.qm.setXAxis(e, this.xAxis);
                this.qm.setYAxis(e, this.yAxis);
                this.qm.setCategoryMode(e, 1);
                return e;
            default:
            case 1:
            case 2:
                var f = this.q7();
                this.qk.setOpenMemberPath(f, a.getMemberPathFor(11));
                this.qk.setHighMemberPath(f, a.getMemberPathFor(12));
                this.qk.setLowMemberPath(f, a.getMemberPathFor(13));
                this.qk.setCloseMemberPath(f, a.getMemberPathFor(14));
                this.qk.setVolumeMemberPath(f, a.getMemberPathFor(15));
                this.qk.setXAxis(f, this.xAxis);
                this.qk.setYAxis(f, this.yAxis);
                this.qk.setDisplayType(f, this.p0 == 1 ? 1 : 0);
                this.qk.setCategoryMode(f, 1);
                return f;
        }
    };
    FinancialChart.prototype.hl = function () {
        _super.prototype.hl.call(this);
        this.ws(this.xAxis);
        this.xf(false);
        if (this.p5 != 0 && this.volumeChart != null) {
            this.wy();
        }
        this.ws(this.volumeXAxis);
        this.ws(this.indicatorXAxis);
        this.xc();
        this.xe();
        if (this.qc != 0) {
            this.wz();
            this.ws(this.zoomSliderXAxis);
        }
    };
    FinancialChart.prototype.nk = function (a, b) {
        var e_1, _a;
        _super.prototype.nk.call(this, a, b);
        a(this.volumeXAxis);
        if (this.sa != null) {
            try {
                for (var _b = tslib_1.__values(fromEnum(this.sa)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    a(c);
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        }
        var d = true;
        switch (b) {
            case "XAxisMajorStroke":
            case "XAxisMajorStrokeThickness":
                d = false;
                break;
        }
        if (d) {
            a(this.zoomSliderXAxis);
        }
    };
    FinancialChart.prototype.no = function (a, b) {
        var e_2, _a;
        _super.prototype.no.call(this, a, b);
        if (b) {
            a(this.volumeAxis);
            if (this.r8 != null) {
                try {
                    for (var _b = tslib_1.__values(fromEnum(this.r8)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var c = _c.value;
                        a(c);
                    }
                }
                catch (e_2_1) {
                    e_2 = { error: e_2_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_2)
                            throw e_2.error;
                    }
                }
            }
            a(this.zoomSliderAxis);
        }
    };
    FinancialChart.prototype.nm = function (a) {
        _super.prototype.nm.call(this, a);
        this.ne(this.volumeXAxis, a);
        this.ne(this.indicatorXAxis, a);
        this.ne(this.zoomSliderXAxis, a);
    };
    FinancialChart.prototype.nq = function (a) {
        _super.prototype.nq.call(this, a);
        this.ne(this.volumeAxis, a);
        this.ne(this.indicatorAxis, a);
        this.ne(this.zoomSliderAxis, a);
    };
    FinancialChart.prototype.np = function (a) {
        _super.prototype.np.call(this, a);
        this.nd(this.volumeAxis, a);
        this.nd(this.indicatorAxis, a);
        this.nd(this.zoomSliderAxis, a);
    };
    FinancialChart.prototype.nl = function (a) {
        _super.prototype.nl.call(this, a);
        this.nd(this.volumeXAxis, a);
        this.nd(this.indicatorXAxis, a);
        this.nd(this.zoomSliderXAxis, a);
    };
    FinancialChart.prototype.gf = function (a) {
        var _this = this;
        _super.prototype.gf.call(this, a);
        if (a == null) {
            return;
        }
        if (a == this.zoomSliderChart) {
            a.nt = a.nv = false;
            a.legend = null;
            if (this.dataChart != null) {
                a.nb = this.dataChart.nb;
                a.ne = this.dataChart.ne;
            }
        }
        else {
            SyncManager.d(a, ((function () {
                var $ret = new SyncSettings();
                $ret.syncChannel = _this.u3();
                $ret.synchronizeHorizontally = true;
                $ret.synchronizeVertically = false;
                return $ret;
            })()));
            SyncManager.c(a);
        }
        a.bc = 2;
    };
    FinancialChart.prototype.u3 = function () {
        if (this.t2 == null) {
            FinancialChart.tm++;
            this.t2 = FinancialChart.tm.toString();
        }
        return this.t2;
    };
    FinancialChart.prototype.we = function (a, b) {
        this.v0();
        this.wu();
    };
    FinancialChart.prototype.v0 = function () {
        var e_3, _a;
        if (this.yAxis.b1()) {
            return;
        }
        var a = this.yAxis.au.a5;
        if (this.p5 != 0) {
            a = Math.max(a, this.volumeAxis.au.a5);
        }
        try {
            for (var _b = tslib_1.__values(fromEnum(this.r8)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                a = Math.max(a, b.au.a5);
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
        this.v1(a);
    };
    FinancialChart.prototype.v1 = function (a) {
        var e_4, _a;
        if (this.yAxis.b1()) {
            return;
        }
        this.yAxis.d6 = this.volumeAxis.d6 = a;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.r8)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                b.d6 = a;
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
        this.zoomSliderAxis.d6 = this.yAxis.d6;
    };
    FinancialChart.prototype.v6 = function (a) {
        if (this.indicatorCharts == null) {
            return;
        }
        for (var b = 0; b < this.indicatorCharts.count; b++) {
            var c = this.indicatorCharts._inner[b];
            for (var d = 0; d < c.series.count; d++) {
                a(c.series._inner[d], b);
            }
        }
    };
    FinancialChart.prototype.v9 = function (a) {
        if (this.volumeChart == null) {
            return;
        }
        for (var b = 0; b < this.volumeChart.series.count; b++) {
            a(this.volumeChart.series._inner[b], b);
        }
    };
    FinancialChart.prototype.v7 = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (!this.rt(c)) {
                continue;
            }
            a(c, b);
        }
    };
    FinancialChart.prototype.v8 = function (a, b) {
        if (this.dataChart == null) {
            return;
        }
        for (var c = 0; c < this.dataChart.series.count; c++) {
            var d = this.dataChart.series._inner[c];
            if (this.rt(d)) {
                continue;
            }
            var e = this.tg(d, c);
            a(d, e);
        }
        if (b) {
            this.wa(a);
        }
    };
    FinancialChart.prototype.wa = function (a) {
        if (this.zoomSliderChart == null) {
            return;
        }
        for (var b = 0; b < this.zoomSliderChart.series.count; b++) {
            a(this.zoomSliderChart.series._inner[b], b);
        }
    };
    FinancialChart.prototype.tg = function (a, b) {
        if (a.bq != this.dataChart) {
            return b;
        }
        var c = this.v == null || this.v.dataSeries == null ? 0 : this.v.dataSeries.count;
        var d = this.qg == null ? 0 : this.qg.count;
        return b - (c * d);
    };
    FinancialChart.prototype.f9 = function (a) {
        _super.prototype.f9.call(this, a);
        this.v9(a);
        this.v6(a);
        this.wa(a);
    };
    Object.defineProperty(FinancialChart.prototype, "volumeChart", {
        get: function () {
            return this.rb;
        },
        set: function (a) {
            var b = this.volumeChart;
            if (a != b) {
                this.rb = a;
                this.g3("VolumeChart", b, this.volumeChart);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.wy = function () {
        if (this.dataChart == null) {
            return;
        }
        this.volumeChart.series.clear();
        var a = new List$1(Series.$, 0);
        var b = -1;
        for (var c = 0; c < this.dataChart.series.count; c++) {
            var d = this.dataChart.series._inner[c];
            if (this.rt(d) || d.cj) {
                continue;
            }
            b++;
            var e = void 0;
            var f = this.p5;
            f = this.p4(f);
            switch (f) {
                case 2:
                    e = this.q6();
                    break;
                case 3:
                    e = this.q4();
                    break;
                default:
                case 1:
                    e = this.q5();
                    break;
            }
            this.qm.setCategoryMode(e, 1);
            e.name = "volumeSeries_" + b;
            e.itemsSource = d.itemsSource;
            this.qm.setXAxis(e, this.volumeXAxis);
            this.qm.setYAxis(e, this.volumeAxis);
            this.qm.setValueMemberPath(e, this.v != null && this.v.dataSeries != null && this.v.dataSeries.count > b ? this.v.dataSeries._inner[b].getMemberPathFor(15) : null);
            e.fx = d.fx + " Volume";
            e.k6 = ArrayExtension.getModulus$1(Brush.$, this.pd, b);
            e.k9 = ArrayExtension.getModulus$1(Brush.$, this.pe, b);
            e.ey = this.sw;
            a.add(e);
        }
        var g = this.b1("volume", false);
        if (g != null) {
            a.o(g);
        }
        for (var h = 0; h < a.count; h++) {
            var i = a._inner[h];
            this.volumeChart.series.add(i);
            this.gk(i, h);
        }
    };
    FinancialChart.prototype.rq = function (a) {
        if (!this.rm) {
            return false;
        }
        return this.qm.matchesType(a);
    };
    FinancialChart.prototype.ru = function (a) {
        if (!this.rp) {
            return false;
        }
        return this.qk.matchesType(a);
    };
    FinancialChart.prototype.rr = function (a) {
        if (!this.rn) {
            return false;
        }
        return this.qo.matchesType(a);
    };
    FinancialChart.prototype.rt = function (a) {
        if (!this.ro) {
            return false;
        }
        return this.qt.matchesType(a);
    };
    FinancialChart.prototype.wx = function () {
        if (this.dataChart == null) {
            return;
        }
        var a = 0;
        var b = this.qe == null ? 0 : this.qe.count;
        var c = this.customIndicatorNames == null ? 0 : this.customIndicatorNames.count;
        var d = b + c;
        for (var e = 0; e < d; e++) {
            var f = new List$1(Series.$, 0);
            var g = this.indicatorCharts._inner[e];
            var h = e >= b;
            var i = h ? this.customIndicatorNames._inner[e - b] : EnumUtil.getName(FinancialIndicatorType_$type, this.qe._inner[e]);
            var j = -1;
            for (var k = 0; k < this.dataChart.series.count; k++) {
                var l = this.dataChart.series._inner[k];
                if (this.rt(l) || l.cj) {
                    continue;
                }
                j++;
                var m = void 0;
                if (h) {
                    var n = this.q8("Custom");
                    this.qo.handleCustomIndicatorEvent(n, runOn(this, this.wc));
                    m = n;
                }
                else {
                    m = this.ra(this.qe._inner[e]);
                }
                if (m == null) {
                    continue;
                }
                m.name = "indicator_" + a++;
                this.qo.setXAxis(m, this.sa._inner[e]);
                this.qo.setYAxis(m, this.r8._inner[e]);
                m.itemsSource = l.itemsSource;
                this.qo.setOpenMemberPath(m, this.v.dataSeries._inner[j].getMemberPathFor(11));
                this.qo.setHighMemberPath(m, this.v.dataSeries._inner[j].getMemberPathFor(12));
                this.qo.setLowMemberPath(m, this.v.dataSeries._inner[j].getMemberPathFor(13));
                this.qo.setCloseMemberPath(m, this.v.dataSeries._inner[j].getMemberPathFor(14));
                this.qo.setVolumeMemberPath(m, this.v.dataSeries._inner[j].getMemberPathFor(15));
                m.fx = l.fx + " " + i;
                m.k6 = ArrayExtension.getModulus$1(Brush.$, this.o7, e);
                m.ey = this.st;
                if (this.rr(m)) {
                    this.qo.setNegativeBrush(m, ArrayExtension.getModulus$1(Brush.$, this.o8, e));
                    this.qo.setDisplayType(m, ArrayExtension.getModulus$1(IndicatorDisplayType_$type, this.qq, e));
                }
                if (this.ti != -2147483648 && this.rr(m)) {
                    this.qo.setPeriodOverride(m, this.ti);
                }
                if (this.rr(m)) {
                    this.qo.setSmoothingPeriod(m, this.tl);
                }
                if (this.rr(m)) {
                    this.qo.setSignalPeriod(m, this.tk);
                }
                if (this.rr(m)) {
                    this.qo.setShortPeriod(m, this.tj);
                    this.qo.setLongPeriod(m, this.th);
                }
                this.gk(m, e);
                f.add(m);
            }
            var o = this.b1(i, false);
            for (var p = 0; p < f.count; p++) {
                var q = f._inner[p];
                g.series.add(q);
            }
            if (o != null) {
                for (var r = 0; r < o.count; r++) {
                    var s = o._inner[r];
                    g.series.add(s);
                    this.gk(s, r);
                }
            }
        }
    };
    FinancialChart.prototype.q8 = function (indicatorName_) {
        return (this.externalObject.createIndicator(indicatorName_ + 'Indicator').i);
    };
    FinancialChart.prototype.ra = function (a) {
        return this.q8(EnumUtil.getName(FinancialIndicatorType_$type, a));
    };
    FinancialChart.prototype.xf = function (a) {
        if (this.py == null) {
            return;
        }
        var b = this.xAxis;
        if (b.actualMinimumValue > b.actualMaximumValue) {
            return;
        }
        this.py.as = b.actualMinimumValue;
        this.py.ar = b.actualMaximumValue;
        if (a) {
            this.py.au = b.visibleMinimum;
            this.py.at = b.visibleMaximum;
        }
        this.py.bn();
    };
    FinancialChart.prototype.dj = function () {
        var e_5, _a, e_6, _b;
        var _this = this;
        var a = ((function () {
            var $ret = new FinancialChartVisualData();
            $ret.mainChart = _super.prototype.dj.call(_this);
            $ret.volumeChart = _this.volumeChart == null ? null : _this.volumeChart.og();
            $ret.toolbar = _this.py == null ? null : _this.py.aj();
            $ret.zoomChart = _this.zoomSliderChart == null ? null : _this.zoomSliderChart.og();
            return $ret;
        })());
        if (this.indicatorCharts != null) {
            a.indicatorCharts = new List$1(Base.$, 0);
            try {
                for (var _c = tslib_1.__values(fromEnum(this.indicatorCharts)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var b = _d.value;
                    a.indicatorCharts.add1(b.og());
                }
            }
            catch (e_5_1) {
                e_5 = { error: e_5_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_5)
                        throw e_5.error;
                }
            }
        }
        if (this.dataChart != null) {
            a.mainChartLeft = this.xo(this.dataChart).x;
            a.mainChartTop = this.xo(this.dataChart).y;
        }
        if (this.volumeChart != null) {
            a.volumeChartLeft = this.xo(this.volumeChart).x;
            a.volumeChartTop = this.xo(this.volumeChart).y;
        }
        if (this.zoomSliderChart != null) {
            a.zoomChartLeft = this.xo(this.zoomSliderChart).x;
            a.zoomChartTop = this.xo(this.zoomSliderChart).y;
        }
        if (this.py != null) {
            var c = this.xp(this.py);
            a.toolbarLeft = c.left;
            a.toolbarTop = c.top;
            a.toolbarWidth = c.width;
            a.toolbarHeight = c.height;
        }
        if (this.indicatorCharts != null) {
            a.indicatorChartLefts = new List$1(Number_$type, 0);
            a.indicatorChartTops = new List$1(Number_$type, 0);
            try {
                for (var _e = tslib_1.__values(fromEnum(this.indicatorCharts)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var d = _f.value;
                    a.indicatorChartLefts.add(this.xo(d).x);
                    a.indicatorChartTops.add(this.xo(d).y);
                }
            }
            catch (e_6_1) {
                e_6 = { error: e_6_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_6)
                        throw e_6.error;
                }
            }
        }
        var e = this.xr();
        a.legendLeft = e.left;
        a.legendTop = e.top;
        a.legendWidth = e.width;
        a.legendHeight = e.height;
        a.legend = this.qi == null ? null : this.qi.exportVisualData();
        return a;
    };
    FinancialChart.prototype.t7 = function () {
        var a = this.dj();
        a.scaleByViewport();
        return a.serialize();
    };
    FinancialChart.prototype.q9 = function (overlayName_) {
        return (this.externalObject.createOverlay(overlayName_ + 'Overlay').i);
    };
    FinancialChart.prototype.xe = function () {
        var e_7, _a, e_8, _b;
        if (this.dataChart == null) {
            return;
        }
        var a = new List$1(Series.$, 0);
        try {
            for (var _c = tslib_1.__values(fromEnum(this.dataChart.series)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var b = _d.value;
                if (this.rt(b)) {
                    a.add(b);
                }
            }
        }
        catch (e_7_1) {
            e_7 = { error: e_7_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_7)
                    throw e_7.error;
            }
        }
        try {
            for (var _e = tslib_1.__values(fromEnum(a)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var c = _f.value;
                this.dataChart.series.remove(c);
            }
        }
        catch (e_8_1) {
            e_8 = { error: e_8_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_8)
                    throw e_8.error;
            }
        }
        if (this.qg == null) {
            return;
        }
        var d = new List$1(Series.$, 0);
        var e = -1;
        for (var f = 0; f < this.dataChart.series.count; f++) {
            var g = this.dataChart.series._inner[f];
            if (this.rt(g) || g.cj) {
                continue;
            }
            e++;
            for (var h = 0; h < this.qg.count; h++) {
                var i = this.qg._inner[h];
                var j = void 0;
                switch (i) {
                    case 1:
                        j = this.q9(EnumUtil.getName(FinancialOverlayType_$type, i));
                        break;
                    default:
                    case 0:
                        j = this.q9(EnumUtil.getName(FinancialOverlayType_$type, i));
                        break;
                }
                j.name = g.name + "_" + EnumUtil.getName(FinancialOverlayType_$type, i);
                this.qt.setXAxis(j, this.xAxis);
                this.qt.setYAxis(j, this.yAxis);
                j.itemsSource = g.itemsSource;
                var k = e * this.qg.count + h;
                j.k6 = ArrayExtension.getModulus$1(Brush.$, this.pb, k);
                j.k9 = ArrayExtension.getModulus$1(Brush.$, this.pc, k);
                j.ey = this.su;
                j.fx = g.fx + " " + EnumUtil.getName(FinancialOverlayType_$type, i);
                var l = g;
                if (l == null) {
                    continue;
                }
                var m = this.v.dataSeries._inner[e];
                this.qt.setOpenMemberPath(j, m.getMemberPathFor(11));
                this.qt.setHighMemberPath(j, m.getMemberPathFor(12));
                this.qt.setLowMemberPath(j, m.getMemberPathFor(13));
                this.qt.setCloseMemberPath(j, m.getMemberPathFor(14));
                this.qt.setVolumeMemberPath(j, m.getMemberPathFor(15));
                d.add(j);
            }
        }
        var n = new Array(this.dataChart.series.count);
        this.dataChart.series.copyTo(n, 0);
        this.dataChart.skipDataCleanup = true;
        this.dataChart.series.clear();
        this.dataChart.skipDataCleanup = false;
        for (var o = 0; o < n.length; o++) {
            n[o].fh = -1;
        }
        d.o(n);
        for (var p = 0; p < d.count; p++) {
            var q = d._inner[p];
            this.dataChart.series.add(q);
            this.gk(q, p);
        }
    };
    FinancialChart.prototype.xc = function () {
        var e_9, _a;
        if (this.rz) {
            return;
        }
        this.rz = true;
        if (this.indicatorCharts != null) {
            var a = this.indicatorCharts;
            this.indicatorCharts = null;
            try {
                for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    this.wt(b);
                }
            }
            catch (e_9_1) {
                e_9 = { error: e_9_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_9)
                        throw e_9.error;
                }
            }
        }
        if ((this.qe == null || this.qe.count == 0) && (this.customIndicatorNames == null || this.customIndicatorNames.count == 0)) {
            this.indicatorCharts = null;
            if (this.r8 != null) {
                this.r8.clear();
            }
            if (this.sa != null) {
                this.sa.clear();
            }
            this.w3();
            this.xd();
            this.rz = false;
            return;
        }
        if (this.indicatorCharts == null) {
            this.indicatorCharts = new List$1(XamDataChart.$, 0);
        }
        this.indicatorCharts.clear();
        this.r8.clear();
        this.sa.clear();
        var c = this.qe == null ? 0 : this.qe.count;
        var d = this.customIndicatorNames == null ? 0 : this.customIndicatorNames.count;
        var e = c + d;
        for (var f = 0; f < e; f++) {
            var g = new XamDataChart();
            this.indicatorCharts.add(g);
            this.wr(g);
            var h = f >= c;
            g.gr = h ? this.customIndicatorNames._inner[f - c] : EnumUtil.getName(FinancialIndicatorType_$type, this.qe._inner[f]);
            if (this.indicatorAxis != null) {
                var i = void 0;
                var j = void 0;
                if (f == 0) {
                    i = this.indicatorAxis;
                    j = this.indicatorXAxis;
                }
                else {
                    i = new NumericYAxis();
                    if (!this.indicatorXAxis.b7) {
                        j = this.pk(0);
                    }
                    else {
                        j = this.pk(1);
                    }
                }
                j.name = "indicatorXAxis_" + f;
                i.name = "indicatorAxis_" + f;
                g.axes.add(i);
                g.axes.add(j);
                this.r8.add(i);
                this.sa.add(j);
                if (this.bh) {
                    this.nh(i);
                }
                if (this.bh) {
                    this.nf(j);
                }
            }
        }
        this.wx();
        this.w3();
        if (this.py != null) {
            this.py.ae = this.qe;
        }
        this.v2();
        this.xd();
        this.rz = false;
    };
    FinancialChart.prototype.gc = function () {
        var e_10, _a, e_11, _b;
        _super.prototype.gc.call(this);
        this.nf(this.xAxis);
        this.nf(this.volumeXAxis);
        if (this.sa != null) {
            try {
                for (var _c = tslib_1.__values(fromEnum(this.sa)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var a = _d.value;
                    this.nf(a);
                }
            }
            catch (e_10_1) {
                e_10 = { error: e_10_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_10)
                        throw e_10.error;
                }
            }
        }
        this.nh(this.yAxis);
        this.nh(this.volumeAxis);
        if (this.r8 != null) {
            try {
                for (var _e = tslib_1.__values(fromEnum(this.r8)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var b = _f.value;
                    this.nh(b);
                }
            }
            catch (e_11_1) {
                e_11 = { error: e_11_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_11)
                        throw e_11.error;
                }
            }
        }
        this.nf(this.zoomSliderXAxis);
        this.nh(this.zoomSliderAxis);
    };
    FinancialChart.prototype.get_bv = function () {
        return !this.rx;
    };
    Object.defineProperty(FinancialChart.prototype, "r3", {
        get: function () {
            return (this.externalObject._dynamicContent);
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.xk = function (a, b) {
        this.w6(a, b);
        this.v2();
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.axes.add(this.zoomSliderAxis);
            this.zoomSliderChart.axes.add(this.zoomSliderXAxis);
        }
        this.wz();
        this.zoomSliderXAxis.itemsSource = this.xAxis.itemsSource;
        this.w4();
        this.xl(a, b);
    };
    FinancialChart.prototype.wz = function () {
        if (this.dataChart == null || this.zoomSliderChart == null) {
            return;
        }
        this.zoomSliderChart.series.clear();
        var a = new List$1(Series.$, 0);
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (this.rt(c) || c.cj) {
                continue;
            }
            var d = void 0;
            var e = this.qc;
            e = this.qb(e);
            var f = this.tg(c, b);
            if (e == 1) {
                switch (this.p2(this.v != null && this.v.dataSeries != null && this.v.dataSeries.count > f ? this.v.dataSeries._inner[f] : null)) {
                    case 1:
                        e = 2;
                        break;
                    case 2:
                        e = 3;
                        break;
                    case 3:
                        e = 4;
                        break;
                    case 4:
                        e = 5;
                        break;
                }
            }
            switch (e) {
                case 2:
                    d = this.q7();
                    this.qk.setDisplayType(d, 1);
                    break;
                case 3:
                    d = this.q7();
                    this.qk.setDisplayType(d, 0);
                    break;
                case 5:
                    d = this.q6();
                    break;
                case 6:
                    d = this.q4();
                    break;
                default:
                case 4:
                    d = this.q5();
                    break;
            }
            var g = this.v != null && this.v.dataSeries != null && this.v.dataSeries.count > f ? this.v.dataSeries._inner[f] : null;
            if (d.cl && !d.cr) {
                this.qm.setCategoryMode(d, 1);
                this.qm.setXAxis(d, this.zoomSliderXAxis);
                this.qm.setYAxis(d, this.zoomSliderAxis);
                this.qm.setValueMemberPath(d, g == null ? null : this.t9(g));
            }
            else if (d.cr) {
                this.qk.setCategoryMode(d, 1);
                this.qk.setXAxis(d, this.zoomSliderXAxis);
                this.qk.setYAxis(d, this.zoomSliderAxis);
                if (g != null) {
                    this.qk.setOpenMemberPath(d, g.getMemberPathFor(11));
                    this.qk.setHighMemberPath(d, g.getMemberPathFor(12));
                    this.qk.setLowMemberPath(d, g.getMemberPathFor(13));
                    this.qk.setCloseMemberPath(d, g.getMemberPathFor(14));
                    this.qk.setVolumeMemberPath(d, g.getMemberPathFor(15));
                }
            }
            d.name = "zoomSliderSeries_" + f;
            d.itemsSource = c.itemsSource;
            d.fx = c.fx;
            a.add(d);
        }
        for (var h = 0; h < a.count; h++) {
            var i = a._inner[h];
            this.zoomSliderChart.series.add(i);
            this.gk(i, h);
        }
    };
    FinancialChart.prototype.gz = function (a, b, c) {
        var e_12, _a;
        _super.prototype.gz.call(this, a, b, c);
        if (a == null || !b) {
            return;
        }
        var d = true;
        var e = true;
        switch (c) {
            case "Brushes":
            case "Outlines":
                d = e = false;
                break;
        }
        if (this.indicatorCharts != null && d) {
            try {
                for (var _b = tslib_1.__values(fromEnum(this.indicatorCharts)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var f = _c.value;
                    a(f);
                }
            }
            catch (e_12_1) {
                e_12 = { error: e_12_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_12)
                        throw e_12.error;
                }
            }
        }
        if (this.volumeChart != null && e) {
            a(this.volumeChart);
        }
        if (this.zoomSliderChart != null) {
            a(this.zoomSliderChart);
        }
    };
    FinancialChart.prototype.wc = function (a, b) {
        var c = b;
        var d = a;
        var e = -1;
        if (this.indicatorCharts != null) {
            e = this.indicatorCharts.indexOf(d.bq);
        }
        e -= this.qe == null ? 0 : this.qe.count;
        if (this.applyCustomIndicators != null) {
            this.applyCustomIndicators(this, new FinancialChartCustomIndicatorArgs(c, d, e));
        }
    };
    FinancialChart.prototype.w8 = function (a, b, c) {
        if (a != null) {
            if (b != null) {
                a.axes.remove(b);
            }
            a.axes.add(c);
        }
        if (this.bh) {
            this.nf(c);
        }
    };
    Object.defineProperty(FinancialChart.prototype, "r2", {
        get: function () {
            return TypeRegistrar.isRegistered("IgxZoomSliderComponent");
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.wd = function (a, b) {
        this.xc();
    };
    FinancialChart.prototype.rv = function (a, b) {
        if (b <= (0)) {
            return false;
        }
        switch (a) {
            case 5: return true;
            case 4:
            case 3: return b >= timeSpanFromDays(365);
            case 2: return b >= timeSpanFromDays(180);
            case 1: return b >= timeSpanFromDays(90);
            case 0: return b >= timeSpanFromDays(30);
        }
        return false;
    };
    FinancialChart.prototype.w2 = function () {
        var e_13, _a;
        var a = this.pw != null ? this.pw : new FinancialChartRangeSelectorOptionCollection(1, [5, 4, 3, 2, 1, 0]);
        var b = new FinancialChartRangeSelectorOptionCollection(0);
        var c = this.xAxis;
        var d = +(c.actualMaximumValue) - +(c.actualMinimumValue);
        try {
            for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                if (this.rv(e, d)) {
                    b.add(e);
                }
            }
        }
        catch (e_13_1) {
            e_13 = { error: e_13_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_13)
                    throw e_13.error;
            }
        }
        this.pv = b;
        if (this.py != null) {
            this.py.u = this.pv;
        }
    };
    FinancialChart.prototype.wh = function (a, b) {
        this.w2();
    };
    FinancialChart.prototype.wm = function (a, b) {
        this.qg = this.py.ag;
    };
    FinancialChart.prototype.wl = function (a, b) {
        this.qe = this.py.ae;
    };
    FinancialChart.prototype.wf = function (a, b) {
        this.xc();
    };
    FinancialChart.prototype.wg = function (a, b) {
        this.xe();
    };
    FinancialChart.prototype.wq = function (a, b) {
        var c = a;
        if (c.be == null) {
            return;
        }
        if (this.rx) {
            this.w1(c.be);
        }
    };
    FinancialChart.prototype.wt = function (a) {
        SyncManager.e(a);
        a.axes.clear();
        a.series.clear();
        a.gridAreaRectChanged = delegateRemove(a.gridAreaRectChanged, runOn(this, this.we));
        a.provideContainer(null);
        if (this.volumeChart == null && this.indicatorCharts == null) {
            this.yAxis.d6 = this.volumeAxis.d6 = this.indicatorAxis.d6 = 0;
            this.xAxis.ax.visibility = this.ox;
        }
    };
    FinancialChart.prototype.wr = function (a) {
        var b = a != this.zoomSliderChart;
        if (b) {
            if (this.dataChart != null) {
                a.m6 = new Rect(0, this.dataChart.mr.x, a.m6.y, this.dataChart.mr.width, a.m6.height);
            }
            var c = ((function () {
                var $ret = new SyncSettings();
                $ret.syncChannel = "one";
                $ret.synchronizeHorizontally = true;
                $ret.synchronizeVertically = false;
                return $ret;
            })());
            SyncManager.d(a, c);
            SyncManager.c(a);
        }
        a.gridAreaRectChanged = delegateCombine(a.gridAreaRectChanged, runOn(this, this.we));
        this.ge(a);
    };
    FinancialChart.prototype.v2 = function () {
        if (this.indicatorCharts != null || this.volumeChart != null) {
            this.nd(this.xAxis, function (a) { return a.visibility = 1; });
        }
        var _loop_1 = function (a) {
            var b = this_1.sa._inner[a];
            var c = a < this_1.sa.count - 1 || this_1.volumeChart != null;
            this_1.nd(b, function (d) { return d.visibility = c ? 1 : 0; });
        };
        var this_1 = this;
        for (var a = 0; a < this.sa.count; a++) {
            _loop_1(a);
        }
    };
    FinancialChart.prototype.w6 = function (a, b) {
        if (a != null) {
            this.wt(a);
        }
        if (b != null) {
            this.wr(b);
        }
    };
    FinancialChart.prototype.xi = function (a, b) {
        this.w6(a, b);
        this.v2();
        if (this.volumeChart != null) {
            if (this.volumeAxis != null) {
                this.volumeChart.axes.add(this.volumeAxis);
                this.volumeChart.axes.add(this.volumeXAxis);
            }
            this.wy();
            this.volumeXAxis.itemsSource = this.xAxis.itemsSource;
        }
        this.xj(a, b);
    };
    FinancialChart.prototype.wi = function (a, b) {
        this.xg();
    };
    FinancialChart.prototype.xg = function () {
        if (this.py == null || +(this.py.au) == +(dateMaxValue()) || +(this.py.at) == +(dateMinValue()) || this.dataChart == null) {
            return;
        }
        var a = this.xAxis;
        var b = a.getWindowRectForSelection(this.py.au, this.py.at);
        if (b.width == 0 || isNaN_(b.width) || isInfinity(b.width)) {
            return;
        }
        this.ry = true;
        this.dataChart.m6 = new Rect(0, b.left, this.dataChart.m6.top, b.width, this.dataChart.m6.height);
        if (this.rg != null) {
            this.rg.windowRect = this.dataChart.mr;
        }
        if (this.rx) {
            this.w1(this.dataChart);
        }
        this.ry = false;
    };
    FinancialChart.prototype.wp = function (a, b) {
        this.w2();
        this.xf(!this.ry);
    };
    FinancialChart.prototype.wb = function (a, b) {
        var _this = this;
        if (!this.ry) {
            if (this.rx) {
                this.w1(a);
            }
            var c = false;
            var d = this.g8(function () { return _this.xf(true); }, c);
            c = d.p1;
            if (this.rg != null) {
                this.rg.windowRect = this.dataChart.mr;
            }
        }
    };
    FinancialChart.prototype.xa = function (a, b, c, d) {
        var e_14, _a;
        if (a == null || b == null) {
            return;
        }
        if (c != -1) {
            this.ry = true;
            a.m6 = new Rect(0, d, a.mr.top, c, a.mr.height);
            this.ry = false;
        }
        var e = 1.7976931348623157E+308;
        var f = -1.7976931348623157E+308;
        var g = new Rect(0, 0, 0, 1, 1);
        var h = new ScalerParams(0, g, g, this.yAxis.ca, a.mv);
        try {
            for (var _b = tslib_1.__values(fromEnum(a.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var i = _c.value;
                h.b = i.eh();
                var j = i.ao();
                var k = j == null || j.c == 1.7976931348623157E+308 || isNaN_(j.c);
                if (k) {
                    continue;
                }
                var l = b.dy(j.c, h);
                var m = b.dy(j.b, h);
                f = Math.max(f, l);
                e = Math.min(e, m);
            }
        }
        catch (e_14_1) {
            e_14 = { error: e_14_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_14)
                    throw e_14.error;
            }
        }
        var n = a.mr.width;
        if (c != -1) {
            n = c;
        }
        var o = a.mr.left;
        if (d != -1) {
            o = d;
        }
        if (e == 1.7976931348623157E+308 || f == -1.7976931348623157E+308 || isNaN_(e) || isNaN_(f)) {
            return;
        }
        this.ry = true;
        var p = new Rect(0, o, e, n, f - e);
        a.m6 = p;
        this.ry = false;
    };
    FinancialChart.prototype.w9 = function (a) {
        if (a == null) {
            return;
        }
        if (a == this.dataChart) {
            this.xa(this.dataChart, this.yAxis, -1, -1);
            if (this.volumeChart != null) {
                this.xa(this.volumeChart, this.volumeAxis, this.dataChart.mr.width, this.dataChart.mr.left);
            }
        }
        else if (a == this.volumeChart) {
            this.xa(this.volumeChart, this.volumeAxis, -1, -1);
            this.xa(this.dataChart, this.yAxis, this.volumeChart.mr.width, this.volumeChart.mr.left);
        }
    };
    FinancialChart.prototype.w1 = function (a) {
        var _this = this;
        this.g7(function () { return _this.w9(a); });
    };
    FinancialChart.prototype.wj = function (a, b) {
        if (this.rx) {
            this.w1(a);
        }
    };
    FinancialChart.prototype.xh = function () {
        if (!this.r3) {
            return;
        }
        this.v5();
        if (this.qc == 0) {
            this.zoomSliderChart = null;
        }
        else if (this.zoomSliderChart == null) {
            this.zoomSliderChart = ((function () {
                var $ret = new XamDataChart();
                $ret.name = "ZoomSliderChart";
                return $ret;
            })());
        }
        else {
            this.wz();
        }
    };
    FinancialChart.prototype.v5 = function () {
        var container_ = this.s8.rootWrapper.getNativeElement();
        var containerParent_ = container_.parentElement;
        if (this.rg != null && containerParent_ != null && !this.r4) {
            this.r4 = true;
            if (TypeRegistrar.isRegistered("IgxZoomSliderComponent")) {
                var z_ = this.rg;
                var f_ = this.externalObject;
                var sliderComponent_ = TypeRegistrar.get("IgxZoomSliderComponent");
                var sliderInstance_ = TypeRegistrar.create("IgxZoomSliderComponent");
                sliderInstance_._implementation = z_;
                sliderComponent_._staticStyling(container_, sliderInstance_, f_);
            }
        }
    };
    FinancialChart.prototype.xb = function () {
        var _this = this;
        if (this.p7 != 1) {
            return;
        }
        this.nj(function (a) {
            var e_15, _a;
            var b;
            b = a.breaks;
            b.clear();
            if (_this.xAxisBreaks == null) {
                return;
            }
            try {
                for (var _b = tslib_1.__values(fromEnum(_this.xAxisBreaks)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    b.add(c);
                }
            }
            catch (e_15_1) {
                e_15 = { error: e_15_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_15)
                        throw e_15.error;
                }
            }
        });
    };
    FinancialChart.prototype.hq = function (a, b, c) {
        _super.prototype.hq.call(this, a, b, c);
        if (this.v.dataSeries.count > 0) {
            if (this.p7 == 1 && stringIsNullOrEmpty(this.ea)) {
                this.ac.setXMemberPath(a, c.getMemberPathFor(17));
            }
            if (stringIsNullOrEmpty(this.ec)) {
                this.ac.setYMemberPath(a, this.t9(c));
            }
            if (stringIsNullOrEmpty(this.d6)) {
                this.ac.setLabelMemberPath(a, this.t9(c));
            }
            if (stringIsNullOrEmpty(this.d3)) {
                this.ac.setContentMemberPath(a, this.t9(c));
            }
        }
    };
    FinancialChart.prototype.nf = function (a) {
        var e_16, _a;
        _super.prototype.nf.call(this, a);
        var b = a;
        this.ws(b);
        if (a.be != null) {
            try {
                for (var _b = tslib_1.__values(fromEnum(a.be.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    if (this.rq(c)) {
                        this.qm.setXAxis(c, b);
                    }
                    else if (this.ru(c)) {
                        this.qk.setXAxis(c, b);
                    }
                    else if (this.rr(c)) {
                        this.qo.setXAxis(c, b);
                    }
                    else if (this.rt(c)) {
                        this.qt.setXAxis(c, b);
                    }
                }
            }
            catch (e_16_1) {
                e_16 = { error: e_16_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_16)
                        throw e_16.error;
                }
            }
        }
        var d = a == this.zoomSliderXAxis;
        if (d) {
            a.ir = this.xn;
            a.d5 = this.s3;
            this.nd(a, function (e) { return e.visibility = 1; });
        }
        var e = a;
        e.minimumValue = this.sg;
        e.maximumValue = this.sf;
    };
    FinancialChart.prototype.nh = function (a) {
        var e_17, _a;
        _super.prototype.nh.call(this, a);
        if (a.be != null && a == this.yAxis) {
            try {
                for (var _b = tslib_1.__values(fromEnum(a.be.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    if (this.rq(b)) {
                        this.qm.setYAxis(b, this.yAxis);
                    }
                    else if (this.ru(b)) {
                        this.qk.setYAxis(b, this.yAxis);
                    }
                    else if (this.rr(b)) {
                        this.qo.setYAxis(b, this.yAxis);
                    }
                    else if (this.rt(b)) {
                        this.qt.setYAxis(b, this.yAxis);
                    }
                }
            }
            catch (e_17_1) {
                e_17 = { error: e_17_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_17)
                        throw e_17.error;
                }
            }
        }
        a.jv = this.r0;
        a.kj = this.s1;
        a.ki = this.s0;
        if (a == this.yAxis) {
            a.kf = this.sz;
        }
        var c = a == this.zoomSliderAxis;
        if (c) {
            this.nd(a, function (d) { return d.visibility = 1; });
        }
    };
    FinancialChart.prototype.ws = function (a) {
        a.itemsSource = this.dataChart != null && this.dataChart.series.count > 0 ? this.dataChart.series._inner[0].itemsSource : null;
        a.e9 = XYChart.k3(a, this.v.dataSeries);
        if (this.v.dataSeries.count > 0) {
            var b = this.v.dataSeries._inner[0].getMemberPathFor(17);
            a.g1(b);
        }
    };
    FinancialChart.prototype.gk = function (a, b) {
        _super.prototype.gk.call(this, a, b);
        if (a == null) {
            return;
        }
        var c = this.dataChart != null && this.dataChart.series.contains(a);
        if (c && a.cz) {
            a.jj(this.o9 != null ? ArrayExtension.getModulus$1(Brush.$, this.o9, b) : null, this.pa != null ? ArrayExtension.getModulus$1(Brush.$, this.pa, b) : null);
        }
        var d = this.zoomSliderChart == a.bq;
        var e = this.rr(a);
        if (this.rt(a)) {
            a.k6 = this.pb != null ? ArrayExtension.getModulus$1(Brush.$, this.pb, b) : null;
            a.k9 = this.pc != null ? ArrayExtension.getModulus$1(Brush.$, this.pc, b) : null;
            a.ey = this.su;
        }
        else if (e) {
            a.k6 = this.o7 != null ? ArrayExtension.getModulus$1(Brush.$, this.o7, b) : null;
            a.ey = this.st;
        }
        else if (!a.cj && (c || d)) {
            a.k6 = this.j != null ? ArrayExtension.getModulus$1(Brush.$, this.j, b) : null;
            a.k9 = this.n != null ? ArrayExtension.getModulus$1(Brush.$, this.n, b) : null;
        }
        var f = this.volumeChart != null && this.volumeChart == a.bq;
        if (f) {
            a.ey = this.sw;
        }
        a.legend = d || f || e || !a.isUsableInLegend ? null : this.legend != null ? this.legend : this.rs ? this.qi : null;
    };
    FinancialChart.prototype.g3 = function (a, b, c) {
        var e_18, _a, e_19, _b;
        var _this = this;
        _super.prototype.g3.call(this, a, b, c);
        switch (a) {
            case "YAxisIsLogarithmic":
                this.yAxis.j0 = this.r1;
                if (this.volumeAxis != null) {
                    this.volumeAxis.j0 = this.r1;
                }
                if (this.zoomSliderAxis != null) {
                    this.zoomSliderAxis.j0 = this.r1;
                }
                break;
            case "YAxisLogarithmBase":
                this.yAxis.kn = this.tn;
                if (this.volumeAxis != null) {
                    this.volumeAxis.kn = this.tn;
                }
                if (this.zoomSliderAxis != null) {
                    this.zoomSliderAxis.kn = this.tn;
                }
                break;
            case "VolumeType":
                var d = EnumUtil.getEnumValue(FinancialChartVolumeType_$type, b);
                if (this.p5 == 0) {
                    this.volumeChart = null;
                }
                else if (this.volumeChart == null) {
                    this.volumeChart = ((function () {
                        var $ret = new XamDataChart();
                        $ret.name = "VolumeChart";
                        return $ret;
                    })());
                }
                else {
                    this.wy();
                }
                break;
            case "VolumeChart":
                this.xi(typeCast(XamDataChart.$, b), typeCast(XamDataChart.$, c));
                break;
            case "DataChart":
                if (typeCast(XamDataChart.$, b) !== null) {
                    var e = b;
                    e.gridAreaRectChanged = delegateRemove(e.gridAreaRectChanged, runOn(this, this.we));
                    e.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.wb));
                    e.seriesDataUpdated = delegateRemove(e.seriesDataUpdated, runOn(this, this.wj));
                }
                if (this.dataChart != null) {
                    var f = this.dataChart;
                    f.gridAreaRectChanged = delegateCombine(f.gridAreaRectChanged, runOn(this, this.we));
                    var g = this.dataChart;
                    g.actualWindowRectChanged = delegateCombine(g.actualWindowRectChanged, runOn(this, this.wb));
                    var h = this.dataChart;
                    h.seriesDataUpdated = delegateCombine(h.seriesDataUpdated, runOn(this, this.wj));
                }
                this.xh();
                break;
            case "XAxisMode":
                this.xAxis = this.pk(this.p7);
                this.xAxis.name = "xAxis";
                this.volumeXAxis = this.pk(this.p7);
                this.volumeXAxis.name = "volumeXAxis";
                this.indicatorXAxis = this.pk(this.p7);
                this.indicatorXAxis.name = "indicatorXAxis_0";
                this.zoomSliderXAxis = this.pk(this.p7);
                this.zoomSliderXAxis.name = "zoomSliderXAxis";
                this.nd(this.zoomSliderXAxis, function (i) { return i.visibility = 1; });
                this.v2();
                if (this.p7 == 1) {
                    this.xb();
                }
                break;
            case "YAxisMode":
                this.yAxis = this.qy(this.p9);
                this.yAxis.name = "yAxis";
                this.zoomSliderAxis = this.qy(this.p9);
                this.zoomSliderAxis.name = "zoomSliderAxis";
                this.volumeAxis = this.qy(this.p9);
                this.volumeAxis.name = "volumeAxis";
                break;
            case "Toolbar":
                var i = typeCast(FinancialChartToolbar.$, b);
                if (i != null) {
                    i.rangeChanged = delegateRemove(i.rangeChanged, runOn(this, this.wi));
                    i.indicatorTypesChanged = delegateRemove(i.indicatorTypesChanged, runOn(this, this.wl));
                    i.overlayTypesChanged = delegateRemove(i.overlayTypesChanged, runOn(this, this.wm));
                }
                if (this.py != null) {
                    this.py.ae = this.qe;
                    this.py.ag = this.qg;
                    this.py.u = this.pv;
                    this.xf(true);
                    var j = this.py;
                    j.rangeChanged = delegateCombine(j.rangeChanged, runOn(this, this.wi));
                    var k = this.py;
                    k.indicatorTypesChanged = delegateCombine(k.indicatorTypesChanged, runOn(this, this.wl));
                    var l = this.py;
                    l.overlayTypesChanged = delegateCombine(l.overlayTypesChanged, runOn(this, this.wm));
                }
                break;
            case "XAxis":
                var m = typeCast(CategoryAxisBase.$, b);
                if (m != null) {
                    if (this.dataChart != null) {
                        this.dataChart.axes.remove(m);
                    }
                }
                var n = typeCast(ITimeRangeSelectorAxis_$type, b);
                if (n != null) {
                    n.visibleRangeChanged = delegateRemove(n.visibleRangeChanged, runOn(this, this.wp));
                }
                if (this.dataChart != null) {
                    this.dataChart.axes.add(this.xAxis);
                }
                if (this.bh) {
                    this.nf(this.xAxis);
                    this.f7();
                }
                this.xf(false);
                this.xg();
                this.w2();
                var o = this.xAxis;
                o.visibleRangeChanged = delegateCombine(o.visibleRangeChanged, runOn(this, this.wp));
                break;
            case "ChartType":
                this.hl();
                break;
            case "VolumeXAxis":
                this.w8(this.volumeChart, typeCast(Axis.$, b), this.volumeXAxis);
                break;
            case "ZoomSliderXAxis":
                this.w8(this.zoomSliderChart, typeCast(Axis.$, b), this.zoomSliderXAxis);
                break;
            case "IndicatorXAxis":
                this.xc();
                break;
            case "YAxis":
                var p = typeCast(NumericYAxis.$, b);
                if (p != null) {
                    if (this.dataChart != null) {
                        this.dataChart.axes.remove(p);
                    }
                }
                if (this.dataChart != null) {
                    this.dataChart.axes.add(this.yAxis);
                }
                if (this.bh) {
                    this.nh(this.yAxis);
                    this.nh(this.yAxis);
                }
                var q = this.yAxis;
                q.rangeChanged = delegateCombine(q.rangeChanged, runOn(this, this.wq));
                break;
            case "VolumeAxis":
                var r = typeCast(Axis.$, b);
                if (this.volumeChart != null && r != null) {
                    this.volumeChart.axes.remove(r);
                }
                if (this.volumeChart != null && this.volumeAxis != null) {
                    this.volumeChart.axes.add(this.volumeAxis);
                    this.wy();
                }
                if (this.bh) {
                    this.nh(this.volumeAxis);
                }
                var s = this.volumeAxis;
                s.rangeChanged = delegateCombine(s.rangeChanged, runOn(this, this.wq));
                break;
            case "IndicatorAxis":
                if (this.indicatorCharts != null) {
                    for (var t = 0; t < this.indicatorCharts.count; t++) {
                        var u = this.indicatorCharts._inner[t];
                        var v = new List$1(Axis.$, 0);
                        try {
                            for (var _c = (e_18 = void 0, tslib_1.__values(fromEnum(u.axes))), _d = _c.next(); !_d.done; _d = _c.next()) {
                                var w = _d.value;
                                if (typeCast(NumericYAxis.$, w) !== null) {
                                    v.add(w);
                                }
                            }
                        }
                        catch (e_18_1) {
                            e_18 = { error: e_18_1 };
                        }
                        finally {
                            try {
                                if (_d && !_d.done && (_a = _c.return))
                                    _a.call(_c);
                            }
                            finally {
                                if (e_18)
                                    throw e_18.error;
                            }
                        }
                        try {
                            for (var _e = (e_19 = void 0, tslib_1.__values(fromEnum(v))), _f = _e.next(); !_f.done; _f = _e.next()) {
                                var x = _f.value;
                                u.axes.remove(x);
                            }
                        }
                        catch (e_19_1) {
                            e_19 = { error: e_19_1 };
                        }
                        finally {
                            try {
                                if (_f && !_f.done && (_b = _e.return))
                                    _b.call(_e);
                            }
                            finally {
                                if (e_19)
                                    throw e_19.error;
                            }
                        }
                        var y = null;
                        if (t == 0) {
                            y = this.indicatorAxis;
                        }
                        else if (this.p9 == 1) {
                            y = this.qy(this.p9);
                        }
                        else if (typeCast(NumericYAxis.$, this.indicatorAxis) !== null) {
                            y = new NumericYAxis();
                        }
                        if (y != null) {
                            u.axes.add(y);
                        }
                        if (this.bh) {
                            this.nh(y);
                        }
                    }
                }
                break;
            case "IsWindowSyncedToVisibleRange":
                if (this.dataChart != null) {
                    this.dataChart.nv = this.bw && this.bv;
                }
                if (this.volumeChart != null) {
                    this.volumeChart.nv = this.bw && this.bv;
                }
                if (this.rx) {
                    this.w9(this.dataChart);
                }
                else {
                    this.volumeChart.oe = 1;
                }
                break;
            case "IndicatorTypes":
                var z = typeCast(ObservableCollection$1.$.specialize(FinancialIndicatorType_$type), b);
                if (z != null) {
                    z.collectionChanged = delegateRemove(z.collectionChanged, runOn(this, this.wf));
                }
                var aa = typeCast(ObservableCollection$1.$.specialize(FinancialIndicatorType_$type), c);
                if (aa != null) {
                    aa.collectionChanged = delegateCombine(aa.collectionChanged, runOn(this, this.wf));
                }
                this.xc();
                break;
            case "OverlayTypes":
                var ab = typeCast(ObservableCollection$1.$.specialize(FinancialOverlayType_$type), b);
                if (ab != null) {
                    ab.collectionChanged = delegateRemove(ab.collectionChanged, runOn(this, this.wg));
                }
                var ac = typeCast(ObservableCollection$1.$.specialize(FinancialOverlayType_$type), c);
                if (ac != null) {
                    ac.collectionChanged = delegateCombine(ac.collectionChanged, runOn(this, this.wg));
                }
                this.xe();
                break;
            case "YAxisAbbreviateLargeNumbers":
                this.nn(function (ad) { return ad.jv = _this.r0; });
                break;
            case "YAxisMinimumValue":
                this.no(function (ad) { return ad.kj = _this.s1; }, false);
                break;
            case "YAxisMaximumValue":
                this.no(function (ad) { return ad.ki = _this.s0; }, false);
                break;
            case "YAxisInterval":
                this.no(function (ad) { return ad.kf = _this.sz; }, false);
                break;
            case "ZoomSliderType":
                this.xh();
                break;
            case "ZoomSliderChart":
                if (!this.r2) {
                    return;
                }
                this.xk(typeCast(XamDataChart.$, b), typeCast(XamDataChart.$, c));
                break;
            case "NegativeBrushes":
            case "NegativeOutlines":
                this.v8(function (ad, ae) {
                    if (ad.cz) {
                        ad.jj(_this.o9 != null ? ArrayExtension.getModulus$1(Brush.$, _this.o9, ae) : null, _this.pa != null ? ArrayExtension.getModulus$1(Brush.$, _this.pa, ae) : null);
                    }
                }, true);
                break;
            case "OverlayBrushes":
                this.f9(function (ad, ae) {
                    if (!(_this.rt(ad))) {
                        return;
                    }
                    ad.k6 = _this.pb != null ? ArrayExtension.getModulus$1(Brush.$, _this.pb, ae) : null;
                });
                break;
            case "OverlayOutlines":
                this.f9(function (ad, ae) {
                    if (!(_this.rt(ad))) {
                        return;
                    }
                    ad.k9 = _this.pc != null ? ArrayExtension.getModulus$1(Brush.$, _this.pc, ae) : null;
                });
                break;
            case "OverlayThickness":
                this.f9(function (ad, ae) {
                    if (!(_this.rt(ad))) {
                        return;
                    }
                    ad.ey = _this.su;
                });
                break;
            case "VolumeBrushes":
                this.v9(function (ad, ae) { return ad.k6 = ArrayExtension.getModulus$1(Brush.$, _this.pd, ae); });
                break;
            case "VolumeOutlines":
                this.v9(function (ad, ae) { return ad.k9 = ArrayExtension.getModulus$1(Brush.$, _this.pe, ae); });
                break;
            case "VolumeThickness":
                this.v9(function (ad, ae) { return ad.ey = _this.sw; });
                break;
            case "IndicatorNegativeBrushes":
                this.v6(function (ad, ae) { return _this.qo.setNegativeBrush(ad, ArrayExtension.getModulus$1(Brush.$, _this.o8, ae)); });
                break;
            case "IndicatorBrushes":
                this.v6(function (ad, ae) { return ad.k6 = ArrayExtension.getModulus$1(Brush.$, _this.o7, ae); });
                break;
            case "IndicatorThickness":
                this.v6(function (ad, ae) { return ad.ey = _this.st; });
                break;
            case "IndicatorDisplayTypes":
                this.v6(function (ad, ae) { return _this.qo.setDisplayType(ad, ArrayExtension.getModulus$1(IndicatorDisplayType_$type, _this.qq, ae)); });
                break;
            case "IndicatorPeriod":
                this.v6(function (ad, ae) {
                    if (_this.ti == -2147483648 || !(_this.rr(ad))) {
                        return;
                    }
                    _this.qo.setPeriodOverride(ad, _this.ti);
                });
                break;
            case "IndicatorMultiplier":
                this.v6(function (ad, ae) {
                    if (!(_this.rt(ad))) {
                        return;
                    }
                    _this.qt.setMultiplier(ad, _this.ss);
                });
                break;
            case "IndicatorSmoothingPeriod":
                this.v6(function (ad, ae) {
                    if (!(_this.rr(ad))) {
                        return;
                    }
                    _this.qo.setSmoothingPeriod(ad, _this.tl);
                });
                break;
            case "IndicatorShortPeriod":
                this.v6(function (ad, ae) {
                    if (!(_this.rr(ad))) {
                        return;
                    }
                    _this.qo.setShortPeriod(ad, _this.tj);
                });
                break;
            case "IndicatorLongPeriod":
                this.v6(function (ad, ae) {
                    if (!(_this.rr(ad))) {
                        return;
                    }
                    _this.qo.setLongPeriod(ad, _this.th);
                });
                break;
            case "IndicatorSignalPeriod":
                this.v6(function (ad, ae) {
                    if (!(_this.rr(ad))) {
                        return;
                    }
                    _this.qo.setSignalPeriod(ad, _this.tk);
                });
                break;
            case "RangeSelectorOptions":
                var ad = typeCast(FinancialChartRangeSelectorOptionCollection.$, b);
                if (ad != null) {
                    ad.collectionChanged = delegateRemove(ad.collectionChanged, runOn(this, this.wh));
                }
                if (this.pw != null) {
                    var ae = this.pw;
                    ae.collectionChanged = delegateCombine(ae.collectionChanged, runOn(this, this.wh));
                }
                this.w2();
                break;
            case "CustomIndicatorNames":
                var af = typeCast(ObservableCollection$1.$.specialize(String_$type), b);
                if (af != null) {
                    af.collectionChanged = delegateRemove(af.collectionChanged, runOn(this, this.wd));
                }
                if (this.customIndicatorNames != null) {
                    var ag = this.customIndicatorNames;
                    ag.collectionChanged = delegateCombine(ag.collectionChanged, runOn(this, this.wd));
                }
                this.xc();
                break;
            case "Legend":
                if (this.zoomSliderChart != null) {
                    this.zoomSliderChart.legend = null;
                }
                break;
            case "Brushes":
                this.v8(function (ah, ai) { return ah.k6 = _this.j != null ? ArrayExtension.getModulus$1(Brush.$, _this.j, ai) : null; }, true);
                break;
            case "Outlines":
                this.v8(function (ah, ai) { return ah.k9 = _this.n != null ? ArrayExtension.getModulus$1(Brush.$, _this.n, ai) : null; }, true);
                break;
            case "XAxisLabelVisibility":
                if (this.ox == 0 && this.zoomSliderXAxis != null) {
                    this.nd(this.zoomSliderXAxis, function (ah) { return ah.visibility = 1; });
                }
                this.v2();
                break;
            case "YAxisLabelVisibility":
                if (this.oy != 0 || this.zoomSliderAxis == null) {
                    break;
                }
                this.nd(this.zoomSliderAxis, function (ah) { return ah.visibility = 1; });
                break;
            case "ZoomSliderXAxisMajorStroke":
                this.zoomSliderXAxis.ir = this.xn;
                break;
            case "ZoomSliderXAxisMajorStrokeThickness":
                this.zoomSliderXAxis.d5 = this.s3;
                break;
            case "FinancialChartLegend":
            case "IsLegendVisible":
                var ah_1 = this.rs && this.legend == null;
                {
                    var ai = function (aj, ak) {
                        if (aj.isUsableInLegend) {
                            aj.legend = ah_1 ? _this.qi : null;
                        }
                    };
                    this.v8(ai, false);
                    this.v7(ai);
                }
                break;
            case "ZoomSliderAxis":
                var aj = typeCast(Axis.$, b);
                if (aj != null && this.zoomSliderChart != null) {
                    this.zoomSliderChart.axes.remove(aj);
                }
                if (this.zoomSliderAxis != null) {
                    if (this.zoomSliderChart != null) {
                        this.zoomSliderChart.axes.add(this.zoomSliderAxis);
                        this.wz();
                        this.zoomSliderXAxis.itemsSource = this.xAxis.itemsSource;
                    }
                    if (this.bh) {
                        this.nh(this.zoomSliderAxis);
                    }
                    this.nd(this.zoomSliderAxis, function (ak) { return ak.visibility = 1; });
                }
                break;
            case "XAxisMinimumValue":
                this.nj(function (ak) {
                    var al = typeCast(ITimeRangeSelectorAxis_$type, ak);
                    if (al != null) {
                        al.minimumValue = _this.sg;
                    }
                });
                break;
            case "XAxisMaximumValue":
                this.nj(function (ak) {
                    var al = typeCast(ITimeRangeSelectorAxis_$type, ak);
                    if (al != null) {
                        al.maximumValue = _this.sf;
                    }
                });
                break;
        }
    };
    Object.defineProperty(FinancialChart.prototype, "r1", {
        get: function () {
            return this.rl;
        },
        set: function (a) {
            var b = this.r1;
            if (a != b) {
                this.rl = a;
                this.g3("YAxisIsLogarithmic", b, this.r1);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tn", {
        get: function () {
            return this.tf;
        },
        set: function (a) {
            var b = this.tn;
            if (a != b) {
                this.tf = a;
                this.g3("YAxisLogarithmBase", b, this.tn);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sz", {
        get: function () {
            return this.sm;
        },
        set: function (a) {
            var b = this.sz;
            if (a != b) {
                this.sm = a;
                this.g3("YAxisInterval", b, this.sz);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s1", {
        get: function () {
            return this.so;
        },
        set: function (a) {
            var b = this.s1;
            if (a != b) {
                this.so = a;
                this.g3("YAxisMinimumValue", b, this.s1);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s0", {
        get: function () {
            return this.sn;
        },
        set: function (a) {
            var b = this.s0;
            if (a != b) {
                this.sn = a;
                this.g3("YAxisMaximumValue", b, this.s0);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s2", {
        get: function () {
            return this.sp;
        },
        set: function (a) {
            var b = this.s2;
            if (a != b) {
                this.sp = a;
                this.g3("YAxisMinorInterval", b, this.s2);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sy", {
        get: function () {
            return this.yAxis.kb;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sx", {
        get: function () {
            return this.yAxis.ka;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "p5", {
        get: function () {
            return this.p3;
        },
        set: function (a) {
            var b = this.p5;
            if (a != b) {
                this.p3 = a;
                this.g3("VolumeType", enumGetBox(FinancialChartVolumeType_$type, b), enumGetBox(FinancialChartVolumeType_$type, this.p5));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "p7", {
        get: function () {
            return this.p6;
        },
        set: function (a) {
            var b = this.p7;
            if (a != b) {
                this.p6 = a;
                this.g3("XAxisMode", enumGetBox(FinancialChartXAxisMode_$type, b), enumGetBox(FinancialChartXAxisMode_$type, this.p7));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "p9", {
        get: function () {
            return this.p8;
        },
        set: function (a) {
            var b = this.p9;
            if (a != b) {
                this.p8 = a;
                this.g3("YAxisMode", enumGetBox(FinancialChartYAxisMode_$type, b), enumGetBox(FinancialChartYAxisMode_$type, this.p9));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "rw", {
        get: function () {
            return this.ri;
        },
        set: function (a) {
            var b = this.rw;
            if (a != b) {
                this.ri = a;
                this.g3("IsToolbarVisible", b, this.rw);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "p0", {
        get: function () {
            return this.pz;
        },
        set: function (a) {
            var b = this.p0;
            if (a != b) {
                this.pz = a;
                this.g3("ChartType", enumGetBox(FinancialChartType_$type, b), enumGetBox(FinancialChartType_$type, this.p0));
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.get_nw = function () {
        return _super.prototype.get_nw.call(this);
    };
    FinancialChart.prototype.set_nw = function (a) {
        _super.prototype.set_nw.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "rx", {
        get: function () {
            return this.rj;
        },
        set: function (a) {
            var b = this.rx;
            if (a != b) {
                this.rj = a;
                this.g3("IsWindowSyncedToVisibleRange", b, this.rx);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "qe", {
        get: function () {
            return this.qd;
        },
        set: function (a) {
            var b = this.qe;
            if (a != b) {
                this.qd = a;
                this.g3("IndicatorTypes", b, this.qe);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "qg", {
        get: function () {
            return this.qf;
        },
        set: function (a) {
            var b = this.qg;
            if (a != b) {
                this.qf = a;
                this.g3("OverlayTypes", b, this.qg);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "indicatorCharts", {
        get: function () {
            return this.r6;
        },
        set: function (a) {
            var b = this.indicatorCharts;
            if (a != b) {
                this.r6 = a;
                this.g3("IndicatorCharts", b, this.indicatorCharts);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "r0", {
        get: function () {
            return this.rk;
        },
        set: function (a) {
            var b = this.r0;
            if (a != b) {
                this.rk = a;
                this.g3("YAxisAbbreviateLargeNumbers", b, this.r0);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.get_cu = function () {
        return _super.prototype.get_cu.call(this);
    };
    FinancialChart.prototype.set_cu = function (a) {
        _super.prototype.set_cu.call(this, a);
    };
    FinancialChart.prototype.get_il = function () {
        return _super.prototype.get_il.call(this);
    };
    FinancialChart.prototype.set_il = function (a) {
        _super.prototype.set_il.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "zoomSliderChart", {
        get: function () {
            return this.rc;
        },
        set: function (a) {
            var b = this.zoomSliderChart;
            if (a != b) {
                this.rc = a;
                this.g3("ZoomSliderChart", b, this.zoomSliderChart);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "zoomSliderAxis", {
        get: function () {
            return this.qx;
        },
        set: function (a) {
            var b = this.zoomSliderAxis;
            if (a != b) {
                this.qx = a;
                this.g3("ZoomSliderAxis", b, this.zoomSliderAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "zoomSliderXAxis", {
        get: function () {
            return this.pi;
        },
        set: function (a) {
            var b = this.zoomSliderXAxis;
            if (a != b) {
                this.pi = a;
                this.g3("ZoomSliderXAxis", b, this.zoomSliderXAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "qc", {
        get: function () {
            return this.qa;
        },
        set: function (a) {
            var b = this.qc;
            if (a != b) {
                this.qa = a;
                this.g3("ZoomSliderType", enumGetBox(FinancialChartZoomSliderType_$type, b), enumGetBox(FinancialChartZoomSliderType_$type, this.qc));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "o9", {
        get: function () {
            return this.o1;
        },
        set: function (a) {
            var b = this.o9;
            if (a != b) {
                this.o1 = a;
                this.g3("NegativeBrushes", b, this.o9);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "pa", {
        get: function () {
            return this.o2;
        },
        set: function (a) {
            var b = this.pa;
            if (a != b) {
                this.o2 = a;
                this.g3("NegativeOutlines", b, this.pa);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "pb", {
        get: function () {
            return this.o3;
        },
        set: function (a) {
            var b = this.pb;
            if (a != b) {
                this.o3 = a;
                this.g3("OverlayBrushes", b, this.pb);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "pc", {
        get: function () {
            return this.o4;
        },
        set: function (a) {
            var b = this.pc;
            if (a != b) {
                this.o4 = a;
                this.g3("OverlayOutlines", b, this.pc);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "pe", {
        get: function () {
            return this.o6;
        },
        set: function (a) {
            var b = this.pe;
            if (a != b) {
                this.o6 = a;
                this.g3("VolumeOutlines", b, this.pe);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "pd", {
        get: function () {
            return this.o5;
        },
        set: function (a) {
            var b = this.pd;
            if (a != b) {
                this.o5 = a;
                this.g3("VolumeBrushes", b, this.pd);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "o8", {
        get: function () {
            return this.o0;
        },
        set: function (a) {
            var b = this.o8;
            if (a != b) {
                this.o0 = a;
                this.g3("IndicatorNegativeBrushes", b, this.o8);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "o7", {
        get: function () {
            return this.oz;
        },
        set: function (a) {
            var b = this.o7;
            if (a != b) {
                this.oz = a;
                this.g3("IndicatorBrushes", b, this.o7);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sw", {
        get: function () {
            return this.sl;
        },
        set: function (a) {
            var b = this.sw;
            if (a != b) {
                this.sl = a;
                this.g3("VolumeThickness", b, this.sw);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "su", {
        get: function () {
            return this.sj;
        },
        set: function (a) {
            var b = this.su;
            if (a != b) {
                this.sj = a;
                this.g3("OverlayThickness", b, this.su);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "st", {
        get: function () {
            return this.si;
        },
        set: function (a) {
            var b = this.st;
            if (a != b) {
                this.si = a;
                this.g3("IndicatorThickness", b, this.st);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "qq", {
        get: function () {
            return this.qp;
        },
        set: function (a) {
            var b = this.qq;
            if (a != b) {
                this.qp = a;
                this.g3("IndicatorDisplayTypes", b, this.qq);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ti", {
        get: function () {
            return this.tb;
        },
        set: function (a) {
            var b = this.ti;
            if (a != b) {
                this.tb = a;
                this.g3("IndicatorPeriod", b, this.ti);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ss", {
        get: function () {
            return this.sh;
        },
        set: function (a) {
            var b = this.ss;
            if (a != b) {
                this.sh = a;
                this.g3("IndicatorMultiplier", b, this.ss);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tl", {
        get: function () {
            return this.te;
        },
        set: function (a) {
            var b = this.tl;
            if (a != b) {
                this.te = a;
                this.g3("IndicatorSmoothingPeriod", b, this.tl);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tj", {
        get: function () {
            return this.tc;
        },
        set: function (a) {
            var b = this.tj;
            if (a != b) {
                this.tc = a;
                this.g3("IndicatorShortPeriod", b, this.tj);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "th", {
        get: function () {
            return this.ta;
        },
        set: function (a) {
            var b = this.th;
            if (a != b) {
                this.ta = a;
                this.g3("IndicatorLongPeriod", b, this.th);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tk", {
        get: function () {
            return this.td;
        },
        set: function (a) {
            var b = this.tk;
            if (a != b) {
                this.td = a;
                this.g3("IndicatorSignalPeriod", b, this.tk);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "pw", {
        get: function () {
            return this.pu;
        },
        set: function (a) {
            var b = this.pw;
            if (a != b) {
                this.pu = a;
                this.g3("RangeSelectorOptions", b, this.pw);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "customIndicatorNames", {
        get: function () {
            return this.pq;
        },
        set: function (a) {
            var b = this.pq;
            if (a != b) {
                this.pq = a;
                this.g3("CustomIndicatorNames", b, this.customIndicatorNames);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.get_bw = function () {
        return _super.prototype.get_bw.call(this);
    };
    FinancialChart.prototype.set_bw = function (a) {
        _super.prototype.set_bw.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "xn", {
        get: function () {
            return this.xm;
        },
        set: function (a) {
            var b = this.xn;
            if (a != b) {
                this.xm = a;
                this.g3("ZoomSliderXAxisMajorStroke", b, this.xn);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s3", {
        get: function () {
            return this.sq;
        },
        set: function (a) {
            var b = this.s3;
            if (a != b) {
                this.sq = a;
                this.g3("ZoomSliderXAxisMajorStrokeThickness", b, this.s3);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "rs", {
        get: function () {
            return this.rh;
        },
        set: function (a) {
            var b = this.rs;
            if (a != b) {
                this.rh = a;
                this.g3("IsLegendVisible", b, this.rs);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "qi", {
        get: function () {
            return this.qh;
        },
        set: function (a) {
            var b = this.qi;
            if (a != b) {
                this.qh = a;
                this.g3("FinancialChartLegend", b, this.qi);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xAxis", {
        get: function () {
            return this.ph;
        },
        set: function (a) {
            var b = this.xAxis;
            if (a != b) {
                this.ph = a;
                this.g3("XAxis", b, this.xAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "yAxis", {
        get: function () {
            return this.qw;
        },
        set: function (a) {
            var b = this.yAxis;
            if (a != b) {
                this.qw = a;
                this.g3("YAxis", b, this.yAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "volumeAxis", {
        get: function () {
            return this.qv;
        },
        set: function (a) {
            var b = this.volumeAxis;
            if (a != b) {
                this.qv = a;
                this.g3("VolumeAxis", b, this.volumeAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "volumeXAxis", {
        get: function () {
            return this.pg;
        },
        set: function (a) {
            var b = this.volumeXAxis;
            if (a != b) {
                this.pg = a;
                this.g3("VolumeXAxis", b, this.volumeXAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "indicatorAxis", {
        get: function () {
            return this.qu;
        },
        set: function (a) {
            var b = this.indicatorAxis;
            if (a != b) {
                this.qu = a;
                this.g3("IndicatorAxis", b, this.indicatorAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "indicatorXAxis", {
        get: function () {
            return this.pf;
        },
        set: function (a) {
            var b = this.indicatorXAxis;
            if (a != b) {
                this.pf = a;
                this.g3("IndicatorXAxis", b, this.indicatorXAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "r8", {
        get: function () {
            return this.r5;
        },
        set: function (a) {
            var b = this.r8;
            if (a != b) {
                this.r5 = a;
                this.g3("IndicatorAxes", b, this.r8);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sa", {
        get: function () {
            return this.r7;
        },
        set: function (a) {
            var b = this.sa;
            if (a != b) {
                this.r7 = a;
                this.g3("IndicatorXAxes", b, this.sa);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sg", {
        get: function () {
            return this.se;
        },
        set: function (a) {
            var b = this.sg;
            if (+a != +b) {
                this.se = a;
                this.g3("XAxisMinimumValue", b, this.sg);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sf", {
        get: function () {
            return this.sd;
        },
        set: function (a) {
            var b = this.sf;
            if (+a != +b) {
                this.sd = a;
                this.g3("XAxisMaximumValue", b, this.sf);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xAxisBreaks", {
        get: function () {
            return this.sb;
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.$t = markType(FinancialChart, 'FinancialChart', XYChart.$);
    FinancialChart.tm = 0;
    return FinancialChart;
}(XYChart));
export { FinancialChart };
/**
 * @hidden
 */
var FinancialChartToolbar = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(FinancialChartToolbar, _super);
    function FinancialChartToolbar(a, b) {
        var _this = _super.call(this, "financialChartToolbar", b, "") || this;
        _this.o = null;
        _this.r = null;
        _this.z = null;
        _this.p = null;
        _this.w = null;
        _this.aq = dateMaxValue();
        _this.ap = dateMinValue();
        _this.ao = dateMaxValue();
        _this.an = dateMinValue();
        _this.rangeChanged = null;
        _this.chartTypeChanged = null;
        _this.trendLineTypeChanged = null;
        _this.volumeTypeChanged = null;
        _this.indicatorTypesChanged = null;
        _this.overlayTypesChanged = null;
        _this.x = 0;
        _this.ah = 0;
        _this.ab = 0;
        _this.ad = null;
        _this.af = null;
        _this.t = null;
        _this.ak = false;
        _this.o = a;
        _this.w = new FinancialChartToolbarViewModel();
        _this.s = new FinancialChartRangeSelector(a != null ? a.ty : null);
        _this.aa = new FinancialChartTypePicker(a != null ? a.tv : null);
        _this.q = new FinancialChartIndicatorMenu(1, a != null ? a.tw : null);
        return _this;
    }
    FinancialChartToolbar.prototype.bg = function (a) {
        var b = a.querySelectorAll(".financialChartToolbarArea");
        if (b != null && b.length > 0) {
            this.g = b[0];
            if (!this.al) {
                this.g.hide();
            }
        }
        var c = a.querySelectorAll(".financialChartIndicatorMenu");
        if (c != null && c.length > 0) {
            this.q.g = c[0];
        }
        var d = a.querySelectorAll(".financialChartRangeSelector");
        if (d != null && d.length > 0) {
            this.s.g = d[0];
        }
        var e = a.querySelectorAll(".financialChartTypePicker");
        if (e != null && e.length > 0) {
            this.aa.g = e[0];
        }
    };
    FinancialChartToolbar.prototype.bl = function (a) {
        this.q.u(a);
        this.aa.u(a);
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "s", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            var b = this.s;
            if (a != b) {
                this.r = a;
                this.bm("RangeSelector", b, this.s);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "aa", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            var b = this.aa;
            if (a != b) {
                this.z = a;
                this.bm("ChartTypePicker", b, this.aa);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "q", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            var b = this.q;
            if (a != b) {
                this.p = a;
                this.bm("IndicatorMenu", b, this.q);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartToolbar.prototype.bm = function (a, b, c) {
        switch (a) {
            case "RangeStart":
                if (this.s != null) {
                    this.s.t = this.as;
                }
                break;
            case "RangeEnd":
                if (this.s != null) {
                    this.s.s = this.ar;
                }
                break;
            case "SelectionStart":
                if (this.s != null) {
                    this.s.v = this.au;
                }
                break;
            case "SelectionEnd":
                if (this.s != null) {
                    this.s.u = this.at;
                }
                break;
            case "RangeSelector":
                var d = b;
                if (d != null) {
                    d.rangeChanged = delegateRemove(d.rangeChanged, runOn(this, this.bj));
                }
                if (this.s != null) {
                    this.s.t = this.as;
                    this.s.s = this.ar;
                    this.s.o = this.u;
                    this.s.v = this.au;
                    this.s.u = this.at;
                    var e = this.s;
                    e.rangeChanged = delegateCombine(e.rangeChanged, runOn(this, this.bj));
                }
                break;
            case "ChartTypePicker":
                var f = b;
                if (f != null) {
                    f.selectionChanged = delegateRemove(f.selectionChanged, runOn(this, this.bi));
                }
                if (this.aa != null) {
                    this.aa.w = this.y;
                    var g = this.aa;
                    g.selectionChanged = delegateCombine(g.selectionChanged, runOn(this, this.bi));
                }
                break;
            case "ChartType":
                if (this.aa != null) {
                    this.aa.w = this.y;
                }
                break;
            case "RangeSelectorOptions":
                if (this.s != null) {
                    this.s.o = this.u;
                }
                break;
            case "IsToolbarVisible":
                if (this.g == null) {
                    break;
                }
                if (this.al) {
                    this.g.show();
                }
                else {
                    this.g.hide();
                }
                break;
            case "IndicatorMenu":
                var h = typeCast(FinancialChartIndicatorMenu.$, b);
                if (h != null) {
                    h.selectionChanged = delegateRemove(h.selectionChanged, runOn(this, this.bh));
                }
                if (this.q != null) {
                    var i = this.q;
                    i.selectionChanged = delegateCombine(i.selectionChanged, runOn(this, this.bh));
                }
                break;
            case "IndicatorTypes":
                if (this.indicatorTypesChanged != null) {
                    this.indicatorTypesChanged(this, EventArgs.empty);
                }
                break;
            case "OverlayTypes":
                if (this.overlayTypesChanged != null) {
                    this.overlayTypesChanged(this, EventArgs.empty);
                }
                break;
            case "TrendLineType":
                if (this.trendLineTypeChanged != null) {
                    this.trendLineTypeChanged(this, EventArgs.empty);
                }
                break;
            case "VolumeType":
                if (this.volumeTypeChanged != null) {
                    this.volumeTypeChanged(this, EventArgs.empty);
                }
                break;
        }
    };
    FinancialChartToolbar.prototype.bh = function (a, b) {
        this.ag = this.q.z;
        this.ae = this.q.y;
        this.ai = this.q.aa;
        this.ac = this.q.x;
    };
    FinancialChartToolbar.prototype.bi = function (a, b) {
        this.y = this.aa.w;
        if (this.chartTypeChanged != null) {
            this.chartTypeChanged(this, b);
        }
    };
    FinancialChartToolbar.prototype.bj = function (a, b) {
        this.au = this.s.v;
        this.at = this.s.u;
        if (this.rangeChanged != null) {
            this.rangeChanged(this, b);
        }
    };
    FinancialChartToolbar.prototype.v = function () {
        var _this = this;
        var a = new FinancialChartToolbarContext();
        a.container = this.d;
        a.vm = this.w;
        a.vm.financialChartIndicatorMenu = ((function () {
            var $ret = new FinancialChartIndicatorMenuContext();
            $ret.vm = _this.q.p;
            return $ret;
        })());
        a.vm.financialChartTypePicker = ((function () {
            var $ret = new FinancialChartTypePickerContext();
            $ret.vm = _this.aa.p;
            return $ret;
        })());
        a.vm.financialChartRangeSelector = ((function () {
            var $ret = new FinancialChartRangeSelectorContext();
            $ret.vm = _this.s.q;
            return $ret;
        })());
        return a;
    };
    FinancialChartToolbar.prototype.l = function (a) {
        _super.prototype.l.call(this, a);
        if (a == null) {
            return;
        }
        this.bk();
    };
    FinancialChartToolbar.prototype.bk = function () {
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "au", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            var b = this.au;
            if (+a != +b) {
                this.aq = a;
                this.bm("SelectionStart", b, this.au);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "at", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            var b = this.at;
            if (+a != +b) {
                this.ap = a;
                this.bm("SelectionEnd", b, this.at);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "as", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            var b = this.as;
            if (+a != +b) {
                this.ao = a;
                this.bm("RangeStart", b, this.as);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ar", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            var b = this.ar;
            if (+a != +b) {
                this.an = a;
                this.bm("RangeEnd", b, this.ar);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartToolbar.prototype.bn = function () {
        if (this.s != null) {
            this.s.ab();
        }
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "y", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            var b = this.y;
            if (a != b) {
                this.x = a;
                this.bm("ChartType", enumGetBox(FinancialChartType_$type, b), enumGetBox(FinancialChartType_$type, this.y));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ai", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            var b = this.ai;
            if (a != b) {
                this.ah = a;
                this.bm("TrendLineType", enumGetBox(TrendLineType_$type, b), enumGetBox(TrendLineType_$type, this.ai));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ac", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            var b = this.ac;
            if (a != b) {
                this.ab = a;
                this.bm("VolumeType", enumGetBox(FinancialChartVolumeType_$type, b), enumGetBox(FinancialChartVolumeType_$type, this.ac));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ae", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            var b = this.ae;
            if (!FinancialChartToolbar.am(b, a)) {
                this.ad = a;
                this.bm("IndicatorTypes", b, this.ae);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ag", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            var b = this.ag;
            if (!FinancialChartToolbar.am(b, a)) {
                this.af = a;
                this.bm("OverlayTypes", b, this.ag);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartToolbar.am = function (a, b) {
        var e_20, _a;
        if (a == b) {
            return true;
        }
        if ((a == null && b != null) || (a != null && b == null)) {
            return false;
        }
        if (a.count != b.count) {
            return false;
        }
        try {
            for (var _b = tslib_1.__values(fromEn(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (!b.contains(c)) {
                    return false;
                }
            }
        }
        catch (e_20_1) {
            e_20 = { error: e_20_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_20)
                    throw e_20.error;
            }
        }
        return true;
    };
    FinancialChartToolbar.prototype.aj = function () {
        var _this = this;
        return ((function () {
            var $ret = new FinancialChartToolbarVisualData();
            $ret.rangeSelector = _this.s == null ? null : _this.s.r();
            return $ret;
        })());
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "u", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            var b = this.u;
            if (a != b) {
                this.t = a;
                this.bm("RangeSelectorOptions", b, this.u);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "al", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            var b = this.al;
            if (a != b) {
                this.ak = a;
                this.bm("IsToolbarVisible", b, this.al);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartToolbar.$t = markType(FinancialChartToolbar, 'FinancialChartToolbar', TemplatedHtmlControl.$);
    return FinancialChartToolbar;
}(TemplatedHtmlControl));
export { FinancialChartToolbar };
/**
 * @hidden
 */
var FinancialChartRangeSelector = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(FinancialChartRangeSelector, _super);
    function FinancialChartRangeSelector(a) {
        var _this = _super.call(this, "financialChartRangeSelector", a, "") || this;
        _this.q = null;
        _this.rangeChanged = null;
        _this.p = null;
        _this.p = new FinancialChartRangeSelectorView();
        _this.q = new FinancialChartRangeSelectorViewModel();
        _this.q.onRangeChanged = runOn(_this, _this.z);
        return _this;
    }
    Object.defineProperty(FinancialChartRangeSelector.prototype, "v", {
        get: function () {
            return this.q.selectionStart;
        },
        set: function (a) {
            this.q.selectionStart = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartRangeSelector.prototype, "u", {
        get: function () {
            return this.q.selectionEnd;
        },
        set: function (a) {
            this.q.selectionEnd = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartRangeSelector.prototype, "t", {
        get: function () {
            return this.q.rangeStart;
        },
        set: function (a) {
            this.q.rangeStart = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartRangeSelector.prototype, "s", {
        get: function () {
            return this.q.rangeEnd;
        },
        set: function (a) {
            this.q.rangeEnd = a;
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartRangeSelector.prototype.ab = function () {
        if (this.q.onPropertiesChanged()) {
            this.p.e(this.q);
        }
    };
    FinancialChartRangeSelector.prototype.l = function (a) {
        _super.prototype.l.call(this, a);
        this.p.d(this.d, this.q);
    };
    FinancialChartRangeSelector.prototype.z = function () {
        if (this.rangeChanged != null) {
            this.rangeChanged(this, EventArgs.empty);
        }
    };
    FinancialChartRangeSelector.prototype.r = function () {
        return this.p.c(this.g);
    };
    Object.defineProperty(FinancialChartRangeSelector.prototype, "o", {
        get: function () {
            return this.q.options;
        },
        set: function (a) {
            var b = !FinancialChartToolbar.am(this.q.options, a);
            if (b) {
                this.q.options = a;
                this.aa();
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartRangeSelector.prototype.aa = function () {
        if (this.q != null) {
            this.q.af();
        }
        if (this.p != null) {
            this.p.g(this.o);
        }
    };
    FinancialChartRangeSelector.$t = markType(FinancialChartRangeSelector, 'FinancialChartRangeSelector', TemplatedHtmlControl.$);
    FinancialChartRangeSelector.x = 0;
    return FinancialChartRangeSelector;
}(TemplatedHtmlControl));
export { FinancialChartRangeSelector };
//# sourceMappingURL=FinancialChart_combined.js.map
