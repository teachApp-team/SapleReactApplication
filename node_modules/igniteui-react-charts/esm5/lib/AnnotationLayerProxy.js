/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, typeCast, delegateCombine, delegateRemove, markType } from "igniteui-react-core";
import { IAnnotationLayerProxy_$type } from "./IAnnotationLayerProxy";
import { CalloutLayer } from "./CalloutLayer";
/**
 * @hidden
 */
var AnnotationLayerProxy = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(AnnotationLayerProxy, _super);
    function AnnotationLayerProxy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AnnotationLayerProxy.prototype.matchesType = function (a) {
        if (!a.cj) {
            return false;
        }
        return true;
    };
    AnnotationLayerProxy.prototype.setContentMemberPath = function (a, b) {
        a.o5 = b;
    };
    AnnotationLayerProxy.prototype.setHorizontalLineVisibility = function (a, b) {
        a.pl = b;
    };
    AnnotationLayerProxy.prototype.setIsAxisAnnotationEnabled = function (a, b) {
        a.nb = b;
    };
    AnnotationLayerProxy.prototype.setLabelMemberPath = function (a, b) {
        a.pe = b;
    };
    AnnotationLayerProxy.prototype.setUseInterpolation = function (a, b) {
        a.nd = b;
    };
    AnnotationLayerProxy.prototype.setVerticalLineVisibility = function (a, b) {
        a.pm = b;
    };
    AnnotationLayerProxy.prototype.setXMemberPath = function (a, b) {
        a.pl = b;
    };
    AnnotationLayerProxy.prototype.setYMemberPath = function (a, b) {
        a.po = b;
    };
    AnnotationLayerProxy.prototype.setTargetSeries = function (a, b) {
        a.nb = b;
    };
    AnnotationLayerProxy.prototype.setCollisionChannel = function (a, b) {
        a.o2 = b;
    };
    AnnotationLayerProxy.prototype.isCalloutLayer = function (a) {
        if (typeCast(CalloutLayer.$, a) !== null) {
            return true;
        }
        return false;
    };
    AnnotationLayerProxy.prototype.addCalloutStyleUpdating = function (a, b) {
        var c = a;
        c.calloutStyleUpdating = delegateCombine(c.calloutStyleUpdating, b);
    };
    AnnotationLayerProxy.prototype.removeCalloutStyleUpdating = function (a, b) {
        var c = a;
        c.calloutStyleUpdating = delegateRemove(c.calloutStyleUpdating, b);
    };
    AnnotationLayerProxy.prototype.setCalloutStyleUpdatingEventEnabled = function (a, b) {
        a.n1 = b;
    };
    AnnotationLayerProxy.$t = markType(AnnotationLayerProxy, 'AnnotationLayerProxy', Base.$, [IAnnotationLayerProxy_$type]);
    return AnnotationLayerProxy;
}(Base));
export { AnnotationLayerProxy };
//# sourceMappingURL=AnnotationLayerProxy.js.map
