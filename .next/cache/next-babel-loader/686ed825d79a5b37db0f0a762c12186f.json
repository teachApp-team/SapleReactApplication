{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/fujitakosuke/Projects/TanngoNext/tanngo_app/pages/user.js\",\n    _this = this;\n\nimport Link from 'next/link';\nimport style from '../static/Style';\nimport Layout from '../components/Layout';\nimport Top from '../components/Top';\nimport ComposedChart from 'react-svg-radar-chart';\nvar dataGraph = [{\n  month: '1月',\n  '売上': 800,\n  '総売上': 1400\n}, {\n  month: '2月',\n  '売上': 967,\n  '総売上': 1506\n}, {\n  month: '3月',\n  '売上': 1098,\n  '総売上': 989\n}, {\n  month: '4月',\n  '売上': 1200,\n  '総売上': 1228\n}, {\n  month: '5月',\n  '売上': 1108,\n  '総売上': 1100\n}, {\n  month: '6月',\n  '売上': 680,\n  '総売上': 1700\n}];\nexport default (function () {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    header: \"Next\",\n    title: \"User page.\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ComposedChart //グラフ全体のサイズや位置、データを指定。場合によってmarginで上下左右の位置を指定する必要あり。\n      , {\n        width: 600 //グラフ全体の幅を指定\n        ,\n        height: 280 //グラフ全体の高さを指定\n        ,\n        data: dataGraph //ここにArray型のデータを指定\n        ,\n        margin: {\n          top: 20,\n          right: 60,\n          bottom: 0,\n          left: 0\n        } //marginを指定\n        ,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"month\" //Array型のデータの、X軸に表示したい値のキーを指定\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, _this), \" //hover\\u3057\\u305F\\u6642\\u306B\\u5404\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\\u30FC\\u306E\\u8A73\\u7D30\\u3092\\u898B\\u308C\\u308B\\u3088\\u3046\\u306B\\u8A2D\\u5B9A\", /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }, _this), \"  // \\u51E1\\u4F8B\\u3092\\u8868\\u793A(\\u56F3\\u306E\\u3010\\u58F2\\u4E0A\\u3011\\u3010\\u7DCF\\u58F2\\u4E0A\\u3011)\", /*#__PURE__*/_jsxDEV(CartesianGrid //グラフのグリッドを指定\n        , {\n          stroke: \"#f5f5f5\" //グリッド線の色を指定\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(Area //面積を表すグラフ\n        , {\n          type: \"monotone\" //グラフが曲線を描くように指定。default値は折れ線グラフ\n          ,\n          dataKey: \"\\u7DCF\\u58F2\\u4E0A\" //Array型のデータの、Y軸に表示したい値のキーを指定\n          ,\n          stroke: \"#00aced\" ////グラフの線の色を指定\n          ,\n          fillOpacity: 1 ////グラフの中身の薄さを指定\n          ,\n          fill: \"rgba(0, 172, 237, 0.2)\" //グラフの色を指定\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(Bar //棒グラフ\n        , {\n          dataKey: \"\\u58F2\\u4E0A\" //Array型のデータの、Y軸に表示したい値のキーを指定\n          ,\n          barSize: 20 //棒の太さを指定\n          ,\n          stroke: \"rgba(34, 80, 162, 0.2)\" ////レーダーの線の色を指定 \n          ,\n          fillOpacity: 1 //レーダーの中身の色の薄さを指定\n          ,\n          fill: \"#2250A2\" ////レーダーの中身の色を指定\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"./other\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"go to other >>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, _this);\n});","map":{"version":3,"sources":["/Users/fujitakosuke/Projects/TanngoNext/tanngo_app/pages/user.js"],"names":["Link","style","Layout","Top","ComposedChart","dataGraph","month","top","right","bottom","left"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AAEA,IAAMC,SAAS,GAAG,CAChB;AAACC,EAAAA,KAAK,EAAE,IAAR;AAAc,QAAM,GAApB;AAAyB,SAAO;AAAhC,CADgB,EAEhB;AAACA,EAAAA,KAAK,EAAE,IAAR;AAAc,QAAM,GAApB;AAAyB,SAAO;AAAhC,CAFgB,EAGhB;AAACA,EAAAA,KAAK,EAAE,IAAR;AAAc,QAAM,IAApB;AAA0B,SAAO;AAAjC,CAHgB,EAIhB;AAACA,EAAAA,KAAK,EAAE,IAAR;AAAc,QAAM,IAApB;AAA0B,SAAO;AAAjC,CAJgB,EAKhB;AAACA,EAAAA,KAAK,EAAE,IAAR;AAAc,QAAM,IAApB;AAA0B,SAAO;AAAjC,CALgB,EAMhB;AAACA,EAAAA,KAAK,EAAE,IAAR;AAAc,QAAM,GAApB;AAAyB,SAAO;AAAhC,CANgB,CAAlB;AASA,gBAAe;AAAA,sBACb,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAE,MAAhB;AAAuB,IAAA,KAAK,EAAE,YAA9B;AAAA,2BACE;AAAA,8BACA,QAAC,aAAD,CAAe;AAAf;AACA,QAAA,KAAK,EAAE,GADP,CACa;AADb;AAEA,QAAA,MAAM,EAAE,GAFR,CAEc;AAFd;AAGA,QAAA,IAAI,EAAED,SAHN,CAGiB;AAHjB;AAIA,QAAA,MAAM,EAAE;AAAEE,UAAAA,GAAG,EAAE,EAAP;AAAWC,UAAAA,KAAK,EAAE,EAAlB;AAAsBC,UAAAA,MAAM,EAAE,CAA9B;AAAiCC,UAAAA,IAAI,EAAE;AAAvC,SAJR,CAIqD;AAJrD;AAAA,gCAME,QAAC,KAAD;AACE,UAAA,OAAO,EAAC,OADV,CACmB;;AADnB;AAAA;AAAA;AAAA;AAAA,iBANF,eASE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,iBATF,eAUE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,iBAVF,qKAWE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,iBAXF,0HAYE,QAAC,aAAD,CAAe;AAAf;AACE,UAAA,MAAM,EAAC,SADT,CACmB;;AADnB;AAAA;AAAA;AAAA;AAAA,iBAZF,eAeE,QAAC,IAAD,CAAM;AAAN;AACE,UAAA,IAAI,EAAC,UADP,CACmB;AADnB;AAEE,UAAA,OAAO,EAAC,oBAFV,CAEgB;AAFhB;AAGE,UAAA,MAAM,EAAC,SAHT,CAGmB;AAHnB;AAIE,UAAA,WAAW,EAAE,CAJf,CAImB;AAJnB;AAKE,UAAA,IAAI,EAAC,wBALP,CAKiC;;AALjC;AAAA;AAAA;AAAA;AAAA,iBAfF,eAsBE,QAAC,GAAD,CAAK;AAAL;AACE,UAAA,OAAO,EAAC,cADV,CACe;AADf;AAEE,UAAA,OAAO,EAAE,EAFX,CAEgB;AAFhB;AAGE,UAAA,MAAM,EAAC,wBAHT,CAGkC;AAHlC;AAIE,UAAA,WAAW,EAAE,CAJf,CAImB;AAJnB;AAKE,UAAA,IAAI,EAAC,SALP,CAKiB;;AALjB;AAAA;AAAA;AAAA;AAAA,iBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eA+BE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADa;AAAA,CAAf","sourcesContent":["import Link from 'next/link';\nimport style from '../static/Style';\nimport Layout from '../components/Layout';\nimport Top from '../components/Top';\nimport ComposedChart from 'react-svg-radar-chart';\n\nconst dataGraph = [\n  {month: '1月', '売上': 800, '総売上': 1400},\n  {month: '2月', '売上': 967, '総売上': 1506},\n  {month: '3月', '売上': 1098, '総売上': 989},\n  {month: '4月', '売上': 1200, '総売上': 1228},\n  {month: '5月', '売上': 1108, '総売上': 1100},\n  {month: '6月', '売上': 680, '総売上': 1700}\n];\n\nexport default () => (\n  <Layout header =\"Next\" title =\"User page.\">\n    <div>\n    <ComposedChart //グラフ全体のサイズや位置、データを指定。場合によってmarginで上下左右の位置を指定する必要あり。\n    width={600}  //グラフ全体の幅を指定\n    height={280}  //グラフ全体の高さを指定\n    data={dataGraph} //ここにArray型のデータを指定\n    margin={{ top: 20, right: 60, bottom: 0, left: 0 }}  //marginを指定\n>\n      <XAxis\n        dataKey=\"month\"  //Array型のデータの、X軸に表示したい値のキーを指定\n      />\n      <YAxis />\n      <Tooltip /> //hoverした時に各パラメーターの詳細を見れるように設定\n      <Legend />  // 凡例を表示(図の【売上】【総売上】)\n      <CartesianGrid //グラフのグリッドを指定\n        stroke=\"#f5f5f5\" //グリッド線の色を指定\n      />\n      <Area //面積を表すグラフ\n        type=\"monotone\"  //グラフが曲線を描くように指定。default値は折れ線グラフ\n        dataKey=\"総売上\" //Array型のデータの、Y軸に表示したい値のキーを指定\n        stroke=\"#00aced\" ////グラフの線の色を指定\n        fillOpacity={1}  ////グラフの中身の薄さを指定\n        fill=\"rgba(0, 172, 237, 0.2)\"  //グラフの色を指定\n      />\n      <Bar //棒グラフ\n        dataKey=\"売上\"　//Array型のデータの、Y軸に表示したい値のキーを指定\n        barSize={20}  //棒の太さを指定\n        stroke=\"rgba(34, 80, 162, 0.2)\" ////レーダーの線の色を指定 \n        fillOpacity={1}  //レーダーの中身の色の薄さを指定\n        fill=\"#2250A2\" ////レーダーの中身の色を指定\n      />\n      </ComposedChart>\n      <Link href=\"./other\">\n        <button>\n          go to other &gt;&gt;\n        </button>\n      </Link>\n    </div>\n  </Layout>\n);\n"]},"metadata":{},"sourceType":"module"}