import * as React from 'react';
import { TimeAxisIntervalType } from "./TimeAxisIntervalType";
import { TimeAxisInterval } from "./TimeAxisInterval";
export declare class IgrTimeAxisInterval<P extends IIgrTimeAxisIntervalProps = IIgrTimeAxisIntervalProps> extends React.Component<P, {}> {
    protected _implementation: any;
    readonly i: TimeAxisInterval;
    private onImplementationCreated;
    constructor(props: P);
    componentDidMount(): void;
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    render(): any;
    protected createImplementation(): TimeAxisInterval;
    private _renderer;
    private _provideRenderer;
    static _createFromInternal(internal: any): IgrTimeAxisInterval;
    /**
 * The visible axis range at which to apply this interval.
*
* Use `range` property for the visible axis range at which to apply this interval.
*/
    range: number;
    /**
     * The interval, expressed as a multiple of IntervalType.
    *
    * Use the `interval` property expressed as a multiple of IntervalType.
    *
    * ```ts
    *   <IgrDataChart
    *     dataSource={this.state.dataSource}
    *     width="700px"
    *     height="500px">
    *     <IgrOrdinalTimeXAxis name="xAxis"
    * 	label="Date"
    * 	dateTimeMemberPath="Date" />
    *  </IgrDataChart>
    * ```
    *
    * ```ts
    * this.timeXAxis = new IgrTimeXAxis({name: "timeXAxis"});
    * this.timeXAxis.title = "Time X Axis";
    * this.timeXAxis.dataSource = this.financialData;
    * this.timeXAxis.dateTimeMemberPath = "Time";
    * this.timeXAxis.intervals={2};
    * ```
    */
    interval: number;
    /**
     * The unit of time for this interval.
    *
    * The `intervalType` is the unit of time for this interval.
    */
    intervalType: TimeAxisIntervalType;
    findByName(name: string): any;
    protected __p: string;
    protected _hasUserValues: Set<string>;
    protected readonly hasUserValues: Set<string>;
    protected __m(propertyName: string): void;
    protected _stylingContainer: any;
    protected _stylingParent: any;
    protected _inStyling: boolean;
    protected _styling(container: any, component: any, parent?: any): void;
}
export interface IIgrTimeAxisIntervalProps {
    /**
 * The visible axis range at which to apply this interval.
*
* Use `range` property for the visible axis range at which to apply this interval.
*/
    range?: number | string;
    /**
     * The interval, expressed as a multiple of IntervalType.
    *
    * Use the `interval` property expressed as a multiple of IntervalType.
    *
    * ```ts
    *   <IgrDataChart
    *     dataSource={this.state.dataSource}
    *     width="700px"
    *     height="500px">
    *     <IgrOrdinalTimeXAxis name="xAxis"
    * 	label="Date"
    * 	dateTimeMemberPath="Date" />
    *  </IgrDataChart>
    * ```
    *
    * ```ts
    * this.timeXAxis = new IgrTimeXAxis({name: "timeXAxis"});
    * this.timeXAxis.title = "Time X Axis";
    * this.timeXAxis.dataSource = this.financialData;
    * this.timeXAxis.dateTimeMemberPath = "Time";
    * this.timeXAxis.intervals={2};
    * ```
    */
    interval?: number | string;
    /**
     * The unit of time for this interval.
    *
    * The `intervalType` is the unit of time for this interval.
    */
    intervalType?: TimeAxisIntervalType | string;
}
