/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { MarkerSeries } from "./MarkerSeries";
import { ISupportsErrorBars_$type } from "./ISupportsErrorBars";
import { ITrendLineSeries_$type } from "./ITrendLineSeries";
import { ScatterAxisInfoCache } from "./ScatterAxisInfoCache";
import { NumericXAxis } from "./NumericXAxis";
import { DependencyProperty } from "igniteui-react-core";
import { NumericYAxis } from "./NumericYAxis";
import { Series } from "./Series";
import { TrendLineType_$type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { CollisionAvoidanceType_$type } from "./CollisionAvoidanceType";
import { ScatterErrorBarSettings } from "./ScatterErrorBarSettings";
import { ScatterFrame } from "./ScatterFrame";
import { Base, enumGetBox, Number_$type, typeCast, fromEnum, Point_$type, markType, markDep, PointUtil, runOn } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { ScalerParams } from "./ScalerParams";
import { Rect } from "igniteui-react-core";
import { Marker } from "./Marker";
import { MarkerSeriesView } from "./MarkerSeriesView";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { Clipper } from "igniteui-react-core";
import { OwnedPoint } from "./OwnedPoint";
import { Dictionary$2 } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { TrendResolutionParams } from "./TrendResolutionParams";
import { ScatterTrendLineManager } from "./ScatterTrendLineManager";
import { ErrorBarsHelper } from "./ErrorBarsHelper";
import { PathGeometry } from "igniteui-react-core";
import { HashPool$2 } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_, isInfinity } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { DataTemplateMeasureInfo } from "igniteui-react-core";
import { Size } from "igniteui-react-core";
import { NumericMarkerManager } from "./NumericMarkerManager";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var ScatterBase = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ScatterBase, _super);
    function ScatterBase() {
        var _this = _super.call(this) || this;
        _this.m8 = null;
        _this.ng = null;
        _this.ni = null;
        _this.oz = null;
        _this.o0 = null;
        _this.nd = null;
        _this.nf = null;
        _this.nc = null;
        _this.ne = null;
        _this.nb = null;
        _this.ne = new ScatterFrame();
        _this.o0 = Rect.empty;
        _this.oz = Rect.empty;
        return _this;
    }
    ScatterBase.prototype.bf = function () {
        return new ScatterBaseView(this);
    };
    ScatterBase.prototype.hu = function () {
        _super.prototype.hu.call(this);
        this.xAxis = null;
        this.yAxis = null;
    };
    ScatterBase.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.m9 = a;
    };
    ScatterBase.prototype.get_c4 = function () {
        return true;
    };
    ScatterBase.prototype.ag = function () {
        return [this.xAxis, this.yAxis];
    };
    ScatterBase.prototype.fs = function (a, b) {
        var c = this.gv(b);
        if (c == ScatterBase.$$p[4]) {
            return this.ft(a, b, this.nv);
        }
        if (c == ScatterBase.$$p[6]) {
            return this.ft(a, b, this.nz);
        }
        return null;
    };
    ScatterBase.prototype.ch = function (a, b, c) {
        var _this = this;
        if (!this.hasMarkers) {
            return false;
        }
        var d = this.xAxis;
        var e = new ScalerParams(1, this.bs.mr, this.lz, d.ca);
        e.c = this.getEffectiveViewport1(this.bi);
        var f = this.yAxis;
        var g = new ScalerParams(1, this.bs.mr, this.lz, f.ca);
        g.c = this.getEffectiveViewport1(this.bi);
        a.clear();
        this.l1.cc(function (h) {
            if (h._visibility == 0) {
                var i = new SeriesPointOfInterest();
                var j = h.n;
                var k = h.o;
                if (j < _this.lz.left || j > _this.lz.right || k < _this.lz.top || k > _this.lz.bottom) {
                    return;
                }
                i.b = d.d1(j, e);
                i.c = f.d1(k, g);
                i.a = h.content;
                a.add(i);
            }
        });
        return true;
    };
    ScatterBase.prototype.bd = function () {
        if (this.be == 0) {
            if (this.no <= 2000) {
                return 1;
            }
            else {
                return _super.prototype.bd.call(this);
            }
        }
        else {
            return _super.prototype.bd.call(this);
        }
    };
    ScatterBase.prototype.lx = function (a) {
        if (!this.hasMarkers || !this.l4()) {
            return Rect.empty;
        }
        var b = this.l1.bv(this.lh(a));
        if (b != null) {
            return this.l1.cm(b);
        }
        return Rect.empty;
    };
    ScatterBase.prototype.dh = function (a, b) {
        if (this.l5(a, b)) {
            return true;
        }
        return false;
    };
    Object.defineProperty(ScatterBase.prototype, "nh", {
        get: function () {
            return this.ng;
        },
        set: function (a) {
            if (this.ng != a) {
                var b = this.nh;
                this.ng = a;
                this.raisePropertyChanged("XColumn", b, this.nh);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScatterBase.prototype, "nj", {
        get: function () {
            return this.ni;
        },
        set: function (a) {
            if (this.ni != a) {
                var b = this.nj;
                this.ni = a;
                this.raisePropertyChanged("YColumn", b, this.nj);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScatterBase.prototype, "ow", {
        get: function () {
            return this.c(ScatterBase.oh);
        },
        set: function (a) {
            this.h(ScatterBase.oh, a);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScatterBase.prototype, "GetErrorBarsXAxis", {
        get: function () {
            return this.xAxis;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScatterBase.prototype, "GetErrorBarsYAxis", {
        get: function () {
            return this.yAxis;
        },
        enumerable: true,
        configurable: true
    });
    ScatterBase.prototype.ic = function () {
        _super.prototype.ic.call(this);
        if (this.xAxis != null) {
            this.xAxis.hb(false);
        }
        if (this.yAxis != null) {
            this.yAxis.hb(false);
        }
    };
    ScatterBase.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
        if (this.m9.ct.g$b(a, b, c, d)) {
            this.je(false);
            this.il();
        }
        switch (b) {
            case "FastItemsSource":
                if (typeCast(IFastItemsSource_$type, c) != null) {
                    c.deregisterColumn(this.nh);
                    c.deregisterColumn(this.nj);
                    this.nh = null;
                    this.nj = null;
                }
                if (typeCast(IFastItemsSource_$type, d) != null) {
                    this.nh = this.bw(this.nv);
                    this.nj = this.bw(this.nz);
                }
                if ((this.yAxis != null && !this.yAxis.cn()) || (this.xAxis != null && !this.xAxis.cn())) {
                    this.je(false);
                }
                break;
            case ScatterBase.$$p[3]:
                if (c != null) {
                    c.bx(this);
                }
                if (d != null) {
                    d.ck(this);
                }
                if ((this.xAxis != null && !this.xAxis.cn()) || (d == null && c != null)) {
                    this.je(false);
                }
                this.il();
                break;
            case ScatterBase.$$p[5]:
                if (c != null) {
                    c.bx(this);
                }
                if (d != null) {
                    d.ck(this);
                }
                if ((this.yAxis != null && !this.yAxis.cn()) || (d == null && c != null)) {
                    this.je(false);
                }
                this.il();
                break;
            case ScatterBase.$$p[4]:
                if (this.bz != null) {
                    this.bz.deregisterColumn(this.nh);
                    this.nh = this.bw(this.nv);
                }
                break;
            case "XColumn":
                this.m9.ct.g$i();
                if (this.xAxis != null && !this.xAxis.cn()) {
                    this.je(false);
                }
                break;
            case ScatterBase.$$p[6]:
                if (this.bz != null) {
                    this.bz.deregisterColumn(this.nj);
                    this.nj = this.bw(this.nz);
                }
                break;
            case "YColumn":
                this.m9.ct.g$i();
                if (this.yAxis != null && !this.yAxis.cn()) {
                    this.je(false);
                }
                break;
            case ScatterBase.$$p[1]:
                this.je(false);
                this.il();
                break;
            case ScatterBase.$$p[2]:
                this.je(false);
                this.il();
                break;
            case "TransitionProgress":
                this.nf.c(this.ez, this.nd, this.nc);
                this.n1();
                try {
                    if (this.cc(this.bi)) {
                        return;
                    }
                    if ((Math.round(this.ez * 100000) / 100000) == 1) {
                        this.of(this.nc, this.m9);
                    }
                    else {
                        this.of(this.nf, this.m9);
                    }
                    if (this.bs != null) {
                        this.bs.jk(this);
                    }
                }
                finally {
                    this.og();
                }
                break;
            case "TrendLineBrush":
                this.jp();
                break;
            case ScatterBase.$$p[0]:
                if (this.na != null) {
                    this.na.r = this;
                }
                this.je(false);
                this.il();
                break;
            case "TrendLineType":
                this.il();
                break;
        }
    };
    ScatterBase.prototype.nl = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    ScatterBase.prototype.nk = function (a) {
        if (typeCast(NumericXAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    ScatterBase.prototype.og = function () {
        this.oz = Rect.empty;
        this.o0 = Rect.empty;
    };
    ScatterBase.prototype.n1 = function () {
        var a = this.getViewInfo(this.oz, this.o0);
        this.oz = a.p0;
        this.o0 = a.p1;
    };
    ScatterBase.prototype.nm = function (a, b) {
        if (b != 3) {
            return true;
        }
        if (a == null) {
            return true;
        }
        if (this.nv == a || this.nz == a) {
            return true;
        }
        return false;
    };
    ScatterBase.prototype.hz = function (a, b, c, d) {
        var e = false;
        if (!this.nm(d, a)) {
            return;
        }
        this.m9.ct.g$e(a, b, c, d);
        if (this.xAxis != null && !this.xAxis.cn()) {
            e = true;
        }
        if (this.yAxis != null && !this.yAxis.cn()) {
            e = true;
        }
        if (e) {
            this.je(true);
        }
    };
    ScatterBase.prototype.n9 = function (a) {
        this.oa(a, null);
    };
    ScatterBase.prototype.oa = function (a, b) {
        var e_1, _a, e_2, _b;
        var c = this.nh != null ? this.nh.count : 0;
        var d = this.nj != null ? this.nj.count : 0;
        var e = Math.min(c, d);
        if (e <= this.no) {
            a.m.clear();
            var f = new List$1(OwnedPoint.$, 0);
            try {
                for (var _c = tslib_1.__values(fromEnum(a.u.values)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var g = _d.value;
                    f.add(g);
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            var h_1 = this.bz;
            f.aa(function (i, j) {
                var k = h_1.indexOf(i.a);
                var l = h_1.indexOf(j.a);
                if (k < l) {
                    return -1;
                }
                if (k > l) {
                    return 1;
                }
                return 0;
            });
            if (b != null) {
                b.i = a.m;
            }
            try {
                for (var _e = tslib_1.__values(fromEnum(f)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var i = _f.value;
                    if (h_1.indexOf(i.a) >= 0) {
                        if (b != null) {
                            b.j(i.c);
                        }
                        else {
                            a.m.add({ $type: Point_$type, x: i.c.x, y: i.c.y });
                        }
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        }
    };
    ScatterBase.prototype.an = function (a) {
        if (a != null && a == this.xAxis && this.nh != null) {
            return new AxisRange(this.nh.minimum, this.nh.maximum);
        }
        if (a != null && a == this.yAxis && this.nj != null) {
            return new AxisRange(this.nj.minimum, this.nj.maximum);
        }
        return null;
    };
    ScatterBase.prototype.fp = function (a) {
        return null;
    };
    ScatterBase.prototype.e8 = function (a) {
        return -1;
    };
    ScatterBase.prototype.c9 = function (a) {
        var _this = this;
        var b = this.bs != null ? this.bs.mr : Rect.empty;
        b = b.copy();
        var c = this.bs != null ? this.bs.m5 : Rect.empty;
        var d = new Rect(0, 0, 0, 1, 1);
        var e = this.lt(this.bi);
        var f = new ScalerParams(0, d, d, this.xAxis.ca, e);
        var g = ((function () {
            var $ret = new ScalerParams(0, d, d, _this.yAxis.ca, e);
            $ret.b = _this.eh();
            return $ret;
        })());
        var h = !b.isEmpty && !c.isEmpty && this.bz != null ? this.bz.indexOf(a) : -1;
        var i = this.xAxis != null && this.nh != null && h < this.nh.count ? this.xAxis.dy(this.nh.item(h), f) : NaN;
        var j = this.yAxis != null && this.nj != null && h < this.nj.count ? this.yAxis.dy(this.nj.item(h), g) : NaN;
        if (!isNaN_(i)) {
            if (i < b.left + 0.1 * b.width) {
                i = i + 0.4 * b.width;
                b.x = i - 0.5 * b.width;
            }
            if (i > b.right - 0.1 * b.width) {
                i = i - 0.4 * b.width;
                b.x = i - 0.5 * b.width;
            }
        }
        if (!isNaN_(j)) {
            if (j < b.top + 0.1 * b.height) {
                j = j + 0.4 * b.height;
                b.y = j - 0.5 * b.height;
            }
            if (j > b.bottom - 0.1 * b.height) {
                j = j - 0.4 * b.height;
                b.y = j - 0.5 * b.height;
            }
        }
        if (this.bn != null) {
            this.bn.ap(this.bs, b, true);
        }
        return h >= 0;
    };
    ScatterBase.prototype.jt = function (a, b) {
        this.je(false);
    };
    ScatterBase.prototype.ju = function (a, b) {
        this.je(false);
    };
    ScatterBase.prototype.n2 = function (a, b, c, d, e) {
        var _this = this;
        b.g = new Dictionary$2(Base.$, OwnedPoint.$, 1, c);
        var f = this.getEffectiveViewport1(a);
        var g = this.bz;
        var h;
        var i;
        var j = ((function () {
            var $ret = new ScalerParams(0, d, e, _this.m8.d, f);
            $ret.c = _this.getEffectiveViewport1(a);
            return $ret;
        })());
        var k = ((function () {
            var $ret = new ScalerParams(0, d, e, _this.m8.e, f);
            $ret.c = _this.getEffectiveViewport1(a);
            $ret.b = _this.eh();
            return $ret;
        })());
        var _loop_1 = function (l) {
            h = this_1.nh.item(l);
            i = this_1.nj.item(l);
            var m = { $type: Point_$type, x: this_1.m8.a.dy(h, j), y: this_1.m8.b.dy(i, k) };
            if (!isInfinity(m.x) && !isInfinity(m.y)) {
                var n_1 = g.item(l);
                if (!b.g.containsKey(n_1)) {
                    var o_1 = { $type: Point_$type, x: h, y: i };
                    var p_1 = { $type: Point_$type, x: m.x, y: m.y };
                    b.g.addItem(n_1, ((function () {
                        var $ret = new OwnedPoint();
                        $ret.a = n_1;
                        $ret.b = o_1;
                        $ret.c = p_1;
                        return $ret;
                    })()));
                }
            }
        };
        var this_1 = this;
        for (var l = 0; l < c; l++) {
            _loop_1(l);
        }
    };
    ScatterBase.prototype.n6 = function (a, b) {
        var _this = this;
        a.j.clear();
        a.n.clear();
        a.h.clear();
        a.l.clear();
        a.i.clear();
        a.k.clear();
        var c = Math.min(this.nh != null ? this.nh.count : 0, this.nj != null ? this.nj.count : 0);
        var d = b.bs;
        var e = b.br;
        var f = this.getEffectiveViewport1(b);
        var g = new ScalerParams(0, d, e, this.xAxis.ca, f);
        g.c = this.getEffectiveViewport1(b);
        var h = ((function () {
            var $ret = new ScalerParams(0, d, e, _this.yAxis.ca, f);
            $ret.b = _this.eh();
            return $ret;
        })());
        ;
        h.c = this.getEffectiveViewport1(b);
        if (c < 1) {
            return;
        }
        this.m8 = ((function () {
            var $ret = new ScatterAxisInfoCache();
            $ret.a = _this.xAxis;
            $ret.b = _this.yAxis;
            $ret.d = _this.xAxis.ca;
            $ret.e = _this.yAxis.ca;
            $ret.c = _this.bz;
            return $ret;
        })());
        var i = b;
        if (c <= this.no) {
            this.n2(i, a, c, d, e);
        }
        if (this.l4()) {
            b.cr.l(a.j, this.no, d, e, this.eu);
        }
        var j = ((function () {
            var $ret = new Clipper(0, e, false);
            $ret.i = a.n;
            return $ret;
        })());
        var k = this.lr(b);
        var l = this.xAxis.d1(k.left, g);
        var m = this.xAxis.d1(k.right, g);
        b.ct.p(a.n, this.trendLineType, this.nh, this.nj, this.trendLinePeriod, function (n) { return _this.xAxis.dy(n, g); }, function (n) { return _this.yAxis.dy(n, h); }, ((function () {
            var $ret = new TrendResolutionParams();
            $ret.b = _this.eu;
            $ret.f = e;
            $ret.g = d;
            return $ret;
        })()), j, l, m);
        this.n4(a, b);
    };
    ScatterBase.prototype.hw = function (a, b) {
        _super.prototype.hw.call(this, a, b);
        var c = b;
        c.c0(a);
    };
    ScatterBase.prototype.of = function (a, b) {
        var _this = this;
        var c = b.br;
        this.m8 = ((function () {
            var $ret = new ScatterAxisInfoCache();
            $ret.a = _this.xAxis;
            $ret.b = _this.yAxis;
            $ret.d = _this.xAxis.ca;
            $ret.e = _this.yAxis.ca;
            return $ret;
        })());
        if (this.l4()) {
            b.cr.j(a.j, this.l6);
        }
        b.cj();
        var d = ((function () {
            var $ret = new Clipper(1, NaN, c.bottom, NaN, c.top, false);
            $ret.i = b.ct.g$j.ak;
            return $ret;
        })());
        b.ct.g$h(a.n, d);
        this.oc(a, b);
    };
    ScatterBase.prototype.n4 = function (a, b) {
        var e_3, _a;
        var c = new ErrorBarsHelper(this, b);
        if (this.na == null) {
            return;
        }
        var d = this.na.u;
        var e = this.na.v;
        var f = 0;
        var g = 0;
        var h = 0;
        var i = 0;
        try {
            for (var _b = tslib_1.__values(fromEnum(a.j.keys)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var j = _c.value;
                var k = a.j.item(j);
                if (d != null) {
                    switch (d.getCalculatorType()) {
                        case 1:
                            var l = this.n7(k, c, d, h, i, true);
                            h = l.p3;
                            i = l.p4;
                            break;
                        case 0:
                            var m = this.n5(k, c, d, h, i, true);
                            h = m.p3;
                            i = m.p4;
                            break;
                        case 2:
                            var n = this.n3(k, c, d, j, h, i, true);
                            h = n.p4;
                            i = n.p5;
                            break;
                        case 3:
                            var o = this.n8(c, d, f, h, i, true);
                            f = o.p2;
                            h = o.p3;
                            i = o.p4;
                            break;
                        case 4:
                            var p = this.n5(k, c, d, h, i, true);
                            h = p.p3;
                            i = p.p4;
                            break;
                    }
                    ;
                    var q = new OwnedPoint();
                    q.c = c.l(d, this.m8.a, k.c, f);
                    ;
                    q.a = k.a;
                    a.h.addItem(j, q);
                    a.i.addItem(j, [h, i]);
                }
                if (e != null) {
                    switch (e.getCalculatorType()) {
                        case 1:
                            var r = this.n7(k, c, e, h, i, false);
                            h = r.p3;
                            i = r.p4;
                            break;
                        case 0:
                            var s = this.n5(k, c, e, h, i, false);
                            h = s.p3;
                            i = s.p4;
                            break;
                        case 2:
                            var t = this.n3(k, c, e, j, h, i, false);
                            h = t.p4;
                            i = t.p5;
                            break;
                        case 3:
                            var u = this.n8(c, e, g, h, i, false);
                            g = u.p2;
                            h = u.p3;
                            i = u.p4;
                            break;
                        case 4:
                            var v = this.n5(k, c, e, h, i, false);
                            h = v.p3;
                            i = v.p4;
                            break;
                    }
                    ;
                    var w = new OwnedPoint();
                    w.c = c.m(e, this.m8.b, k.c, g);
                    ;
                    w.a = k.a;
                    a.l.addItem(j, w);
                    a.k.addItem(j, [h, i]);
                }
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
    };
    ScatterBase.prototype.n7 = function (a, b, c, d, e, f) {
        if (f) {
            var g = void 0;
            var h = void 0, i = void 0;
            i = this.m8.a;
            if (this.na.s == 0) {
                g = a.c.x;
                h = this.m8.a;
            }
            else {
                g = a.c.y;
                h = this.m8.b;
            }
            var j = b.f(g, c, h, i, d, e);
            d = j.p4;
            e = j.p5;
        }
        else {
            var k = void 0;
            var l = void 0, m = void 0;
            m = this.m8.b;
            if (this.na.t == 0) {
                k = a.c.x;
                l = this.m8.a;
            }
            else {
                k = a.c.y;
                l = this.m8.b;
            }
            var n = b.f(k, c, l, m, d, e);
            d = n.p4;
            e = n.p5;
        }
        return {
            p3: d,
            p4: e
        };
    };
    ScatterBase.prototype.n5 = function (a, b, c, d, e, f) {
        if (f) {
            var g = b.j(a.c.x, c, this.m8.a, d, e);
            d = g.p3;
            e = g.p4;
        }
        else {
            var h = b.j(a.c.y, c, this.m8.b, d, e);
            d = h.p3;
            e = h.p4;
        }
        return {
            p3: d,
            p4: e
        };
    };
    ScatterBase.prototype.n3 = function (a, b, c, d, e, f, g) {
        var h = c.getItemColumn();
        var i = this.bz.indexOf(d);
        if (h != null && i < h.count) {
            var j = h.item(i);
            if (g) {
                var k = b.h(a.c.x, j, this.m8.a, e, f);
                e = k.p3;
                f = k.p4;
            }
            else {
                var l = b.h(a.c.y, j, this.m8.b, e, f);
                e = l.p3;
                f = l.p4;
            }
        }
        else {
            e = f = NaN;
        }
        return {
            p4: e,
            p5: f
        };
    };
    ScatterBase.prototype.n8 = function (a, b, c, d, e, f) {
        var g = a.i(b, c);
        c = g.p1;
        if (f) {
            var h = a.k(c, b, this.m8.a, d, e);
            d = h.p3;
            e = h.p4;
        }
        else {
            var i = a.k(c, b, this.m8.b, d, e);
            d = i.p3;
            e = i.p4;
        }
        return {
            p2: c,
            p3: d,
            p4: e
        };
    };
    ScatterBase.prototype.oc = function (a, b) {
        if (!b.l() || this.na == null) {
            b.c1();
            return;
        }
        this.od(a, b);
        this.oe(a, b);
    };
    ScatterBase.prototype.od = function (a, b) {
        var e_4, _a;
        b.cy();
        var c = new ErrorBarsHelper(this, b);
        var d = new PathGeometry();
        var e = this.na.u;
        try {
            for (var _b = tslib_1.__values(fromEnum(a.j.keys)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                if (e != null && a.i.containsKey(f)) {
                    var g = a.i.item(f)[0];
                    var h = a.i.item(f)[1];
                    if (!isNaN_(g) && !isNaN_(h)) {
                        var i = a.h.item(f).c;
                        if (this.na.o == 1 || this.na.o == 2) {
                            c.d(d, i, g, true);
                        }
                        if (this.na.o == 1 || this.na.o == 3) {
                            c.d(d, i, h, false);
                        }
                    }
                }
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
        b.c2(d);
    };
    ScatterBase.prototype.oe = function (a, b) {
        var e_5, _a;
        b.cz();
        var c = new ErrorBarsHelper(this, b);
        var d = new PathGeometry();
        var e = this.na.v;
        try {
            for (var _b = tslib_1.__values(fromEnum(a.j.keys)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                if (e != null && a.k.containsKey(f)) {
                    var g = a.k.item(f)[0];
                    var h = a.k.item(f)[1];
                    if (!isNaN_(g) && !isNaN_(h)) {
                        var i = a.l.item(f).c;
                        if (this.na.p == 1 || this.na.p == 2) {
                            c.e(d, i, g, true);
                        }
                        if (this.na.p == 1 || this.na.p == 3) {
                            c.e(d, i, h, false);
                        }
                    }
                }
            }
        }
        catch (e_5_1) {
            e_5 = { error: e_5_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_5)
                    throw e_5.error;
            }
        }
    };
    ScatterBase.prototype.dw = function (a, b, c) {
        var d = true;
        if (!_super.prototype.dw.call(this, a, b, c) || b.isEmpty || a.isEmpty || this.xAxis == null || this.yAxis == null || this.xAxis.bh == null || this.yAxis.bh == null || this.nh == null || this.nj == null || this.nh.count == 0 || this.nj.count == 0 || this.bz == null || this.bz.count != this.nh.count || this.bz.count != this.nj.count || this.xAxis.bh == null || this.yAxis.bh == null || this.xAxis.kb == this.xAxis.ka || this.yAxis.kb == this.yAxis.ka) {
            d = false;
        }
        return d;
    };
    ScatterBase.prototype.getViewInfo = function (a, b) {
        if (!this.oz.isEmpty && !this.o0.isEmpty) {
            a = this.oz;
            b = this.o0;
            return {
                p0: a,
                p1: b
            };
        }
        a = this.bi.br;
        b = this.bi.bs;
        return {
            p0: a,
            p1: b
        };
    };
    ScatterBase.prototype.jf = function (a) {
        this.n1();
        try {
            if (this.cc(this.bi)) {
                return;
            }
            if (this.bz != null && this.bz.count > this.no) {
                a = false;
            }
            if (this.da(a) && !this.de) {
                var b = this.nd;
                if (this.ca()) {
                    if (this.bt.g) {
                        this.bt.t();
                    }
                    this.nd = this.nf;
                    this.nf = b;
                }
                else {
                    this.nd = this.nc;
                    this.nc = b;
                }
                this.n6(this.nc, this.m9);
                this.jm();
            }
            else {
                if (!this.de) {
                    this.n6(this.nc, this.m9);
                }
                this.of(this.nc, this.m9);
            }
        }
        finally {
            this.og();
        }
    };
    ScatterBase.prototype.jp = function () {
        _super.prototype.jp.call(this);
        if (this.fh < 0) {
            return;
        }
        this.m9.c5();
    };
    ScatterBase.prototype.jg = function (a, b) {
        _super.prototype.jg.call(this, a, b);
        if (!this.dl) {
            this.bi.az(b);
            return;
        }
        this.bi.az(b);
        if (this.cc(this.bh)) {
            return;
        }
        var c = typeCast(ScatterBaseView.$, this.bh);
        if (!this.df) {
            this.ne = new ScatterFrame();
            this.n6(this.ne, c);
        }
        this.df = false;
        this.of(this.ne, c);
        this.dl = false;
    };
    ScatterBase.prototype.jd = function (a, b, c, d, e) {
        _super.prototype.jd.call(this, a, b, c, d, e);
        var f = this.a0.a$h.item(d);
        var g = f;
        f.ay(c);
        if (this.cc(g)) {
            return;
        }
        if (this.nb == null) {
            this.nb = new ScatterFrame();
        }
        this.n6(this.nb, g);
        this.of(this.nb, g);
    };
    ScatterBase.prototype.ob = function (a, b) {
        var e_6, _a, e_7, _b;
        var c = new List$1(Base.$, 0);
        try {
            for (var _c = tslib_1.__values(fromEnum(b.c)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var d = _d.value;
                if (!a.containsKey(d)) {
                    c.add1(d);
                }
            }
        }
        catch (e_6_1) {
            e_6 = { error: e_6_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_6)
                    throw e_6.error;
            }
        }
        try {
            for (var _e = tslib_1.__values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var e = _f.value;
                b.g(e);
            }
        }
        catch (e_7_1) {
            e_7 = { error: e_7_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_7)
                    throw e_7.error;
            }
        }
    };
    ScatterBase.prototype.m4 = function (a, b, c, d, e) {
        var _this = this;
        if (c == null || c.length != this.m8.c.count) {
            c = new Array(this.m8.c.count);
            for (var f = 0; f < this.m8.c.count; f++) {
                c[f] = PointUtil.create();
            }
        }
        var g = this.getEffectiveViewport1(a);
        var h = ((function () {
            var $ret = new ScalerParams(0, d, e, _this.xAxis.ca, g);
            $ret.c = _this.getEffectiveViewport1(a);
            return $ret;
        })());
        var i = ((function () {
            var $ret = new ScalerParams(0, d, e, _this.yAxis.ca, g);
            $ret.c = _this.getEffectiveViewport1(a);
            $ret.b = _this.eh();
            return $ret;
        })());
        var j = this.lr(a);
        var k = this.m8.a.d1(j.left, h);
        var l = this.m8.a.d1(j.right, h);
        var m = this.m8.b.d1(j.bottom, i);
        var n = this.m8.b.d1(j.top, i);
        if (this.m8.d) {
            var o = k;
            k = l;
            l = o;
        }
        if (this.m8.e) {
            var p = m;
            m = n;
            n = p;
        }
        var q = this.m8;
        var r = q.a;
        var s = q.b;
        var t;
        var u;
        var v = this.nh;
        var w = this.nj;
        for (var x = 0; x < this.m8.c.count; x++) {
            t = v.item(x);
            u = w.item(x);
            if (t >= k && t <= l && u >= m && u <= n) {
                c[x].x = r.dy(t, h);
                c[x].y = s.dy(u, i);
            }
            else {
                c[x].x = NaN;
                c[x].y = NaN;
            }
        }
        return c;
    };
    ScatterBase.prototype.nn = function (a, b) {
        var e_8, _a;
        if (b == null) {
            b = new List$1(Number_$type, 2, a.e);
        }
        else {
            b.clear();
        }
        var c = 0;
        var d = this.bz;
        try {
            for (var _b = tslib_1.__values(fromEnum(a.c)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                b.add(d.indexOf(e));
            }
        }
        catch (e_8_1) {
            e_8 = { error: e_8_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_8)
                    throw e_8.error;
            }
        }
        return b;
    };
    ScatterBase.prototype.h5 = function (a) {
        _super.prototype.h5.call(this, a);
        this.a2.exportTrendlineData(this, a, this.m9.ct.g$j);
    };
    ScatterBase.prototype.eh = function () {
        return Series.ei(this.nj, null);
    };
    ScatterBase.$t = markType(ScatterBase, 'ScatterBase', MarkerSeries.$, [ISupportsErrorBars_$type, ITrendLineSeries_$type]);
    ScatterBase.oh = DependencyProperty.i("ActualTrendLineBrush", Brush.$, ScatterBase.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue); }));
    ScatterBase.$$p = markDep(DependencyProperty, PropertyMetadata, ScatterBase, 'raisePropertyChanged', ['ErrorBarSettings:na:oi', [ScatterErrorBarSettings.$, null], 'MarkerCollisionAvoidance:m5:oj', [CollisionAvoidanceType_$type, enumGetBox(CollisionAvoidanceType_$type, 0)], 'MaximumMarkers:no:ok', [1, 400], 'XAxis::os', [NumericXAxis.$, null], 'XMemberPath:nv:ot', [2, null], 'YAxis::ou', [NumericYAxis.$, null], 'YMemberPath:nz:ov', [2, null], 'TrendLineType::oq', [TrendLineType_$type, enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness::op', [1, 1.5], 'TrendLinePeriod::oo', [1, 7], 'TrendLineBrush::ol', [Brush.$, null], 'TrendLineZIndex:np:or', [1, 1001], 'TrendLineDashArray:ox:om', [DoubleCollection.$], 'TrendLineDashCap:oy:on', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)]]);
    return ScatterBase;
}(MarkerSeries));
export { ScatterBase };
/**
 * @hidden
 */
var ScatterBaseView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ScatterBaseView, _super);
    function ScatterBaseView(a) {
        var _this = _super.call(this, a) || this;
        _this.cr = null;
        _this.cp = null;
        _this.cs = null;
        _this.cx = null;
        _this.c7 = null;
        _this.c8 = null;
        _this.ct = null;
        _this.c6 = null;
        _this.cu = null;
        _this.cs = a;
        _this.cu = new HashPool$2(Base.$, Marker.$);
        _this.ce(_this.cu);
        _this.ct = new ScatterTrendLineManager();
        return _this;
    }
    ScatterBaseView.prototype.ap = function () {
        _super.prototype.ap.call(this);
        this.cr = this.cq();
        this.c7 = new Path();
        this.c8 = new Path();
        if (!this.n) {
            this.cs.no = 2000;
        }
    };
    ScatterBaseView.prototype.c9 = function (a) {
        if (this.c6 == null) {
            this.c6 = new DataTemplateMeasureInfo();
            this.c6.context = this.h.g();
        }
        this.c6.width = a.width;
        this.c6.height = a.height;
        this.c6.data = a.content;
        var b = a.ah;
        if (b.measure != null) {
            b.measure(this.c6);
        }
        return new Size(1, this.c6.width, this.c6.height);
    };
    ScatterBaseView.prototype.cq = function () {
        var _this = this;
        var a = new NumericMarkerManager(1, function (b) { return _this.cu.item(b); }, function (b) { return _this.cs.m8.c.item(b); }, runOn(this, this.c4), runOn(this, this.cn), runOn(this, this.cv), function () { return _this.cs.m5; });
        a.q = runOn(this, this.c9);
        return a;
    };
    ScatterBaseView.prototype.c4 = function (a) {
        this.cs.ob(a, this.cu);
    };
    ScatterBaseView.prototype.cw = function () {
        return this.b1;
    };
    ScatterBaseView.prototype.co = function () {
        return this.cp;
    };
    ScatterBaseView.prototype.cn = function () {
        this.cp = this.cs.m4(this, this.cu, this.cp, this.bs, this.br);
        return this.cp;
    };
    ScatterBaseView.prototype.cv = function () {
        this.cx = this.cs.nn(this.cu, this.cx);
        return this.cx;
    };
    ScatterBaseView.prototype.cy = function () {
    };
    ScatterBaseView.prototype.c2 = function (a) {
    };
    ScatterBaseView.prototype.cz = function () {
    };
    ScatterBaseView.prototype.c3 = function (a) {
    };
    ScatterBaseView.prototype.c5 = function () {
        if (this.cs.trendLineBrush != null) {
            this.cs.ow = this.cs.trendLineBrush;
        }
        else {
            this.cs.ow = this.cs.k4;
        }
    };
    ScatterBaseView.prototype.cc = function (a) {
        this.cu.f(a);
    };
    ScatterBaseView.prototype.c1 = function () {
    };
    ScatterBaseView.prototype.a2 = function (a, b) {
        _super.prototype.a2.call(this, a, b);
        if (a.d) {
            if (this.cs.trendLineType != 0 && !b) {
                var c = this.ct.g$j;
                c.ac = this.cs.trendLineThickness;
                c._stroke = this.cs.ow;
                c.ai = this.cs.ox;
                c.ad = this.cs.oy;
                a.u(c);
            }
        }
    };
    ScatterBaseView.prototype.c0 = function (a) {
        if (a) {
            this.c1();
            this.cu.clear();
        }
        this.ct.g$d();
        this.an();
    };
    ScatterBaseView.prototype.getDefaultTooltipTemplate = function () {
        var a = "<div class='ui-chart-default-tooltip-content'><span";
        var b = this.e.a0.a$q(this.e);
        if (!stringIsNullOrEmpty(b)) {
            a += " style='color:" + b + "'";
        }
        a += ">" + this.cs.fx + "</span><br/><span>" + "x: </span><span class='ui-priority-primary'>${item." + this.cs.nv + "}</span><br/><span>" + "y: </span><span class='ui-priority-primary'>${item." + this.cs.nz + "}</span></div>";
        return a;
    };
    ScatterBaseView.$t = markType(ScatterBaseView, 'ScatterBaseView', MarkerSeriesView.$);
    return ScatterBaseView;
}(MarkerSeriesView));
export { ScatterBaseView };
//# sourceMappingURL=ScatterBase_combined.js.map
