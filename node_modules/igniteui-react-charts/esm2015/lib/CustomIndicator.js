/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { CustomIndicatorStrategy } from "./CustomIndicatorStrategy";
import { String_$type, fromEnum, markType } from "igniteui-react-core";
import { FinancialEventArgs } from "./FinancialEventArgs";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let CustomIndicator = /*@__PURE__*/ (() => {
    class CustomIndicator extends StrategyBasedIndicator {
        constructor() {
            super(...arguments);
            this.qz = null;
            this.qy = null;
        }
        get_qd() {
            return new CustomIndicatorStrategy();
        }
        get qd() {
            return this.get_qd();
        }
        get_qq() {
            return CustomIndicator.$;
        }
        get qq() {
            return this.get_qq();
        }
        pp(a, b) {
            let c = this.ml(a, b);
            let d = this.mm(c);
            let e = new List$1(String_$type, 0);
            if (this.qy != null) {
                let f = new FinancialEventArgs(c.calculateFrom, c.calculateCount, c, d, this);
                this.qy(this, f);
                if (f.basedOn != null) {
                    for (let g of fromEnum(f.basedOn)) {
                        e.add(g);
                    }
                }
            }
            return e;
        }
        get indicator() {
            return this.qz;
        }
        set indicator(a) {
            this.qz = a;
            this.px();
        }
        get basedOnColumns() {
            return this.qy;
        }
        set basedOnColumns(a) {
            this.qy = a;
        }
        pm(a, b) {
            super.pm(a, b);
            if (this.qz != null) {
                let c = this.ml(a, b);
                if (b == 0) {
                    return false;
                }
                if (!this.ni(this.pp(a, b))) {
                    return false;
                }
                this.qz(this, new FinancialEventArgs(a, b, c, this.mm(c), this));
                if (this.qf(c) && this.mu != null) {
                    this.mu.cn();
                }
                return true;
            }
            return false;
        }
    }
    CustomIndicator.$t = /*@__PURE__*/ markType(CustomIndicator, 'CustomIndicator', StrategyBasedIndicator.$);
    return CustomIndicator;
})();
//# sourceMappingURL=CustomIndicator.js.map
