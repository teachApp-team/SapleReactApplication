/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { ScatterBaseView } from "./ScatterBaseView";
import { Path } from "igniteui-react-core";
import { markType } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
/**
 * @hidden
 */
var ScatterLineSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ScatterLineSeriesView, _super);
    function ScatterLineSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.da = new Path();
        return _this;
    }
    ScatterLineSeriesView.prototype.a8 = function () {
        _super.prototype.a8.call(this);
        this.da._stroke = this.e.k4;
        this.da.ac = this.e.ey;
    };
    ScatterLineSeriesView.prototype.a9 = function () {
        _super.prototype.a9.call(this);
        var a = this.bl();
        this.da._stroke = a;
        this.da.ac = this.e.ey + 3;
    };
    ScatterLineSeriesView.prototype.a3 = function (a, b) {
        _super.prototype.a3.call(this, a, b);
        if (a.d) {
            a.s(this.da);
        }
    };
    ScatterLineSeriesView.prototype.c0 = function (a) {
        _super.prototype.c0.call(this, a);
        this.da.ak = null;
    };
    ScatterLineSeriesView.prototype.ai = function (a) {
        _super.prototype.ai.call(this, a);
        this.e.a2.exportPathData(a, this.da, "shape", ["Main"]);
    };
    ScatterLineSeriesView.prototype.ac = function () {
        var a = new Color();
        a.colorString = "rgba(95,95,95,0.5)";
        this.e.lb = a;
        this.e.ev = 3;
        this.e.ew = 1;
        this.e.ex = 4;
        this.e.du = false;
    };
    ScatterLineSeriesView.$t = markType(ScatterLineSeriesView, 'ScatterLineSeriesView', ScatterBaseView.$);
    return ScatterLineSeriesView;
}(ScatterBaseView));
export { ScatterLineSeriesView };
//# sourceMappingURL=ScatterLineSeriesView.js.map
