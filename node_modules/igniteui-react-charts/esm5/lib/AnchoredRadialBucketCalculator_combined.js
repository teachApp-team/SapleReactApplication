/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { RadialBucketCalculator } from "./RadialBucketCalculator";
import { markType, Point_$type, enumGetBox, typeCast, markDep } from "igniteui-react-core";
import { isNaN_, intDivide, isInfinity } from "igniteui-react-core";
import { RadialBase } from "./RadialBase";
import { CategoryLineRasterizer } from "./CategoryLineRasterizer";
import { DependencyProperty } from "igniteui-react-core";
import { TrendLineType_$type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { RadialFrame } from "./RadialFrame";
import { ScalerParams } from "./ScalerParams";
import { Rect } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { NumericAxisBase } from "./NumericAxisBase";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { RadialBaseView } from "./RadialBaseView";
import { CollisionAvoider } from "./CollisionAvoider";
import { Clipper } from "igniteui-react-core";
import { TrendResolutionParams } from "./TrendResolutionParams";
import { RadialTrendLineManager } from "./RadialTrendLineManager";
import { CategoryMarkerManager } from "./CategoryMarkerManager";
import { PropertyMetadata } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var AnchoredRadialBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(AnchoredRadialBucketCalculator, _super);
    function AnchoredRadialBucketCalculator(a) {
        var _this = _super.call(this, a) || this;
        _this.f = null;
        _this.f = a;
        return _this;
    }
    AnchoredRadialBucketCalculator.prototype.getBucket = function (a) {
        var b = this.f.cs.n0;
        var c = Math.min(a * this.b, b.count - 1);
        var d = Math.min(c + this.b - 1, b.count - 1);
        var e = NaN;
        var f = NaN;
        for (var g = c; g <= d; ++g) {
            var h = b.item(g);
            if (!isNaN_(e)) {
                if (!isNaN_(h)) {
                    e = Math.min(e, h);
                    f = Math.max(f, h);
                }
            }
            else {
                e = h;
                f = h;
            }
        }
        if (!isNaN_(e)) {
            return [0.5 * (c + d), e, f];
        }
        return [0.5 * (c + d), NaN, NaN];
    };
    AnchoredRadialBucketCalculator.$t = markType(AnchoredRadialBucketCalculator, 'AnchoredRadialBucketCalculator', RadialBucketCalculator.$);
    return AnchoredRadialBucketCalculator;
}(RadialBucketCalculator));
export { AnchoredRadialBucketCalculator };
/**
 * @hidden
 */
var AnchoredRadialSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(AnchoredRadialSeries, _super);
    function AnchoredRadialSeries() {
        var _this = _super.call(this) || this;
        _this.nv = null;
        _this.nz = null;
        _this.ot = { $type: Point_$type, x: 0, y: 0 };
        _this.nx = null;
        _this.nw = null;
        _this.nx = new RadialFrame(3);
        _this.nv = new CategoryLineRasterizer();
        return _this;
    }
    AnchoredRadialSeries.prototype.bf = function () {
        return new AnchoredRadialSeriesView(this);
    };
    AnchoredRadialSeries.prototype.hu = function () {
        _super.prototype.hu.call(this);
        this.m4 = null;
        this.m6 = null;
    };
    AnchoredRadialSeries.prototype.fs = function (a, b) {
        var c = this.gv(b);
        if (c == AnchoredRadialSeries.$$p[0]) {
            return this.ft(a, b, this.oc);
        }
        return _super.prototype.fs.call(this, a, b);
    };
    AnchoredRadialSeries.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.nu = a;
    };
    AnchoredRadialSeries.prototype.fe = function (a, b) {
        return this.ff(a, b, this.m4, null, this.n0);
    };
    AnchoredRadialSeries.prototype.fc = function (a, b) {
        return this.fd(a, b, this.m4, null, this.n0);
    };
    AnchoredRadialSeries.prototype.d9 = function (a, b, c, d, e) {
        if (this.n0 == null) {
            return Number.POSITIVE_INFINITY;
        }
        return this.ea(a, b, this.m4, d, e, this.n0.count, null);
    };
    AnchoredRadialSeries.prototype.en = function (a, b, c) {
        var d = this.getEffectiveViewport1(this.bi);
        var e = this.n5(this.m4, this.bi.bs, this.bi.br, d);
        var f = new ScalerParams(0, this.bi.bs, this.bi.br, this.m4.ca, d);
        f.c = this.bs.m5;
        return this.ep(this.n0, a, this.m4, f, e, null, b, c);
    };
    AnchoredRadialSeries.prototype.lm = function (a, b, c) {
        if (this.m6 == null || this.m4 == null || this.bi == null || this.bi.bs.isEmpty || this.bi.br.isEmpty) {
            return { $type: Point_$type, x: NaN, y: NaN };
        }
        var d = this.getEffectiveViewport1(this.bi);
        var e = new ScalerParams(0, this.bi.bs, this.bi.br, this.m6.ca, d);
        e.c = this.getEffectiveViewport1(this.bi);
        var f = this.en(a, b, c);
        f = this.m6.dy(f, e);
        var g = this.m7.c(a);
        if (!b && this.m4 != null) {
            var h = this.fe(a, c);
            var i = this.fc(a, c);
            var j = this.n5(this.m4, this.bi.bs, this.bi.br, d);
            var k = new ScalerParams(0, this.bi.bs, this.bi.br, this.m4.ca, d);
            k.c = this.bs.m5;
            var l = this.d9(a, h, this.m4, k, j);
            var m = this.d9(a, i, this.m4, k, j);
            if (m <= l) {
                g = this.m4.dy(i, k) + j;
            }
            else {
                g = this.m4.dy(h, k) + j;
            }
        }
        var n = this.m7.d(g, f, this.bi.bs, this.bi.br);
        var o = this.m7.e(g, f, this.bi.bs, this.bi.br);
        return { $type: Point_$type, x: n, y: o };
    };
    Object.defineProperty(AnchoredRadialSeries.prototype, "n0", {
        get: function () {
            return this.nz;
        },
        set: function (a) {
            if (this.nz != a) {
                var b = this.nz;
                this.nz = a;
                this.raisePropertyChanged("ValueColumn", b, this.nz);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AnchoredRadialSeries.prototype, "op", {
        get: function () {
            return this.c(AnchoredRadialSeries.og);
        },
        set: function (a) {
            this.h(AnchoredRadialSeries.og, a);
        },
        enumerable: true,
        configurable: true
    });
    AnchoredRadialSeries.prototype.an = function (a) {
        if (a != null && a == this.m4 && this.n0 != null && this.n0.count > 0) {
            return new AxisRange(0, this.n0.count - 1);
        }
        if (a != null && a == this.m6 && this.n0 != null && this.n0.count > 0) {
            return new AxisRange(this.n0.minimum, this.n0.maximum);
        }
        return null;
    };
    AnchoredRadialSeries.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
        if (this.nu.ct.g$b(a, b, c, d)) {
            this.je(false);
            this.il();
        }
        var e = typeCast(NumericAxisBase.$, this.m6);
        switch (b) {
            case "FastItemsSource":
                if (typeCast(IFastItemsSource_$type, c) !== null) {
                    c.deregisterColumn(this.n0);
                    this.n0 = null;
                }
                if (typeCast(IFastItemsSource_$type, d) !== null) {
                    this.n0 = this.bw(this.oc);
                    this.nu.co.e(this.eu);
                }
                if (e != null && !e.cn()) {
                    this.nu.co.e(this.eu);
                    this.je(false);
                }
                break;
            case AnchoredRadialSeries.$$p[0]:
                if (this.bz != null) {
                    this.bz.deregisterColumn(this.n0);
                    this.n0 = this.bw(this.oc);
                }
                break;
            case "ValueColumn":
                if (e != null && !e.cn()) {
                    this.nu.co.e(this.eu);
                    this.je(false);
                }
                break;
            case "TrendLineBrush":
                this.jp();
                break;
            case "TrendLineType":
                this.il();
                break;
        }
    };
    AnchoredRadialSeries.prototype.hz = function (a, b, c, d) {
        switch (a) {
            case 4:
            case 1:
            case 0:
                this.nu.co.e(this.eu);
                break;
        }
        this.nu.ct.g$e(a, b, c, d);
        switch (a) {
            case 4:
                if (this.m6 != null && !this.m6.cn()) {
                    this.je(true);
                }
                break;
            case 1:
                if (this.m6 != null && !this.m6.cn()) {
                    this.je(true);
                }
                break;
            case 0:
                if (this.m6 != null && !this.m6.cn()) {
                    this.je(true);
                }
                break;
            case 2:
                if (this.oc != null && this.nu.co.b > 0 && this.m6 != null && !this.m6.cn()) {
                    this.je(true);
                }
                break;
            case 3:
                if (d == this.oc) {
                    if (this.m6 != null && !this.m6.cn()) {
                        this.je(true);
                    }
                }
                break;
        }
    };
    AnchoredRadialSeries.prototype.dw = function (a, b, c) {
        var d = _super.prototype.dw.call(this, a, b, c);
        var e = c;
        if (this.bz == null || this.bz.count == 0 || this.m4 == null || this.n0 == null || this.m4.j5 == 0 || this.m6 == null || isInfinity(this.m6.kb) || isInfinity(this.m6.ka) || e.co.b < 1) {
            d = false;
        }
        return d;
    };
    AnchoredRadialSeries.prototype.getOffsetValue = function () {
        return this.n5(this.m4, this.bi.bs, this.bi.br, this.getEffectiveViewport1(this.bi));
    };
    AnchoredRadialSeries.prototype.getCategoryWidth = function () {
        return this.m4.getCategorySize(this.bi.bs, this.bi.br, this.getEffectiveViewport1(this.bi));
    };
    AnchoredRadialSeries.prototype.get_n3 = function () {
        return false;
    };
    Object.defineProperty(AnchoredRadialSeries.prototype, "n3", {
        get: function () {
            return this.get_n3();
        },
        enumerable: true,
        configurable: true
    });
    AnchoredRadialSeries.prototype.n5 = function (a, b, c, d) {
        var e = 0;
        var f = this.preferredCategoryMode(a);
        if (f == 0 && a.categoryMode != 0) {
            f = 1;
        }
        switch (f) {
            case 0:
                e = 0;
                break;
            case 1:
                e = 0.5 * a.getCategorySize(b, c, d);
                break;
            case 2:
                e = a.getGroupCenter(this.nj(), b, c, d);
                break;
        }
        if (a.ca) {
            e = -e;
        }
        return e;
    };
    AnchoredRadialSeries.prototype.no = function (a, b) {
        var _this = this;
        var c = b.bs;
        var d = b.br;
        var e = this.getEffectiveViewport1(b);
        var f = this.m4;
        var g = this.m6;
        var h = g.kb;
        var i = g.ka;
        a.f.clear();
        a.m.clear();
        a.p.clear();
        var j = this.l4();
        var k = 0;
        var l = b;
        var m = new CollisionAvoider();
        var n = 0;
        var o = b.co.d;
        n = this.n5(f, c, d, e);
        l.ct.q = this.m6.lq;
        l.ct.p = this.m6.lp;
        l.ct.r = function (p, q) { return _this.n6(p, q, c, d); };
        l.ct.s = function (p, q) { return _this.n7(p, q, c, d); };
        var p = ((function () {
            var $ret = new Clipper(0, d, false);
            $ret.i = a.p;
            return $ret;
        })());
        var q = ((function () {
            var $ret = new TrendResolutionParams();
            $ret.c = b.co.b;
            $ret.d = b.co.c;
            $ret.e = o;
            $ret.a = n;
            $ret.b = _this.eu;
            $ret.f = d;
            $ret.g = c;
            return $ret;
        })());
        l.ct.t(a.p, this.ny, this.n0, this.n9, function (r) { return _this.m4.getScaledAngle(r); }, function (r) { return _this.m6.lw(r); }, q, p);
        var r = true;
        if (this.n4(b)) {
            o--;
        }
        for (var s = b.co.c; s <= o; ++s) {
            var t = s;
            if (t * b.co.b >= this.m4.j5) {
                t -= intDivide((this.m4.j5), b.co.b);
            }
            var u = b.co.getBucket(t);
            if (!isNaN_(u[0])) {
                u[0] = f.getScaledAngle(u[0]) + n;
                if (u[1] < h || u[1] > i) {
                    continue;
                }
                u[1] = g.lw(u[1]);
                if (b.co.b > 1) {
                    if (u[2] < h || u[2] > i) {
                        continue;
                    }
                    u[2] = g.lw(u[2]);
                }
                else {
                    u[2] = u[1];
                }
                if ((isNaN_(u[1]) || isNaN_(u[2])) && r && this.n3 && this.n2()) {
                    o++;
                }
                else {
                    r = false;
                }
                a.f.add(u);
                if (j) {
                    var v = Math.min(t * b.co.b, this.bz.count - 1);
                    var w = this.m7.d(u[0], u[1], c, d);
                    var x = this.m7.e(u[0], u[1], c, d);
                    var y = new Rect(0, w - 5, x - 5, 11, 11);
                    if (!isNaN_(w) && !isNaN_(x) && !isInfinity(w) && !isInfinity(x) && m.tryAdd(y)) {
                        a.m.add({ $type: Point_$type, x: w, y: x });
                        var z = b.cp.item(k);
                        z.ak = v;
                        z.content.item = this.bz.item(v);
                        ++k;
                    }
                }
            }
            else {
                if (r && this.n3 && this.n2()) {
                    o++;
                }
            }
        }
        b.cp.count = k;
        return;
    };
    AnchoredRadialSeries.prototype.n6 = function (a, b, c, d) {
        return this.m7.d(a, b, c, d);
    };
    AnchoredRadialSeries.prototype.n7 = function (a, b, c, d) {
        return this.m7.e(a, b, c, d);
    };
    AnchoredRadialSeries.prototype.n4 = function (a) {
        var b = a;
        return !this.n3 && b.co.c == 0 && b.co.d == this.m4.j5;
    };
    AnchoredRadialSeries.prototype.nt = function (a, b, c) {
        var d = null;
        var e = c.bs;
        var f = c.br;
        if (b > -1 && !e.isEmpty && !f.isEmpty) {
            var g = a._inner[0][0] < f.left - 2000 ? f.left - 10 : NaN;
            var h = f.bottom + 10;
            var i = a._inner[b][0] > f.right + 2000 ? f.right + 10 : NaN;
            var j = f.top - 10;
            d = new Clipper(1, g, h, i, j, false);
        }
        return d;
    };
    AnchoredRadialSeries.prototype.of = function (a, b, c, d, e) {
        if (a.count > 0 && d.count > 0) {
            if (!e || this.n1()) {
                a.add(this.ot);
                a.add(a._inner[0]);
                d.add(this.ot);
                d.add(d._inner[0]);
            }
        }
    };
    AnchoredRadialSeries.prototype.n2 = function () {
        return !this.n1();
    };
    AnchoredRadialSeries.prototype.n1 = function () {
        var a = this.bi.bs;
        return !a.containsPoint({ $type: Point_$type, x: 0.5, y: 0.5 });
    };
    AnchoredRadialSeries.prototype.hw = function (a, b) {
        _super.prototype.hw.call(this, a, b);
        var c = b;
        if (a) {
            c.cp.clear();
        }
        c.ct.g$d();
    };
    AnchoredRadialSeries.prototype.np = function (a, b) {
        var c = b.bs;
        var d = b.br;
        var e = this.getEffectiveViewport1(b);
        var f = this.lr(b);
        var g = b;
        g.ct.g$g(a.p);
        CategoryMarkerManager.b(this, a.m, g.cp, this.l6);
        g.cj();
        this.oe(d, c, e, f, g);
    };
    AnchoredRadialSeries.prototype.oe = function (a, b, c, d, e) {
        e.cu(a, b, c, d);
    };
    AnchoredRadialSeries.prototype.jp = function () {
        _super.prototype.jp.call(this);
        if (this.fh < 0) {
            return;
        }
        this.nu.cv();
    };
    AnchoredRadialSeries.prototype.fv = function (a, b) {
        if (a == this.nu.ct.g$j) {
            return null;
        }
        return _super.prototype.fv.call(this, a, b);
    };
    AnchoredRadialSeries.prototype.c9 = function (a) {
        var b = this.bi.bs;
        b = b.copy();
        var c = this.bi.br;
        var d = !b.isEmpty && !c.isEmpty && this.bz != null ? this.bz.indexOf(a) : -1;
        if (this.m4 == null || this.n0 == null || this.m6 == null) {
            return false;
        }
        if (d < 0 || d > this.n0.count - 1) {
            return false;
        }
        var e = this.m4.getScaledAngle(d);
        var f = this.m6.lw(this.n0.item(d));
        if (isNaN_(f)) {
            f = (this.m6.lp + this.m6.lq) / 2;
        }
        var g = 0.5 + (Math.cos(e) * f);
        var h = 0.5 + (Math.sin(e) * f);
        if (!isNaN_(g)) {
            if (g < b.left + 0.1 * b.width) {
                g = g + 0.4 * b.width;
                b.x = g - 0.5 * b.width;
            }
            if (g > b.right - 0.1 * b.width) {
                g = g - 0.4 * b.width;
                b.x = g - 0.5 * b.width;
            }
        }
        if (!isNaN_(h)) {
            if (h < b.top + 0.1 * b.height) {
                h = h + 0.4 * b.height;
                b.y = h - 0.5 * b.height;
            }
            if (h > b.bottom - 0.1 * b.height) {
                h = h - 0.4 * b.height;
                b.y = h - 0.5 * b.height;
            }
        }
        if (this.bn != null) {
            this.bn.ap(this.bs, b, true);
        }
        return d >= 0;
    };
    AnchoredRadialSeries.prototype.jg = function (a, b) {
        _super.prototype.jg.call(this, a, b);
        if (!this.dl) {
            this.bi.az(b);
            return;
        }
        this.bi.az(b);
        var c = typeCast(AnchoredRadialSeriesView.$, this.bh);
        c.co.e(this.eu);
        if (this.cc(this.bh)) {
            return;
        }
        if (!this.df) {
            this.nx = new RadialFrame(3);
            this.no(this.nx, c);
        }
        this.df = false;
        this.np(this.nx, c);
        this.dl = false;
    };
    AnchoredRadialSeries.prototype.jd = function (a, b, c, d, e) {
        _super.prototype.jd.call(this, a, b, c, d, e);
        var f = this.a0.a$h.item(d);
        var g = f;
        g.co.e(this.eu);
        f.ay(c);
        if (this.cc(g)) {
            return;
        }
        if (this.nw == null) {
            this.nw = new RadialFrame(3);
        }
        this.nw.u();
        this.no(this.nw, g);
        this.np(this.nw, g);
    };
    AnchoredRadialSeries.prototype.h5 = function (a) {
        _super.prototype.h5.call(this, a);
        this.a2.exportTrendlineData(this, a, this.nu.ct.g$j);
    };
    AnchoredRadialSeries.$t = markType(AnchoredRadialSeries, 'AnchoredRadialSeries', RadialBase.$);
    AnchoredRadialSeries.og = DependencyProperty.i("ActualTrendLineBrush", Brush.$, AnchoredRadialSeries.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue); }));
    AnchoredRadialSeries.$$p = markDep(DependencyProperty, PropertyMetadata, AnchoredRadialSeries, 'raisePropertyChanged', ['ValueMemberPath:oc:oo', [2, null], 'TrendLineType:ny:om', [TrendLineType_$type, enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness:n8:ol', [1, 1.5], 'TrendLinePeriod:n9:ok', [1, 7], 'TrendLineZIndex:oa:on', [1, 1], 'TrendLineBrush:oq:oh', [Brush.$, null], 'TrendLineDashArray:or:oi', [DoubleCollection.$], 'TrendLineDashCap:os:oj', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)]]);
    return AnchoredRadialSeries;
}(RadialBase));
export { AnchoredRadialSeries };
/**
 * @hidden
 */
var AnchoredRadialSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(AnchoredRadialSeriesView, _super);
    function AnchoredRadialSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.cs = null;
        _this.ct = null;
        _this.co = new AnchoredRadialBucketCalculator(_this);
        _this.cs = a;
        _this.ct = new RadialTrendLineManager();
        return _this;
    }
    AnchoredRadialSeriesView.prototype.cu = function (a, b, c, d) {
    };
    AnchoredRadialSeriesView.prototype.cv = function () {
        this.cs.op = null;
        if (this.cs.oq != null) {
            this.cs.op = this.cs.oq;
        }
        else {
            this.cs.op = this.cs.k4;
        }
    };
    AnchoredRadialSeriesView.prototype.a2 = function (a, b) {
        if (a.d) {
            if (!b) {
            }
            if (this.cs.ny != 0 && !b) {
                var c = this.ct.g$j;
                c.ac = this.cs.n8;
                c._stroke = this.cs.op;
                c.ai = this.cs.or;
                c.ad = this.cs.os;
                a.u(c);
            }
        }
        _super.prototype.a2.call(this, a, b);
    };
    AnchoredRadialSeriesView.prototype.getDefaultTooltipTemplate = function () {
        var a = "<div class='ui-chart-default-tooltip-content'>";
        if (this.cs.m4.e9 != null) {
            a += "<span>${item." + this.cs.m4.e9 + "}</span><br/>";
        }
        a += "<span";
        var b = this.e.a0.a$q(this.e);
        if (!stringIsNullOrEmpty(b)) {
            a += " style='color:" + b + "'";
        }
        a += ">" + this.cs.fx + ": </span><span class='ui-priority-primary'>" + "${item." + this.cs.oc + "}</span></div>";
        return a;
    };
    AnchoredRadialSeriesView.$t = markType(AnchoredRadialSeriesView, 'AnchoredRadialSeriesView', RadialBaseView.$);
    return AnchoredRadialSeriesView;
}(RadialBaseView));
export { AnchoredRadialSeriesView };
//# sourceMappingURL=AnchoredRadialBucketCalculator_combined.js.map
