import { TimeAxisBase } from "./TimeAxisBase";
import { TimeAxisDisplayType } from "./TimeAxisDisplayType";
import { DependencyProperty } from "igniteui-react-core";
import { Type, IList$1 } from "igniteui-react-core";
import { AxisView } from "./AxisView";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { CategoryAxisBaseView } from "./CategoryAxisBaseView";
/**
 * @hidden
 */
export declare class CategoryDateTimeXAxis extends TimeAxisBase {
    static $t: Type;
    constructor();
    protected get_b6(): boolean;
    a2(): AxisView;
    gx(a: AxisView): void;
    ma: CategoryDateTimeXAxisView;
    mb: TimeAxisDisplayType;
    ml: number;
    private mg;
    mi: number;
    d9(): number;
    static readonly mx: DependencyProperty;
    mm: number;
    private mh;
    mj: number;
    ct(a: Rect, b: Rect, c: AxisView): boolean;
    dl(): number;
    protected hc(a: boolean): void;
    protected mf(): number;
    private mk;
    private mt;
    private mu;
    private md;
    private mc;
    private me;
    ms(a: Date, b: Date): void;
    protected gz(a: any, b: string, c: any, d: any): void;
    l0(): void;
    protected ly(a: Date, b: Date): number;
    protected get_b5(): boolean;
    readonly isVertical: boolean;
    j$c(a: number, b: ScalerParams): number;
    j$b(a: number, b: ScalerParams): number;
    j$d(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    j$e(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    j$f(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    readonly j$a: boolean;
    readonly i$a: boolean;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CategoryDateTimeXAxisView extends CategoryAxisBaseView {
    static $t: Type;
    protected bg: CategoryDateTimeXAxis;
    constructor(a: CategoryDateTimeXAxis);
    o(a: number): string;
}
