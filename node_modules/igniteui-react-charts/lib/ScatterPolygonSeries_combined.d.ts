import { ShapeSeriesBase } from "./ShapeSeriesBase";
import { ShapeAxisInfoCache } from "./ShapeAxisInfoCache";
import { StyleSelector } from "./StyleSelector";
import { Style } from "igniteui-react-core";
import { MarkerType } from "./MarkerType";
import { DataTemplate } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { CollisionAvoidanceType } from "./CollisionAvoidanceType";
import { Rect } from "igniteui-react-core";
import { Type, Point } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { OwnedPoint } from "./OwnedPoint";
import { ShapeSeriesViewBase } from "./ShapeSeriesViewBase";
import { DataContext } from "igniteui-react-core";
import { Marker } from "./Marker";
import { IDictionary$2 } from "igniteui-react-core";
import { HashPool$2 } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { FrameworkElement } from "igniteui-react-core";
import { NumericMarkerManager } from "./NumericMarkerManager";
import { Size } from "igniteui-react-core";
import { PathGeometry } from "igniteui-react-core";
import { PointCollection } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class ScatterPolygonSeries extends ShapeSeriesBase {
    static $t: Type;
    constructor();
    protected mj(): boolean;
    protected m1(a: SeriesView): void;
    private nl;
    protected bf(): SeriesView;
    iv(a: SeriesView): void;
    ni: ScatterPolygonSeriesView;
    nj: ShapeAxisInfoCache;
    private static oi;
    private ng;
    private nh;
    protected get_hasMarkers(): boolean;
    k7(): Brush;
    k8(): Brush;
    j0(): DataTemplate;
    nk: StyleSelector;
    ok: Style;
    nf: MarkerType;
    n1: DataTemplate;
    nm: number;
    n0: DataTemplate;
    og: Brush;
    oe: Brush;
    oh: Brush;
    of: Brush;
    oj: Style;
    ne: CollisionAvoidanceType;
    protected jp(): void;
    protected i0(a: any, b: string, c: any, d: any): void;
    ar(a: Point, b: boolean): DataContext;
    nz(a: IDictionary$2<any, OwnedPoint>, b: HashPool$2<any, Marker>): void;
    ch(a: List$1<SeriesPointOfInterest>, b: boolean, c: number): boolean;
    nd(a: ScatterPolygonSeriesView, b: HashPool$2<any, Marker>, c: Point[], d: Rect, e: Rect): Point[];
    nc(a: HashPool$2<any, Marker>, b: number[]): number[];
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class ScatterPolygonSeriesView extends ShapeSeriesViewBase {
    static $t: Type;
    constructor(a: ScatterPolygonSeries);
    ap(): void;
    readonly c5: NumericMarkerManager;
    protected dk(a: IDictionary$2<any, OwnedPoint>): void;
    protected cz(): Point[];
    protected cy(): number[];
    private c1;
    private c0;
    private c6;
    private c4;
    protected cu(a: number, b: List$1<PointCollection>): PathGeometry;
    protected cc(a: FrameworkElement, b: any): void;
    protected ca(a: FrameworkElement, b: PathGeometry): void;
    private c8;
    c7: HashPool$2<any, Marker>;
    de(a: (arg1: Marker) => void): void;
    dg(a: HashPool$2<any, Marker>): void;
    c3(): Marker;
    protected c9: List$1<Marker>;
    di(a: Marker): void;
    dh(a: Marker): void;
    dj(a: Marker): void;
    dl(a: boolean): void;
    protected be(a: any, b: number): void;
    protected bf(a: any, b: number): void;
    protected a2(a: RenderingContext, b: boolean): void;
    dd(): void;
    db(): void;
    dc(): void;
    da(a: string): void;
    df(): void;
    private dm;
    dn(a: Marker): Size;
    c2(a: Point): Marker;
    ai(a: any): void;
    getDefaultTooltipTemplate(): string;
}
