/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { CategorySeries } from "./CategorySeries";
import { IIsCategoryBased_$type } from "./IIsCategoryBased";
import { IHasSingleValueCategory_$type } from "./IHasSingleValueCategory";
import { IHasCategoryTrendline_$type } from "./IHasCategoryTrendline";
import { ITrendLineSeries_$type } from "./ITrendLineSeries";
import { IAnchoredCategorySeriesInteractionManager_$type } from "./IAnchoredCategorySeriesInteractionManager";
import { DVContainer } from "igniteui-react-core";
import { enumGetBox, typeCast, Point_$type, markType, markDep } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Series } from "./Series";
import { TrendLineType_$type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { CategoryFrame } from "./CategoryFrame";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { ICategoryScaler_$type } from "./ICategoryScaler";
import { IScaler_$type } from "./IScaler";
import { CategorySeriesView } from "./CategorySeriesView";
import { CategorySeriesMarkerCollisionAvoidance_$type } from "./CategorySeriesMarkerCollisionAvoidance";
import { ConsolidatedItemHitTestBehavior_$type } from "./ConsolidatedItemHitTestBehavior";
import { CategoryFramePreparer } from "./CategoryFramePreparer";
import { Rect } from "igniteui-react-core";
import { ISortingAxis_$type } from "./ISortingAxis";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { NumericAxisBase } from "./NumericAxisBase";
import { CategoryBucketCalculator } from "./CategoryBucketCalculator";
import { AxisRange } from "./AxisRange";
import { NumericYAxis } from "./NumericYAxis";
import { ScalerParams } from "./ScalerParams";
import { CategoryMarkerManager } from "./CategoryMarkerManager";
import { CollisionAvoider } from "./CollisionAvoider";
import { NonCollisionAvoider } from "./NonCollisionAvoider";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate, isNaN_ } from "igniteui-react-core";
import { CategoryTrendLineManagerFactory } from "./CategoryTrendLineManagerFactory";
/**
 * @hidden
 */
var AnchoredCategorySeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(AnchoredCategorySeries, _super);
    function AnchoredCategorySeries() {
        var _this = _super.call(this) || this;
        _this.o6 = null;
        _this.pa = false;
        _this.o8 = null;
        _this.o3 = null;
        _this.pd = null;
        _this.nf = new CategoryFramePreparer(1, _this, _this.nj, _this, _this, _this.nj.cn);
        return _this;
    }
    Object.defineProperty(AnchoredCategorySeries.prototype, "o7", {
        get: function () {
            var _this = this;
            if (this.o6 == null) {
                this.o6 = DVContainer.instance.createInstance(IAnchoredCategorySeriesInteractionManager_$type, function () { return _this.b2.n; });
            }
            return this.o6;
        },
        enumerable: true,
        configurable: true
    });
    AnchoredCategorySeries.prototype.getHostReferenceValue = function () {
        return this.eh();
    };
    AnchoredCategorySeries.prototype.bf = function () {
        var a = new AnchoredCategorySeriesView(this);
        return a;
    };
    AnchoredCategorySeries.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.o2 = a;
    };
    AnchoredCategorySeries.prototype.fs = function (a, b) {
        var c = this.gv(b);
        if (c == AnchoredCategorySeries.$$p[2]) {
            return this.ft(a, b, this.ph);
        }
        return _super.prototype.fs.call(this, a, b);
    };
    Object.defineProperty(AnchoredCategorySeries.prototype, "valueColumn", {
        get: function () {
            return this.o8;
        },
        set: function (a) {
            if (this.o8 != a) {
                var b = this.o8;
                this.o8 = a;
                if (!this.pa) {
                    this.raisePropertyChanged("ValueColumn", b, this.o8);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AnchoredCategorySeries.prototype, "pz", {
        get: function () {
            return this.c(AnchoredCategorySeries.po);
        },
        set: function (a) {
            this.h(AnchoredCategorySeries.po, a);
        },
        enumerable: true,
        configurable: true
    });
    AnchoredCategorySeries.prototype.c9 = function (a) {
        var b = new Rect(0, 0, 0, 1, 1);
        var c = this.fetchXAxis();
        var d = this.fetchYAxis();
        var e = this.lt(this.bi);
        var f = c != null ? this.nf.r(typeCast(ICategoryScaler_$type, c), b, b, e) : 0;
        return this.o7.c$a(this, this.valueColumn, c, d, f, a);
    };
    AnchoredCategorySeries.prototype.oz = function (a, b, c) {
        if (b < a || a < 0 || a > this.valueColumn.count || b < 0 || b > this.valueColumn.count || c == null) {
            return null;
        }
        var d = new Array((b - a) + 1);
        var e = c.cf;
        var f = null;
        if (e) {
            f = c.i$b;
        }
        for (var g = a; g <= b; g++) {
            var h = g;
            if (e) {
                h = f._inner[h];
            }
            d[g - a] = this.bz.item(g);
        }
        return d;
    };
    AnchoredCategorySeries.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
        if (this.o2.cz && this.o2.cy.g$b(a, b, c, d)) {
            this.je(false);
            this.il();
        }
        switch (b) {
            case "FastItemsSource":
                if (typeCast(IFastItemsSource_$type, c) != null) {
                    c.deregisterColumn(this.valueColumn);
                    this.valueColumn = null;
                }
                if (typeCast(IFastItemsSource_$type, d) != null) {
                    this.valueColumn = this.bw(this.ph);
                }
                var e = typeCast(NumericAxisBase.$, this.fetchYAxis());
                if (e != null && !e.cn()) {
                    this.o2.cn.g(this.eu);
                    this.je(false);
                }
                break;
            case AnchoredCategorySeries.$$p[2]:
                if (this.bz != null) {
                    this.bz.deregisterColumn(this.valueColumn);
                    this.valueColumn = this.bw(this.ph);
                }
                this.pd = this.ph;
                break;
            case "ValueColumn":
                if (this.o2.cz) {
                    this.o2.cy.g$i();
                }
                var f = typeCast(NumericAxisBase.$, this.fetchYAxis());
                if (f != null && !f.cn()) {
                    this.o2.cn.g(this.eu);
                    this.je(false);
                }
                this.pn();
                this.jr();
                break;
            case "TrendLineBrush":
                this.jp();
                break;
            case "ErrorBarSettings":
                this.je(false);
                break;
            case "TrendLineType":
                this.il();
                break;
            case AnchoredCategorySeries.$$p[1]:
                this.je(false);
                break;
        }
    };
    AnchoredCategorySeries.prototype.an = function (a) {
        if (this.valueColumn == null || this.valueColumn.count == 0) {
            return null;
        }
        if (a == this.fetchXAxis()) {
            return new AxisRange(0, this.valueColumn.count - 1);
        }
        if (a == this.fetchYAxis()) {
            return new AxisRange(this.valueColumn.minimum, this.valueColumn.maximum);
        }
        return null;
    };
    AnchoredCategorySeries.prototype.hz = function (a, b, c, d) {
        switch (a) {
            case 4:
            case 1:
            case 0:
                this.o2.cn.g(this.eu);
                break;
        }
        if (this.o2.cz) {
            this.o2.cy.g$e(a, b, c, d);
        }
        this.pn();
        this.jr();
    };
    AnchoredCategorySeries.prototype.oa = function () {
        return this.pb(this.nj);
    };
    AnchoredCategorySeries.prototype.pb = function (a) {
        var b = 0;
        var c = a.bs;
        var d = a.br;
        var e = this.getEffectiveViewport1(a);
        var f = typeCast(NumericYAxis.$, this.fetchYAxis());
        if (!c.isEmpty && !d.isEmpty && f != null) {
            var g = new ScalerParams(0, c, d, f.ca, e);
            if (f.ch) {
                g.b = this.eh();
            }
            b = f.dy(f.kl, g);
        }
        return b;
    };
    AnchoredCategorySeries.prototype.pm = function (a, b, c) {
        var d = this.pb(c);
        if (a.count > 0) {
            var e = d;
            a.add({ $type: Point_$type, x: a._inner[a.count - 1].x, y: e });
            a.add({ $type: Point_$type, x: a._inner[0].x, y: e });
        }
    };
    AnchoredCategorySeries.prototype.o0 = function (a, b, c, d) {
        return this.o1(a, b, c, d, false);
    };
    AnchoredCategorySeries.prototype.o1 = function (a, b, c, d, e) {
        return CategorySeries.m5(a, b, c, d, e);
    };
    AnchoredCategorySeries.prototype.dw = function (a, b, c) {
        var d = _super.prototype.dw.call(this, a, b, c);
        var e = c;
        if (this.valueColumn == null || this.valueColumn.count == 0 || e.cn.d < 1) {
            d = false;
        }
        return d;
    };
    AnchoredCategorySeries.prototype.hw = function (a, b) {
        _super.prototype.hw.call(this, a, b);
        var c = b;
        c.ct();
        if (c.cz) {
            c.cy.g$d();
        }
    };
    AnchoredCategorySeries.prototype.op = function (a, b) {
        _super.prototype.op.call(this, a, b);
        this.ng(b).d(a, b);
    };
    AnchoredCategorySeries.prototype.os = function (a, b) {
        _super.prototype.os.call(this, a, b);
        var c = typeCast(AnchoredCategorySeriesView.$, b);
        c.b0 = true;
        if (c.cz) {
            c.cy.g$g(a.p);
        }
        if (this.l4()) {
            CategoryMarkerManager.b(this, a.m, b.cq, this.l6);
            this.om(b, a);
            b.cj();
        }
        this.pj(a, b);
    };
    AnchoredCategorySeries.prototype.jd = function (a, b, c, d, e) {
        _super.prototype.jd.call(this, a, b, c, d, e);
        var f = this.a0.a$h.item(d);
        var g = f;
        g.cn.g(this.eu);
        f.ay(c);
        if (this.cc(g)) {
            return;
        }
        if (this.o3 == null) {
            this.o3 = new CategoryFrame(3);
        }
        this.o3.u();
        this.op(this.o3, g);
        this.os(this.o3, g);
    };
    AnchoredCategorySeries.prototype.pj = function (a, b) {
    };
    AnchoredCategorySeries.prototype.jp = function () {
        _super.prototype.jp.call(this);
        if (this.fh < 0) {
            return;
        }
        this.o2.c3();
        if (this.trendLineBrush != null) {
            this.o2.c1();
        }
        else {
            this.o2.c0();
        }
    };
    AnchoredCategorySeries.prototype.fv = function (a, b) {
        if (this.o2.cz && a == this.o2.cy.g$j) {
            return null;
        }
        return _super.prototype.fv.call(this, a, b);
    };
    Object.defineProperty(AnchoredCategorySeries.prototype, "currentCategoryMode", {
        get: function () {
            return this.preferredCategoryMode(typeCast(CategoryAxisBase.$, this.fetchXAxis()));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AnchoredCategorySeries.prototype, "scaler", {
        get: function () {
            return typeCast(ICategoryScaler_$type, this.fetchXAxis());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AnchoredCategorySeries.prototype, "yScaler", {
        get: function () {
            return typeCast(IScaler_$type, this.fetchYAxis());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AnchoredCategorySeries.prototype, "bucketizer", {
        get: function () {
            return this.o2.cn;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AnchoredCategorySeries.prototype, "currentMode2Index", {
        get: function () {
            return this.od();
        },
        enumerable: true,
        configurable: true
    });
    AnchoredCategorySeries.prototype.provideCollisionDetector = function () {
        if (this.o4 == 1) {
            return new CollisionAvoider();
        }
        return NonCollisionAvoider.a;
    };
    Object.defineProperty(AnchoredCategorySeries.prototype, "trendlinePreparer", {
        get: function () {
            return this.o2.cz ? this.o2.cy : null;
        },
        enumerable: true,
        configurable: true
    });
    AnchoredCategorySeries.prototype.h5 = function (a) {
        _super.prototype.h5.call(this, a);
        if (this.o2.cz) {
            this.a2.exportTrendlineData(this, a, this.o2.cy.g$j);
        }
    };
    AnchoredCategorySeries.prototype.fp = function (a) {
        var _this = this;
        var b = this.fetchXAxis();
        var c = this.fetchYAxis();
        return this.o7.c$b(this, a, this.ob(this.bi), this.valueColumn, b, c, this.o5 == 1, function (d) { return _super.prototype.fp.call(_this, d); });
    };
    Object.defineProperty(AnchoredCategorySeries.prototype, "mayContainUnknowns", {
        get: function () {
            return this.valueColumn == null || this.valueColumn.mayContainUnknowns;
        },
        enumerable: true,
        configurable: true
    });
    AnchoredCategorySeries.prototype.eh = function () {
        return Series.ei(this.valueColumn, typeCast(ISortingAxis_$type, this.fetchXAxis()));
    };
    AnchoredCategorySeries.prototype.ao = function () {
        if (this.valueColumn == null) {
            return null;
        }
        var a = this.na();
        var b = new ScalerParams(0, this.bs.mr, this.bs.m5, a.ca, this.getEffectiveViewport());
        var c = (a.d1(this.bs.m5.left, b));
        var d = (a.d1(this.bs.m5.right, b));
        var e = null;
        if (a.cf) {
            e = a;
            c = e.i$f(c);
            d = e.i$f(d);
        }
        else {
            c = Math.floor(c);
            d = Math.ceil(d);
        }
        if (isNaN_(c) || isNaN_(d)) {
            return null;
        }
        c = Math.max(0, Math.min(this.valueColumn.count - 1, c));
        d = Math.max(0, Math.min(this.valueColumn.count - 1, d));
        var f = 1.7976931348623157E+308;
        var g = -1.7976931348623157E+308;
        for (var h = truncate(c); h <= truncate(d); h++) {
            var i = h;
            if (e != null) {
                i = e.i$b._inner[h];
            }
            f = Math.min(f, this.valueColumn.item(i));
            g = Math.max(g, this.valueColumn.item(i));
        }
        return new AxisRange(f, g);
    };
    AnchoredCategorySeries.prototype.pn = function () {
        this.d8 = this.valueColumn == null || this.valueColumn.count == 0 ? NaN : this.valueColumn.item(this.valueColumn.count - 1);
    };
    Object.defineProperty(AnchoredCategorySeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    AnchoredCategorySeries.$t = markType(AnchoredCategorySeries, 'AnchoredCategorySeries', CategorySeries.$, [IIsCategoryBased_$type, IHasSingleValueCategory_$type, IHasCategoryTrendline_$type, ITrendLineSeries_$type]);
    AnchoredCategorySeries.po = DependencyProperty.i("ActualTrendLineBrush", Brush.$, AnchoredCategorySeries.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue); }));
    AnchoredCategorySeries.$$p = markDep(DependencyProperty, PropertyMetadata, AnchoredCategorySeries, 'raisePropertyChanged', ['ConsolidatedItemHitTestBehavior:o5:pp', [ConsolidatedItemHitTestBehavior_$type, enumGetBox(ConsolidatedItemHitTestBehavior_$type, 0)], 'MarkerCollisionAvoidance:o4:pq', [CategorySeriesMarkerCollisionAvoidance_$type, enumGetBox(CategorySeriesMarkerCollisionAvoidance_$type, 1)], 'ValueMemberPath:ph:py', [2, null], 'TrendLineType::pw', [TrendLineType_$type, enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness::pv', [1, 1.5], 'TrendLinePeriod::pu', [1, 7], 'TrendLineBrush::pr', [Brush.$, null], 'TrendLineZIndex:pc:px', [1, 1001], 'TrendLineDashArray:p0:ps', [DoubleCollection.$], 'TrendLineDashCap:p1:pt', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)]]);
    return AnchoredCategorySeries;
}(CategorySeries));
export { AnchoredCategorySeries };
/**
 * @hidden
 */
var AnchoredCategoryBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(AnchoredCategoryBucketCalculator, _super);
    function AnchoredCategoryBucketCalculator(a) {
        var _this = _super.call(this, a) || this;
        _this.i = null;
        _this.h = null;
        _this.j = 0;
        _this.i = a;
        return _this;
    }
    AnchoredCategoryBucketCalculator.prototype.getBucketWithoutUnknowns = function (a) {
        var b = this.h;
        var c = this.j;
        var d = a * this.d;
        var e = d + this.d - 1;
        var f = c - 1;
        d = d < f ? d : f;
        e = e < f ? e : f;
        var g = 1.7976931348623157E+308;
        var h = -1.7976931348623157E+308;
        var i = true;
        for (var j = d; j <= e; ++j) {
            var k = b[j];
            g = g < k ? g : k;
            h = h > k ? h : k;
            i = false;
        }
        if (!i) {
            return [0.5 * (d + e), g, h];
        }
        return [0.5 * (d + e), NaN, NaN];
    };
    AnchoredCategoryBucketCalculator.prototype.getBucket = function (a) {
        var b = this.h;
        var c = this.j;
        var d = a * this.d;
        var e = d + this.d - 1;
        var f = c - 1;
        d = d < f ? d : f;
        e = e < f ? e : f;
        var g = 0;
        var h = 0;
        var i = true;
        for (var j = d; j <= e; ++j) {
            var k = b[j];
            if (!i) {
                if (!isNaN_(k)) {
                    g = g < k ? g : k;
                    h = h > k ? h : k;
                }
            }
            else {
                if (!isNaN_(k)) {
                    g = k;
                    h = k;
                    i = false;
                }
            }
        }
        if (!i) {
            return [0.5 * (d + e), g, h];
        }
        return [0.5 * (d + e), NaN, NaN];
    };
    AnchoredCategoryBucketCalculator.prototype.cacheValues = function () {
        this.j = this.i.cw.valueColumn.count;
        this.h = this.i.cw.valueColumn.asArray();
    };
    AnchoredCategoryBucketCalculator.prototype.unCacheValues = function () {
        this.h = null;
    };
    AnchoredCategoryBucketCalculator.$t = markType(AnchoredCategoryBucketCalculator, 'AnchoredCategoryBucketCalculator', CategoryBucketCalculator.$);
    return AnchoredCategoryBucketCalculator;
}(CategoryBucketCalculator));
export { AnchoredCategoryBucketCalculator };
/**
 * @hidden
 */
var AnchoredCategorySeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(AnchoredCategorySeriesView, _super);
    function AnchoredCategorySeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.cw = null;
        _this.cx = null;
        _this.cw = a;
        return _this;
    }
    Object.defineProperty(AnchoredCategorySeriesView.prototype, "cy", {
        get: function () {
            if (this.cx == null) {
                this.cx = CategoryTrendLineManagerFactory.a(this.cx, this.e.ap(), this.e.jy, this.e, this.e.b2);
            }
            return this.cx;
        },
        set: function (a) {
            this.cx = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AnchoredCategorySeriesView.prototype, "cz", {
        get: function () {
            return this.cx != null;
        },
        enumerable: true,
        configurable: true
    });
    AnchoredCategorySeriesView.prototype.c3 = function () {
        this.cw.pz = null;
    };
    AnchoredCategorySeriesView.prototype.c1 = function () {
        this.cw.pz = this.cw.trendLineBrush;
    };
    AnchoredCategorySeriesView.prototype.c0 = function () {
        this.cw.pz = this.cw.k4;
    };
    AnchoredCategorySeriesView.prototype.co = function () {
        return new AnchoredCategoryBucketCalculator(this);
    };
    AnchoredCategorySeriesView.prototype.c2 = function () {
        this.cn.cacheValues();
    };
    AnchoredCategorySeriesView.prototype.c4 = function () {
        this.cn.unCacheValues();
    };
    AnchoredCategorySeriesView.prototype.c5 = function (a) {
        var b = this.cq.item(a);
        return this.cm(b);
    };
    AnchoredCategorySeriesView.prototype.a2 = function (a, b) {
        if (a.d) {
            if (this.cw.trendLineType != 0 && !b) {
                var c = this.cy.g$j;
                c.ac = this.cw.trendLineThickness;
                c._stroke = this.cw.pz;
                c.ai = this.cw.p0;
                c.ad = this.cw.p1;
                a.u(c);
            }
        }
        _super.prototype.a2.call(this, a, b);
    };
    AnchoredCategorySeriesView.prototype.getDefaultTooltipTemplate = function () {
        return this.cw.o7.c$c(this.e, this.cw.ph);
    };
    AnchoredCategorySeriesView.$t = markType(AnchoredCategorySeriesView, 'AnchoredCategorySeriesView', CategorySeriesView.$);
    return AnchoredCategorySeriesView;
}(CategorySeriesView));
export { AnchoredCategorySeriesView };
//# sourceMappingURL=AnchoredCategorySeries_combined.js.map
