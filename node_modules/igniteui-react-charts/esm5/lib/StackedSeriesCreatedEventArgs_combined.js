/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { EventArgs, Base, markType, Point_$type, typeCast, Number_$type, markDep, runOn, delegateCombine, fromEnum, Boolean_$type, enumGetBox, fromEn, String_$type, getInstanceType, INotifyPropertyChanged_$type, PropertyChangedEventArgs, Array_$type, toNullable, TypeRegistrar } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { DataTemplate } from "igniteui-react-core";
import { Visibility_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { Style } from "igniteui-react-core";
import { MarkerType_$type } from "./MarkerType";
import { HorizontalAnchoredCategorySeries } from "./HorizontalAnchoredCategorySeries";
import { CategoryLineRasterizer } from "./CategoryLineRasterizer";
import { List$1 } from "igniteui-react-core";
import { AnchoredCategorySeries } from "./AnchoredCategorySeries";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { CategorySeries } from "./CategorySeries";
import { NumericAxisBase } from "./NumericAxisBase";
import { ISupportsMarkers_$type } from "./ISupportsMarkers";
import { CategoryFrame } from "./CategoryFrame";
import { Rect } from "igniteui-react-core";
import { CategorySeriesView } from "./CategorySeriesView";
import { ObservableCollection$1 } from "igniteui-react-core";
import { Axis } from "./Axis";
import { ScalerParams } from "./ScalerParams";
import { AxisRange } from "./AxisRange";
import { AnchoredCategorySeriesView } from "./AnchoredCategorySeriesView";
import { CategoryBucketCalculator } from "./CategoryBucketCalculator";
import { isNaN_, isInfinity, truncate } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { ISortingAxis_$type } from "./ISortingAxis";
import { FrameworkElement } from "igniteui-react-core";
import { XamDataChart } from "./XamDataChart";
import { DependencyProperty } from "igniteui-react-core";
import { DependencyObject } from "igniteui-react-core";
import { NumericYAxis } from "./NumericYAxis";
import { Pool$1 } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
import { DataContext } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { IScaler_$type } from "./IScaler";
import { IIsCategoryBased_$type } from "./IIsCategoryBased";
import { CategoryMarkerManager } from "./CategoryMarkerManager";
import { PropertyMetadata } from "igniteui-react-core";
import { dateMinValue, dateMaxValue } from "igniteui-react-core";
import { NumericXAxis } from "./NumericXAxis";
import { CategoryYAxis } from "./CategoryYAxis";
import { AnchoredCategoryBucketCalculator } from "./AnchoredCategoryBucketCalculator";
import { IStacked100Series_$type } from "./IStacked100Series";
import { SplineSeriesBase } from "./SplineSeriesBase";
import { CollisionAvoider } from "./CollisionAvoider";
import { SafeSortedReadOnlyDoubleCollection } from "./SafeSortedReadOnlyDoubleCollection";
import { Numeric } from "igniteui-react-core";
import { ICategoryScaler_$type } from "./ICategoryScaler";
import { CategoryFramePreparer } from "./CategoryFramePreparer";
import { CategoryXAxis } from "./CategoryXAxis";
import { IBarSeries_$type } from "./IBarSeries";
import { Color } from "igniteui-react-core";
import { PropertyUpdatedEventArgs } from "igniteui-react-core";
import { SingleValuesHolder } from "./SingleValuesHolder";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { SplineSeriesBaseView } from "./SplineSeriesBaseView";
import { Canvas } from "igniteui-react-core";
import { Panel } from "igniteui-react-core";
import { PlatformConstants } from "igniteui-react-core";
/**
 * @hidden
 */
var StackedSeriesCreatedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedSeriesCreatedEventArgs, _super);
    function StackedSeriesCreatedEventArgs(a) {
        var _this = _super.call(this) || this;
        _this.c = null;
        _this.c = a;
        return _this;
    }
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "brush", {
        get: function () {
            return this.c.fu;
        },
        set: function (a) {
            this.c.fu = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "legendItemTemplate", {
        get: function () {
            return this.c.dv;
        },
        set: function (a) {
            this.c.dv = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "legendItemBadgeTemplate", {
        get: function () {
            return this.c.du;
        },
        set: function (a) {
            this.c.du = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "legendItemVisibility", {
        get: function () {
            return this.c.ge;
        },
        set: function (a) {
            this.c.ge = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "outline", {
        get: function () {
            return this.c.fy;
        },
        set: function (a) {
            this.c.fy = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "dashArray", {
        get: function () {
            return this.c.f3;
        },
        set: function (a) {
            this.c.f3 = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "dashCap", {
        get: function () {
            return this.c.f7;
        },
        set: function (a) {
            this.c.f7 = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "index", {
        get: function () {
            return this.c.av;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "thickness", {
        get: function () {
            return this.c.at;
        },
        set: function (a) {
            this.c.at = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "title", {
        get: function () {
            return this.c.ax;
        },
        set: function (a) {
            this.c.ax = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerBrush", {
        get: function () {
            return this.c.fv;
        },
        set: function (a) {
            this.c.fv = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerOutline", {
        get: function () {
            return this.c.fw;
        },
        set: function (a) {
            this.c.fw = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerStyle", {
        get: function () {
            return this.c.gb;
        },
        set: function (a) {
            this.c.gb = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerTemplate", {
        get: function () {
            return this.c.dw;
        },
        set: function (a) {
            this.c.dw = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerType", {
        get: function () {
            return this.c.l;
        },
        set: function (a) {
            this.c.l = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "startCap", {
        get: function () {
            return this.c.f6;
        },
        set: function (a) {
            this.c.f9 = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "endCap", {
        get: function () {
            return this.c.f5;
        },
        set: function (a) {
            this.c.f8 = a;
        },
        enumerable: true,
        configurable: true
    });
    StackedSeriesCreatedEventArgs.$t = markType(StackedSeriesCreatedEventArgs, 'StackedSeriesCreatedEventArgs', EventArgs.$);
    return StackedSeriesCreatedEventArgs;
}(EventArgs));
export { StackedSeriesCreatedEventArgs };
/**
 * @hidden
 */
var FragmentBase = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(FragmentBase, _super);
    function FragmentBase() {
        var _this = _super.call(this) || this;
        _this.ql = null;
        _this._logicalSeriesLink = null;
        _this.qn = null;
        _this.ql = new CategoryLineRasterizer();
        return _this;
    }
    Object.defineProperty(FragmentBase.prototype, "logicalSeriesLink", {
        get: function () {
            return this._logicalSeriesLink;
        },
        set: function (a) {
            this._logicalSeriesLink = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FragmentBase.prototype, "parentSeries", {
        get: function () {
            return this.qn;
        },
        set: function (a) {
            this.qn = a;
        },
        enumerable: true,
        configurable: true
    });
    FragmentBase.prototype.get_cv = function () {
        return false;
    };
    FragmentBase.prototype.get_cq = function () {
        return false;
    };
    FragmentBase.prototype.get_cs = function () {
        return true;
    };
    FragmentBase.prototype.e7 = function () {
        var a = this.parentSeries;
        if (a.fh == -1 || a.o7 == null || a.o7.f.indexOf(this) == -1) {
            return -1;
        }
        return a.o7.f.indexOf(this);
    };
    FragmentBase.prototype.fb = function () {
        var a = this.parentSeries;
        if (a.fh == -1 || a.series.count == 0 || a.series.indexOf(this.logicalSeriesLink) == -1) {
            return -1;
        }
        return a.series.indexOf(this.logicalSeriesLink);
    };
    FragmentBase.prototype.resolveLegendIndex = function () {
        var a = this.parentSeries;
        if (a.pa) {
            return -1 + a.fh + a.o3.count - a.o7.f.indexOf(this);
        }
        return _super.prototype.resolveLegendIndex.call(this);
    };
    FragmentBase.prototype.a6 = function () {
        return this.parentSeries;
    };
    FragmentBase.prototype.na = function () {
        if (this.parentSeries == null) {
            return null;
        }
        return this.parentSeries.fetchXAxis();
    };
    FragmentBase.prototype.nu = function () {
        if (this.parentSeries == null) {
            return null;
        }
        return this.parentSeries.fetchYAxis();
    };
    FragmentBase.prototype.qp = function (a, b, c, d, e, f, g, h) {
        var i = c[0];
        var j = c[1];
        var k = new Rect(0, i - 5, j - 5, 11, 11);
        if (!isNaN_(i) && !isNaN_(j) && !isInfinity(i) && !isInfinity(j) && d.tryAdd(k)) {
            b.m.add({ $type: Point_$type, x: i, y: j });
            a.updateMarkerTemplate(g, f, h);
            return true;
        }
        return false;
    };
    FragmentBase.prototype.op = function (a, b) {
        a.u();
        if (this.valueColumn == null || this.parentSeries == null || this.logicalSeriesLink == null) {
            return;
        }
        if (this.logicalSeriesLink.ad.count == 0 || this.logicalSeriesLink.ac.count == 0) {
            return;
        }
        this.ng(b).d(a, b);
    };
    FragmentBase.prototype.qr = function (a, b, c) {
        var d = this.pb(c);
        var e = d;
        var f = this.logicalSeriesLink.y;
        var g = f ? this.parentSeries.o7.e : this.parentSeries.o7.d;
        var h = g.indexOf(this);
        if (a.count == 0) {
            return;
        }
        if (h == -1) {
            return;
        }
        var i = false;
        for (var j = h; j >= 0; j--) {
            if (i) {
                break;
            }
            if (j == 0) {
                a.add({ $type: Point_$type, x: a._inner[a.count - 1].x, y: e });
                a.add({ $type: Point_$type, x: a._inner[0].x, y: e });
                break;
            }
            var k = typeCast(FragmentBase.$, g._inner[j - 1]);
            if (k != null && k.ql != null && k.ql.o.count > 0 && this.bi != null && k.dw(this.bi.br, this.bi.bs, this.bi)) {
                i = true;
                for (var l = k.ql.o.count - 1; l >= 0; l--) {
                    a.add(k.ql.o._inner[l]);
                }
            }
        }
    };
    FragmentBase.prototype.dw = function (a, b, c) {
        var d = _super.prototype.dw.call(this, a, b, c);
        var e = typeCast(CategoryAxisBase.$, this.parentSeries.fetchXAxis());
        var f = this.parentSeries.fetchYAxis();
        if (this.parentSeries == null || e == null || e.itemsSource == null || f == null || this.parentSeries.bz == null || e.bh == null || f.bh == null) {
            d = false;
        }
        if (this.valueColumn == null) {
            return false;
        }
        if (isInfinity(this.valueColumn.minimum) && isInfinity(this.valueColumn.maximum)) {
            d = false;
        }
        if (isNaN_(this.valueColumn.minimum) && isNaN_(this.valueColumn.maximum)) {
            d = false;
        }
        return d;
    };
    FragmentBase.prototype.pb = function (a) {
        var b = 0;
        var c = a.bs;
        var d = a.br;
        var e = this.getEffectiveViewport1(a);
        var f = new ScalerParams(0, c, d, this.yAxis.ca, e);
        f.b = this.eh();
        if (!c.isEmpty && !d.isEmpty && this.yAxis != null) {
            b = this.yAxis.dy(0, f);
        }
        return b;
    };
    FragmentBase.prototype.an = function (a) {
        return null;
    };
    FragmentBase.prototype.qq = function () {
        if (this.parentSeries == null) {
            return -1;
        }
        var a = this.parentSeries.fh;
        var b = 0;
        var c = 1;
        if (this.parentSeries.pa) {
            b = this.parentSeries.o3.count - 1;
            c = -1;
        }
        for (var d = b; this.parentSeries.pa ? d >= 0 : d < this.parentSeries.o3.count; d += c) {
            var e = this.parentSeries.o3._inner[d];
            if (e.visualSeriesLink == this) {
                return a;
            }
            if (this.parentSeries.aw == null || e.gd != 0 || e.gc != 0) {
                continue;
            }
            a++;
        }
        return -1;
    };
    FragmentBase.prototype.qs = function (a) {
        if (a == null) {
        }
    };
    FragmentBase.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
        if (this.parentSeries == null) {
            return;
        }
        var e = typeCast(NumericAxisBase.$, this.parentSeries.fetchYAxis());
        if (e == null) {
            return;
        }
        switch (b) {
            case "ValueColumn":
                if (this.o2.cz) {
                    this.o2.cy.g$i();
                }
                if (e != null && !e.cn()) {
                    this.parentSeries.o2().cn.g(this.eu);
                    this.je(false);
                }
                break;
            case "ActualBrush":
                if (this.logicalSeriesLink != null) {
                    this.logicalSeriesLink.fp = this.k4;
                }
                break;
        }
    };
    FragmentBase.prototype.jg = function (a, b) {
        _super.prototype.jg.call(this, a, b);
    };
    Object.defineProperty(FragmentBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    FragmentBase.$t = markType(FragmentBase, 'FragmentBase', HorizontalAnchoredCategorySeries.$);
    return FragmentBase;
}(HorizontalAnchoredCategorySeries));
export { FragmentBase };
/**
 * @hidden
 */
var AreaFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(AreaFragment, _super);
    function AreaFragment() {
        var _this = _super.call(this) || this;
        _this.ab = AreaFragment.$;
        return _this;
    }
    AreaFragment.prototype.bf = function () {
        return new AreaFragmentView(this);
    };
    AreaFragment.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.qt = a;
    };
    AreaFragment.prototype.get_ck = function () {
        return true;
    };
    AreaFragment.prototype.qv = function (a, b) {
        var c = this.qt.c8.ak;
        if (this.dj(a, c)) {
            return true;
        }
        var d = this.qt.c9.ak;
        if (this.dj(a, d)) {
            return true;
        }
        return false;
    };
    AreaFragment.prototype.dh = function (a, b) {
        if (this.qu(a, b)) {
            return true;
        }
        if (this.qv(a, b)) {
            return true;
        }
        if (this.l5(a, b)) {
            return true;
        }
        return false;
    };
    AreaFragment.prototype.qu = function (a, b) {
        var c = this.qt.da.ak;
        if (this.di(a, b, c)) {
            return true;
        }
        var d = this.qt.db.ak;
        if (this.di(a, b, d)) {
            return true;
        }
        return false;
    };
    AreaFragment.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    AreaFragment.prototype.hw = function (a, b) {
        _super.prototype.hw.call(this, a, b);
        var c = b;
        c.c7();
    };
    AreaFragment.prototype.os = function (a, b) {
        var _this = this;
        _super.prototype.os.call(this, a, b);
        this.ql.a = typeCast(ISortingAxis_$type, this.xAxis) !== null ? true : false;
        var c = typeCast(AreaFragmentView.$, b);
        var d = c.cn.d;
        this.ql.i(c.c8, c.da, c.c9, c.db, a.f.count, a.f, true, d, this.eu, function (e, f, g, h, i) { return _this.qr(e, a.f, b); }, 0);
        c.c8._opacity = this.d6;
        c.c9._opacity = 0.5 * this.d6;
    };
    AreaFragment.prototype.jo = function () {
        var a = (typeCast(XamDataChart.$, this.bs));
        if (a != null) {
            this.d6 = isNaN_(this.d7) ? this.parentSeries.d6 : this.d7;
        }
    };
    Object.defineProperty(AreaFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    AreaFragment.$t = markType(AreaFragment, 'AreaFragment', FragmentBase.$);
    return AreaFragment;
}(FragmentBase));
export { AreaFragment };
/**
 * @hidden
 */
var ColumnFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ColumnFragment, _super);
    function ColumnFragment() {
        var _this = _super.call(this) || this;
        _this.ab = ColumnFragment.$;
        return _this;
    }
    ColumnFragment.prototype.bf = function () {
        return new ColumnFragmentView(this);
    };
    ColumnFragment.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.qu = a;
    };
    Object.defineProperty(ColumnFragment.prototype, "fragmentXAxis", {
        get: function () {
            return this.parentSeries != null ? typeCast(CategoryAxisBase.$, this.parentSeries.fetchXAxis()) : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnFragment.prototype, "fragmentYAxis", {
        get: function () {
            return this.parentSeries != null ? typeCast(NumericYAxis.$, this.parentSeries.fetchYAxis()) : null;
        },
        enumerable: true,
        configurable: true
    });
    ColumnFragment.prototype.preferredCategoryMode = function (a) {
        return 2;
    };
    ColumnFragment.prototype.na = function () {
        return this.fragmentXAxis;
    };
    ColumnFragment.prototype.nu = function () {
        return this.fragmentYAxis;
    };
    ColumnFragment.prototype.fetchXAxis = function () {
        return null;
    };
    ColumnFragment.prototype.fetchYAxis = function () {
        return null;
    };
    ColumnFragment.prototype.hw = function (a, b) {
        _super.prototype.hw.call(this, a, b);
        var c = b;
        if (a && c.c7 != null) {
            this.nb.m.clear();
            c.c7.count = 0;
        }
    };
    ColumnFragment.prototype.an = function (a) {
        if (this.valueColumn == null || this.valueColumn.count == 0) {
            return null;
        }
        return new AxisRange(this.valueColumn.minimum, this.valueColumn.maximum);
    };
    ColumnFragment.prototype.dw = function (a, b, c) {
        if (this.parentSeries == null) {
            return false;
        }
        return this.parentSeries.pb(this, a, b, this.qw(c));
    };
    ColumnFragment.prototype.dt = function () {
        return true;
    };
    ColumnFragment.prototype.ob = function (a) {
        if (this.parentSeries != null) {
            return this.parentSeries.ob(this.parentSeries.bi);
        }
        return _super.prototype.ob.call(this, a);
    };
    ColumnFragment.prototype.oc = function (a) {
        if (this.parentSeries != null) {
            return this.parentSeries.oc(this.parentSeries.bi);
        }
        return _super.prototype.ob.call(this, a);
    };
    ColumnFragment.prototype.lv = function (a) {
        if (this.na() == null || this.fragmentYAxis == null) {
            return Rect.empty;
        }
        var b = this.lh(a);
        var c = this.bi.bs;
        var d = this.bi.br;
        var e = this.getEffectiveViewport1(this.bi);
        var f = new ScalerParams(0, c, d, this.fragmentYAxis.ca, e);
        var g = this.aj(this.na(), this.nb.f, this.ob(this.bi), this.oc(this.bi), a, true);
        if (g == null) {
            return Rect.empty;
        }
        var h = g[0];
        var i = g[1];
        var j = Math.abs(b.x - h[0]);
        var k = Math.abs(b.x - i[0]);
        var l = this.na().jy(c, d, e);
        if (j < k) {
            var m = h[0] - 0.5 * l;
            var n = h[1];
            var o = h[2];
            return new Rect(0, m, Math.min(n, o), l, Math.max(n, o) - Math.min(n, o));
        }
        else {
            var p = i[0] - 0.5 * l;
            var q = i[1];
            var r = i[2];
            return new Rect(0, p, Math.min(q, r), l, Math.max(q, r) - Math.min(q, r));
        }
    };
    ColumnFragment.prototype.dh = function (a, b) {
        if (this.dk(a, b)) {
            return true;
        }
        if (this.l5(a, b)) {
            return true;
        }
        return false;
    };
    ColumnFragment.prototype.dk = function (a, b) {
        var c = this.lw(a);
        if (c.isEmpty) {
            return false;
        }
        var d = this.q3(c, this.ee(b));
        return d.containsPoint(a);
    };
    ColumnFragment.prototype.q3 = function (a, b) {
        var c = a.left + a.width / 2;
        var d = a.top + a.height / 2;
        var e = c - ((a.width / 2) + b);
        var f = d - (a.height / 2);
        var g = a.height;
        var h = a.width + b * 2;
        return new Rect(0, e, f, h, g);
    };
    ColumnFragment.prototype.fv = function (a, b) {
        var c = typeCast(FrameworkElement.$, a);
        var d = c != null ? typeCast(DataContext.$, c.dataContext) : null;
        var e = d != null ? d.item : null;
        if (e == null) {
            var f = this.bi.br;
            var g = this.bs != null ? this.bs.mr : Rect.empty;
            var h = { $type: Point_$type, x: g.left + g.width * (b.x - f.left) / f.width, y: g.top + g.height * (b.y - f.top) / f.height };
            e = this.fp(h);
        }
        return e;
    };
    ColumnFragment.prototype.fp = function (a) {
        var b = 0;
        if (typeCast(ISortingAxis_$type, this.na()) !== null) {
            b = this.fa(a);
            if (b == -1) {
                return null;
            }
        }
        else {
            b = this.e8(a);
        }
        return b >= 0 && this.bz != null && b < this.bz.count ? this.bz.item(b) : null;
    };
    ColumnFragment.prototype.fa = function (a) {
        var b = this.bi.bs;
        var c = this.bi.br;
        var d = this.getEffectiveViewport1(this.bi);
        if (b.isEmpty || c.isEmpty) {
            return -1;
        }
        var e = this.na();
        var f = new ScalerParams(0, b, c, e.ca, d);
        var g = typeCast(ISortingAxis_$type, this.fragmentXAxis);
        var h = this.lr(this.bi);
        var i = e.d1(h.left, f);
        var j = e.d1(h.right, f);
        var k = (a.x - b.left) / b.width;
        var l = i + ((j - i) * k);
        if (truncate(l) <= dateMinValue().getTime() || truncate(l) >= dateMaxValue().getTime()) {
            return -1;
        }
        var m = g.i$f(l);
        return m;
    };
    ColumnFragment.prototype.e8 = function (a) {
        if (this.parentSeries == null) {
            return -1;
        }
        return this.parentSeries.ph(a);
    };
    ColumnFragment.prototype.qp = function (a, b, c, d, e, f, g, h) {
        var i = 0;
        var j = c[0];
        var k = e < i ? c[2] : c[1];
        var l = new Rect(0, j - 5, k - 5, 11, 11);
        if (!isNaN_(j) && !isNaN_(k) && !isInfinity(j) && !isInfinity(k) && d.tryAdd(l)) {
            b.m.add({ $type: Point_$type, x: j, y: k });
            a.updateMarkerTemplate(g, f, h);
            return true;
        }
        return false;
    };
    ColumnFragment.prototype.qw = function (a) {
        if (a.m) {
            return this.parentSeries.a0.a$h.item(a.aa);
        }
        else if (a == this.bh) {
            return this.parentSeries.bh;
        }
        else {
            return this.parentSeries.nj;
        }
    };
    ColumnFragment.prototype.jd = function (a, b, c, d, e) {
        this.a0.a$r(this, a, b, d, e);
        var f = this.a0.a$h.item(d);
        var g = f;
        f.ay(c);
        var h = this.qw(f);
        h.cn.g(this.eu);
        if (this.cc(g)) {
            return;
        }
        if (this.o3 == null) {
            this.o3 = new CategoryFrame(3);
        }
        this.o3.u();
        this.op(this.o3, g);
        this.os(this.o3, g);
    };
    ColumnFragment.prototype.op = function (a, b) {
        a.u();
        if (this.valueColumn == null || this.parentSeries == null || this.logicalSeriesLink == null || this.logicalSeriesLink.ac.count == 0 || this.logicalSeriesLink.ad.count == 0) {
            return;
        }
        var c;
        if (b.m) {
            c = this.parentSeries.o1;
        }
        else if (b == this.bh) {
            c = this.parentSeries.nd;
        }
        else {
            c = this.parentSeries.nb;
        }
        var d = typeCast(CategorySeriesView.$, this.qw(b));
        a.f.clear();
        a.m.clear();
        var e = d.cn.e;
        var f = d.cn.f;
        var g = this.parentSeries.nf.h.yScaler;
        var h = typeCast(ISortingAxis_$type, this.parentSeries.nf.h.scaler);
        var i = typeCast(NumericAxisBase.$, g) !== null && g.j1;
        var j = typeCast(StackedBucketCalculator.$, d.cn);
        var k = d.cn.d;
        var l = 0;
        for (var m = e; m <= f; m++) {
            var n = m * k;
            if (this._visibility != 0) {
                break;
            }
            if (m >= this.valueColumn.count || m >= c.f.count + e) {
                continue;
            }
            var o = this.valueColumn.item(m);
            var p = !i || (i && o > 0);
            var q = void 0;
            if (h == null) {
                q = j.getBucket1(this, m, m, b.bs, b.br, c);
            }
            else {
                q = j.getBucket1(this, m, h.i$b._inner[m], b.bs, b.br, c);
            }
            a.f.add(q);
            if (p) {
                if (this.qp(b, a, q, this.nf.h.provideCollisionDetector(), o, n, l, m)) {
                    l++;
                }
            }
        }
        b.cq.count = l;
    };
    ColumnFragment.prototype.os = function (a, b) {
        _super.prototype.os.call(this, a, b);
        if (this.parentSeries == null) {
            return;
        }
        this.parentSeries.pq(this, a, b);
        CategoryMarkerManager.b(this, a.m, b.cq, this.l6);
    };
    ColumnFragment.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
    };
    Object.defineProperty(ColumnFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    ColumnFragment.$t = markType(ColumnFragment, 'ColumnFragment', FragmentBase.$);
    ColumnFragment.$$p = markDep(DependencyProperty, PropertyMetadata, ColumnFragment, 'raisePropertyChanged', ['RadiusX:qx:q1', [1, 2], 'RadiusY:qy:q2', [1, 2]]);
    return ColumnFragment;
}(FragmentBase));
export { ColumnFragment };
/**
 * @hidden
 */
var BarFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(BarFragment, _super);
    function BarFragment() {
        var _this = _super.call(this) || this;
        _this.ab = BarFragment.$;
        return _this;
    }
    Object.defineProperty(BarFragment.prototype, "barFragmentXAxis", {
        get: function () {
            return this.parentSeries != null ? this.parentSeries.xAxis : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BarFragment.prototype, "barFragmentYAxis", {
        get: function () {
            return this.parentSeries != null ? this.parentSeries.yAxis : null;
        },
        enumerable: true,
        configurable: true
    });
    BarFragment.prototype.na = function () {
        if (this.parentSeries == null) {
            return null;
        }
        return this.parentSeries.fetchYAxis();
    };
    BarFragment.prototype.eb = function (a) {
        var b = this.bs != null ? this.bs.mr : Rect.empty;
        var c = this.bi.br;
        var d = this.lr(this.bi);
        var e = this.getEffectiveViewport1(this.bi);
        var f = this.na();
        var g = -1;
        if (f != null && !b.isEmpty && !c.isEmpty) {
            var h = new ScalerParams(0, b, c, f.ca, e);
            var i = f.d1(d.top, h);
            var j = f.d1(d.bottom, h);
            var k = (a.y - b.top) / b.height;
            var l = i + (k * (j - i));
            if (f.categoryMode != 0) {
                l -= 0.5;
            }
            g = l;
        }
        return g;
    };
    BarFragment.prototype.nu = function () {
        if (this.parentSeries == null) {
            return null;
        }
        return this.parentSeries.fetchYAxis();
    };
    BarFragment.prototype.q3 = function (a, b) {
        var c = a.left + a.width / 2;
        var d = a.top + a.height / 2;
        var e = c - (a.width / 2);
        var f = d - ((a.height / 2) + b);
        var g = a.height + b * 2;
        var h = a.width;
        return new Rect(0, e, f, h, g);
    };
    BarFragment.prototype.lv = function (a) {
        if (this.na() == null) {
            return Rect.empty;
        }
        var b = this.lh(a);
        var c = this.bi.bs;
        var d = this.bi.br;
        var e = this.getEffectiveViewport1(this.bi);
        var f = this.na();
        var g = new ScalerParams(0, c, d, f.ca, e);
        var h = this.aj(this.na(), this.nb.f, this.ob(this.bi), this.oc(this.bi), a, true);
        if (h == null) {
            return Rect.empty;
        }
        var i = h[0];
        var j = h[1];
        var k = Math.abs(b.y - i[0]);
        var l = Math.abs(b.y - j[0]);
        var m = f.jy(c, d, e);
        if (k < l) {
            var n = i[0] - 0.5 * m;
            var o = i[2];
            var p = i[1];
            return new Rect(0, o, n, Math.max(p, o) - Math.min(p, o), m);
        }
        else {
            var q = j[0] - 0.5 * m;
            var r = j[2];
            var s = j[1];
            return new Rect(0, r, q, Math.max(s, r) - Math.min(s, r), m);
        }
    };
    BarFragment.prototype.dh = function (a, b) {
        if (this.dk(a, b)) {
            return true;
        }
        if (this.l5(a, b)) {
            return true;
        }
        return false;
    };
    BarFragment.prototype.qp = function (a, b, c, d, e, f, g, h) {
        var i = c[0];
        var j = e < 0 ? c[2] : c[1];
        var k = new Rect(0, j - 5, i - 5, 11, 11);
        if (!isNaN_(j) && !isNaN_(i) && !isInfinity(j) && !isInfinity(i) && d.tryAdd(k)) {
            b.m.add({ $type: Point_$type, x: j, y: i });
            a.updateMarkerTemplate(g, f, h);
            return true;
        }
        return false;
    };
    BarFragment.prototype.fp = function (a) {
        var b = 0;
        if (typeCast(ISortingAxis_$type, this.barFragmentYAxis) !== null) {
            b = this.fa(a);
            if (b == -1) {
                return null;
            }
        }
        else {
            b = this.e8(a);
        }
        return b >= 0 && this.bz != null && b < this.bz.count ? this.bz.item(b) : null;
    };
    BarFragment.prototype.fa = function (a) {
        var b = this.bi.bs;
        var c = this.bi.br;
        if (b.isEmpty || c.isEmpty) {
            return -1;
        }
        var d = this.getEffectiveViewport1(this.bi);
        var e = new ScalerParams(0, b, c, this.barFragmentYAxis.ca, d);
        var f = typeCast(ISortingAxis_$type, this.barFragmentYAxis);
        var g = this.lr(this.bi);
        var h = this.barFragmentYAxis.d1(g.top, e);
        var i = this.barFragmentYAxis.d1(g.bottom, e);
        var j = (a.y - b.top) / b.height;
        var k = h + ((i - h) * j);
        if (truncate(k) <= dateMinValue().getTime() || truncate(k) >= dateMaxValue().getTime()) {
            return -1;
        }
        var l = f.i$f(k);
        return l;
    };
    BarFragment.prototype.pb = function (a) {
        var b = 0;
        var c = a.bs;
        var d = a.br;
        var e = this.getEffectiveViewport1(a);
        var f = new ScalerParams(0, c, d, this.barFragmentXAxis.ca, e);
        if (!c.isEmpty && !d.isEmpty && this.barFragmentXAxis != null) {
            b = this.barFragmentXAxis.dy(0, f);
        }
        return b;
    };
    BarFragment.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
        if (this.parentSeries == null || this.barFragmentXAxis == null) {
            return;
        }
        var e = this.barFragmentXAxis;
        switch (b) {
            case "ValueColumn":
                if (this.o2.cz) {
                    this.o2.cy.g$i();
                }
                if (e != null && !e.cn()) {
                    this.parentSeries.o2().cn.g(this.eu);
                    this.je(false);
                }
                break;
        }
    };
    Object.defineProperty(BarFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    BarFragment.$t = markType(BarFragment, 'BarFragment', ColumnFragment.$);
    return BarFragment;
}(ColumnFragment));
export { BarFragment };
/**
 * @hidden
 */
var AreaFragmentBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(AreaFragmentBucketCalculator, _super);
    function AreaFragmentBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    AreaFragmentBucketCalculator.prototype.getBucketWithoutUnknowns = function (a) {
        return this.getBucket(a);
    };
    AreaFragmentBucketCalculator.prototype.getBucket = function (a) {
        var b = Math.min(a * this.d, this.i.cw.valueColumn.count - 1);
        var c = Math.min(b + this.d - 1, this.i.cw.valueColumn.count - 1);
        var d = NaN;
        var e = NaN;
        var f = this.i.cw;
        var g = f.parentSeries;
        var h = typeCast(IStacked100Series_$type, g) !== null;
        var i = this.i.cw.valueColumn;
        var j = g.oz;
        var k = g.o0;
        var l = f.logicalSeriesLink.ad;
        var m = f.logicalSeriesLink.ac;
        for (var n = b; n <= c; ++n) {
            var o = i.item(n);
            if (isNaN_(o) || isInfinity(o)) {
                o = 0;
            }
            var p = Math.abs(k[n]) + j[n];
            if (h) {
                if (p == 0) {
                    o = 0;
                }
                else if (o < 0) {
                    o = (l._inner[n] + o) / p * 100;
                }
                else {
                    o = (m._inner[n] + o) / p * 100;
                }
            }
            else {
                o = o < 0 ? l._inner[n] + o : m._inner[n] + o;
            }
            if (!isNaN_(d)) {
                if (!isNaN_(o)) {
                    d = Math.min(d, o);
                    e = Math.max(e, o);
                }
            }
            else {
                d = o;
                e = o;
            }
        }
        if (!isNaN_(d)) {
            return [0.5 * (b + c), d, e];
        }
        return [0.5 * (b + c), NaN, NaN];
    };
    AreaFragmentBucketCalculator.$t = markType(AreaFragmentBucketCalculator, 'AreaFragmentBucketCalculator', AnchoredCategoryBucketCalculator.$);
    return AreaFragmentBucketCalculator;
}(AnchoredCategoryBucketCalculator));
export { AreaFragmentBucketCalculator };
/**
 * @hidden
 */
var LineFragmentBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(LineFragmentBucketCalculator, _super);
    function LineFragmentBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    LineFragmentBucketCalculator.prototype.getBucketWithoutUnknowns = function (a) {
        return this.getBucket(a);
    };
    LineFragmentBucketCalculator.prototype.getBucket = function (a) {
        var b = Math.min(a * this.d, this.i.cw.valueColumn.count - 1);
        var c = Math.min(b + this.d - 1, this.i.cw.valueColumn.count - 1);
        var d = NaN;
        var e = NaN;
        var f = typeCast(FragmentBase.$, this.i.cw);
        var g = f.parentSeries;
        for (var h = b; h <= c; ++h) {
            var i = this.i.cw.valueColumn.item(h);
            var j = Math.abs(g.o0[h]) + g.oz[h];
            if (isNaN_(i) || isInfinity(i)) {
                i = 0;
            }
            if (typeCast(IStacked100Series_$type, g) !== null) {
                if (j == 0) {
                    i = 0;
                }
                else if (i < 0) {
                    i = (f.logicalSeriesLink.ad._inner[h] + i) / j * 100;
                }
                else {
                    i = (f.logicalSeriesLink.ac._inner[h] + i) / j * 100;
                }
            }
            else {
                i = i < 0 ? f.logicalSeriesLink.ad._inner[h] + i : f.logicalSeriesLink.ac._inner[h] + i;
            }
            if (!isNaN_(d)) {
                if (!isNaN_(i)) {
                    d = Math.min(d, i);
                    e = Math.max(e, i);
                }
            }
            else {
                d = i;
                e = i;
            }
        }
        if (!isNaN_(d)) {
            return [0.5 * (b + c), d, e];
        }
        return [0.5 * (b + c), NaN, NaN];
    };
    LineFragmentBucketCalculator.$t = markType(LineFragmentBucketCalculator, 'LineFragmentBucketCalculator', AnchoredCategoryBucketCalculator.$);
    return LineFragmentBucketCalculator;
}(AnchoredCategoryBucketCalculator));
export { LineFragmentBucketCalculator };
/**
 * @hidden
 */
var SplineFragmentBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(SplineFragmentBucketCalculator, _super);
    function SplineFragmentBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    SplineFragmentBucketCalculator.prototype.getBucket = function (a) {
        var b = Math.min(a * this.d, this.i.cw.valueColumn.count - 1);
        var c = Math.min(b + this.d - 1, this.i.cw.valueColumn.count - 1);
        var d = NaN;
        var e = NaN;
        var f = typeCast(SplineFragmentBase.$, this.i.cw);
        var g = f.parentSeries;
        for (var h = b; h <= c; ++h) {
            var i = this.i.cw.valueColumn.item(h);
            var j = Math.abs(g.o0[h]) + g.oz[h];
            if (isNaN_(i) || isInfinity(i)) {
                i = 0;
            }
            if (typeCast(IStacked100Series_$type, g) !== null) {
                if (j == 0) {
                    i = 0;
                }
                else if (i < 0) {
                    i = (f.logicalSeriesLink.ad._inner[h] + i) / j * 100;
                }
                else {
                    i = (f.logicalSeriesLink.ac._inner[h] + i) / j * 100;
                }
            }
            else {
                i = i < 0 ? f.logicalSeriesLink.ad._inner[h] + i : f.logicalSeriesLink.ac._inner[h] + i;
            }
            if (!isNaN_(d)) {
                if (!isNaN_(i)) {
                    d = Math.min(d, i);
                    e = Math.max(e, i);
                }
            }
            else {
                d = i;
                e = i;
            }
        }
        if (!isNaN_(d)) {
            return [0.5 * (b + c), d, e];
        }
        return [0.5 * (b + c), NaN, NaN];
    };
    SplineFragmentBucketCalculator.$t = markType(SplineFragmentBucketCalculator, 'SplineFragmentBucketCalculator', AnchoredCategoryBucketCalculator.$);
    return SplineFragmentBucketCalculator;
}(AnchoredCategoryBucketCalculator));
export { SplineFragmentBucketCalculator };
/**
 * @hidden
 */
var StackedBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedBucketCalculator, _super);
    function StackedBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    StackedBucketCalculator.prototype.getBucket = function (a) {
        var b = typeCast(StackedSeriesBase.$, this.c.cp);
        var c = Math.min(b.o0 != null ? b.o0.length : 0, b.oz != null ? b.oz.length : 0);
        var d = Math.min(a * this.d, c - 1);
        var e = Math.min(d + this.d - 1, c - 1);
        var f = NaN;
        var g = NaN;
        for (var h = d; h <= e; ++h) {
            var i = Math.min(b.o0[h], b.oz[h]);
            var j = Math.max(b.o0[h], b.oz[h]);
            if (!isNaN_(f)) {
                if (!isNaN_(i)) {
                    f = Math.min(f, i);
                    g = Math.max(g, i);
                }
                if (!isNaN_(j)) {
                    f = Math.min(f, j);
                    g = Math.max(g, j);
                }
            }
            else {
                f = i;
                g = j;
            }
        }
        if (!isNaN_(f) && !isNaN_(g)) {
            return [0.5 * (d + e), f, g];
        }
        return [NaN, NaN, NaN];
    };
    StackedBucketCalculator.prototype.getBucket1 = function (a, b, c, d, e, f) {
        return null;
    };
    StackedBucketCalculator.$t = markType(StackedBucketCalculator, 'StackedBucketCalculator', CategoryBucketCalculator.$);
    return StackedBucketCalculator;
}(CategoryBucketCalculator));
export { StackedBucketCalculator };
/**
 * @hidden
 */
var StackedBarBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedBarBucketCalculator, _super);
    function StackedBarBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    StackedBarBucketCalculator.prototype.g = function (a) {
        var b = this.c.bs;
        var c = this.c.br;
        var d = typeCast(StackedBarSeries.$, this.c.cp);
        var e = this.c.cp.bz;
        if (b.isEmpty || c.isEmpty || d.yAxis == null || e == null || e.count == 0) {
            this.d = 0;
            return;
        }
        var f = d.getEffectiveViewport1(this.c);
        var g = new ScalerParams(0, b, c, d.yAxis.ca, f);
        var h = d.lr(this.c);
        var i = Math.floor(d.yAxis.d2(h.top, g, 0));
        var j = Math.ceil(d.yAxis.d2(h.bottom, g, 0));
        if (!d.yAxis.ca) {
            j = Math.ceil(d.yAxis.d2(h.top, g, 0));
            i = Math.floor(d.yAxis.d2(h.bottom, g, 0));
        }
        var k = Math.floor((j - i + 1) * a / h.height);
        this.d = truncate(Math.max(1, k));
        this.e = truncate(Math.max(0, Math.floor(i / this.d) - 1));
        this.f = truncate(Math.ceil(j / this.d));
    };
    StackedBarBucketCalculator.prototype.getBucket = function (a) {
        return _super.prototype.getBucket.call(this, a);
    };
    StackedBarBucketCalculator.prototype.getBucket1 = function (a, b, c, d, e, f) {
        var g = [NaN, NaN, NaN];
        var h = typeCast(BarFragment.$, a);
        if (h == null || h.logicalSeriesLink == null) {
            return g;
        }
        var i = typeCast(StackedBarSeries.$, this.c.cp);
        var j = a.valueColumn.item(c);
        var k = 0;
        var l = NaN;
        var m = NaN;
        var n = Number.NEGATIVE_INFINITY;
        var o = Number.POSITIVE_INFINITY;
        var p = i.getEffectiveViewport1(this.c);
        var q = Math.min(i.o0 != null ? i.o0.length : 0, i.oz != null ? i.oz.length : 0);
        var r = c * this.d;
        var s = Math.min(r + this.d - 1, q - 1);
        for (var t = r; t <= s; ++t) {
            j = a.valueColumn.item(t);
            if (j < k) {
                o = Math.min(o, h.logicalSeriesLink.ad._inner[t] + j);
                n = Math.max(n, h.logicalSeriesLink.ad._inner[t]);
            }
            else {
                o = Math.min(o, h.logicalSeriesLink.ac._inner[t]);
                n = Math.max(n, h.logicalSeriesLink.ac._inner[t] + j);
            }
            if (!isNaN_(l)) {
                if (!isNaN_(o)) {
                    l = Math.min(l, o);
                    m = Math.max(m, o);
                }
                if (!isNaN_(n)) {
                    l = Math.min(l, n);
                    m = Math.max(m, n);
                }
            }
            else {
                l = o;
                m = n;
            }
        }
        var u = new ScalerParams(0, d, e, i.xAxis.ca, p);
        g = [f.f._inner[b - this.e][0], i.xAxis.dy(m, u), i.xAxis.dy(l, u)];
        return g;
    };
    StackedBarBucketCalculator.$t = markType(StackedBarBucketCalculator, 'StackedBarBucketCalculator', StackedBucketCalculator.$);
    return StackedBarBucketCalculator;
}(StackedBucketCalculator));
export { StackedBarBucketCalculator };
/**
 * @hidden
 */
var StackedColumnBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedColumnBucketCalculator, _super);
    function StackedColumnBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    StackedColumnBucketCalculator.prototype.getBucket = function (a) {
        return _super.prototype.getBucket.call(this, a);
    };
    StackedColumnBucketCalculator.prototype.getBucket1 = function (a, b, c, d, e, f) {
        var g = [NaN, NaN, NaN];
        var h = typeCast(ColumnFragment.$, a);
        if (h == null || h.logicalSeriesLink == null) {
            return g;
        }
        var i = typeCast(StackedColumnSeries.$, this.c.cp);
        var j = a.valueColumn.item(c);
        var k = 0;
        var l = NaN;
        var m = NaN;
        var n = Number.NEGATIVE_INFINITY;
        var o = Number.POSITIVE_INFINITY;
        var p = i.getEffectiveViewport1(this.c);
        var q = Math.min(i.o0 != null ? i.o0.length : 0, i.oz != null ? i.oz.length : 0);
        var r = c * this.d;
        var s = Math.min(r + this.d - 1, q - 1);
        for (var t = r; t <= s; ++t) {
            j = a.valueColumn.item(t);
            if (j < k) {
                o = Math.min(o, h.logicalSeriesLink.ad._inner[t] + j);
                n = Math.max(n, h.logicalSeriesLink.ad._inner[t]);
            }
            else {
                o = Math.min(o, h.logicalSeriesLink.ac._inner[t]);
                n = Math.max(n, h.logicalSeriesLink.ac._inner[t] + j);
            }
            if (!isNaN_(l)) {
                if (!isNaN_(o)) {
                    l = Math.min(l, o);
                    m = Math.max(m, o);
                }
                if (!isNaN_(n)) {
                    l = Math.min(l, n);
                    m = Math.max(m, n);
                }
            }
            else {
                l = o;
                m = n;
            }
        }
        var u = new ScalerParams(0, d, e, i.yAxis.ca, p);
        g = [f.f._inner[b - this.e][0], i.yAxis.dy(m, u), i.yAxis.dy(l, u)];
        return g;
    };
    StackedColumnBucketCalculator.$t = markType(StackedColumnBucketCalculator, 'StackedColumnBucketCalculator', StackedBucketCalculator.$);
    return StackedColumnBucketCalculator;
}(StackedBucketCalculator));
export { StackedColumnBucketCalculator };
/**
 * @hidden
 */
var LineFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(LineFragment, _super);
    function LineFragment() {
        var _this = _super.call(this) || this;
        _this.ab = LineFragment.$;
        return _this;
    }
    LineFragment.prototype.bf = function () {
        return new LineFragmentView(this);
    };
    LineFragment.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.qt = a;
    };
    LineFragment.prototype.qv = function (a, b) {
        var c = this.qt.c8.ak;
        if (this.dj(a, c)) {
            return true;
        }
        return false;
    };
    LineFragment.prototype.get_ck = function () {
        return true;
    };
    LineFragment.prototype.dh = function (a, b) {
        if (this.qu(a, b)) {
            return true;
        }
        if (this.qv(a, b)) {
            return true;
        }
        if (this.l5(a, b)) {
            return true;
        }
        return false;
    };
    LineFragment.prototype.qu = function (a, b) {
        var c = this.qt.c9.ak;
        if (this.di(a, b, c)) {
            return true;
        }
        var d = this.qt.da.ak;
        if (this.di(a, b, d)) {
            return true;
        }
        return false;
    };
    LineFragment.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    LineFragment.prototype.hw = function (a, b) {
        _super.prototype.hw.call(this, a, b);
        var c = b;
        c.c7();
    };
    LineFragment.prototype.os = function (a, b) {
        _super.prototype.os.call(this, a, b);
        var c = function (d) { return a.f._inner[d][0]; };
        var d = function (e) { return a.f._inner[e][1]; };
        var e = function (f) { return a.f._inner[f][0]; };
        var f = function (g) { return a.f._inner[g][2]; };
        this.ql.a = typeCast(ISortingAxis_$type, this.xAxis) !== null ? true : false;
        var g = b.cn.d;
        var h = typeCast(LineFragmentView.$, b);
        this.ql.m(h.c9, h.c8, h.da, a.f.count, a.f, true, 0, this.o0(a.f, a.f.count - 1, b.br, b.bs), g, this.eu);
    };
    Object.defineProperty(LineFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    LineFragment.$t = markType(LineFragment, 'LineFragment', FragmentBase.$);
    return LineFragment;
}(FragmentBase));
export { LineFragment };
/**
 * @hidden
 */
var SplineFragmentBase = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(SplineFragmentBase, _super);
    function SplineFragmentBase() {
        var _this = _super.call(this) || this;
        _this._logicalSeriesLink = null;
        _this.qv = null;
        _this.qx = null;
        _this.qv = new CategoryLineRasterizer();
        return _this;
    }
    Object.defineProperty(SplineFragmentBase.prototype, "logicalSeriesLink", {
        get: function () {
            return this._logicalSeriesLink;
        },
        set: function (a) {
            this._logicalSeriesLink = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SplineFragmentBase.prototype, "parentSeries", {
        get: function () {
            return this.qx;
        },
        set: function (a) {
            this.qx = a;
        },
        enumerable: true,
        configurable: true
    });
    SplineFragmentBase.prototype.get_cq = function () {
        return false;
    };
    SplineFragmentBase.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    SplineFragmentBase.prototype.get_cs = function () {
        return true;
    };
    SplineFragmentBase.prototype.e7 = function () {
        var a = this.parentSeries;
        if (a.fh == -1 || a.o7 == null || a.o7.f.indexOf(this) == -1) {
            return -1;
        }
        return a.o7.f.indexOf(this);
    };
    SplineFragmentBase.prototype.resolveLegendIndex = function () {
        var a = this.parentSeries;
        if (a.pa) {
            return -1 + a.fh + a.o3.count - a.o7.f.indexOf(this);
        }
        return _super.prototype.resolveLegendIndex.call(this);
    };
    SplineFragmentBase.prototype.fb = function () {
        var a = this.parentSeries;
        if (a.fh == -1 || a.series.count == 0 || a.series.indexOf(this.logicalSeriesLink) == -1) {
            return -1;
        }
        return a.series.indexOf(this.logicalSeriesLink);
    };
    SplineFragmentBase.prototype.a6 = function () {
        return this.parentSeries;
    };
    SplineFragmentBase.prototype.qo = function (a, b, c, d, e, f, g) {
        var h = b[0];
        var i = b[1];
        var j = new Rect(0, h - 5, i - 5, 11, 11);
        if (!isNaN_(h) && !isNaN_(i) && !isInfinity(h) && !isInfinity(i) && c.tryAdd(j)) {
            a.m.add({ $type: Point_$type, x: h, y: i });
            var k = f.cq.item(e);
            k.content.item = this.bz.item(d);
            k.al = g;
            return true;
        }
        return false;
    };
    SplineFragmentBase.prototype.dw = function (a, b, c) {
        var d = _super.prototype.dw.call(this, a, b, c);
        var e = typeCast(CategoryAxisBase.$, this.parentSeries.fetchXAxis());
        var f = this.parentSeries.fetchYAxis();
        if (this.parentSeries == null || e == null || e.itemsSource == null || f == null || this.parentSeries.bz == null || e.bh == null || f.bh == null) {
            d = false;
        }
        if (this.valueColumn == null) {
            return false;
        }
        if (isInfinity(this.valueColumn.minimum) && isInfinity(this.valueColumn.maximum)) {
            d = false;
        }
        if (isNaN_(this.valueColumn.minimum) && isNaN_(this.valueColumn.maximum)) {
            d = false;
        }
        return d;
    };
    SplineFragmentBase.prototype.an = function (a) {
        return null;
    };
    SplineFragmentBase.prototype.qz = function (a, b, c, d, e, f) {
        var _this = this;
        var g = typeCast(ISortingAxis_$type, d);
        if (g == null) {
            return;
        }
        var h = this.getEffectiveViewport1(f);
        var i = new ScalerParams(0, b, c, d.ca, h);
        var j = new ScalerParams(0, b, c, e.ca, h);
        var k = d.d1(2, i) - d.d1(1, i);
        var l = this.l4();
        var m = 0;
        var n = this.qq(d, b, c, h);
        var o = function (p) { return Math.abs(_this.parentSeries.o0[p]) + _this.parentSeries.oz[p]; };
        var p = function (q) { return q; };
        var q = function (r) {
            var s = g.i$b._inner[r];
            if (typeCast(IStacked100Series_$type, _this.parentSeries) !== null) {
                return _this.valueColumn.item(s) < 0 ? (_this.logicalSeriesLink.ad._inner[s] + _this.valueColumn.item(s)) / o(s) * 100 : (_this.logicalSeriesLink.ac._inner[s] + _this.valueColumn.item(s)) / o(s) * 100;
            }
            else {
                return _this.valueColumn.item(s) < 0 ? _this.logicalSeriesLink.ad._inner[s] + _this.valueColumn.item(s) : _this.logicalSeriesLink.ac._inner[s] + _this.valueColumn.item(s);
            }
        };
        var r = this.nj.cn.f;
        var s = this.nj.cn.e;
        var t = truncate(Math.ceil(c.width / (r - s)));
        var u = new CollisionAvoider();
        var v = this.nj.cn.d;
        if (v <= 0 || (s <= 0 && r <= 0)) {
            this.nj.cq.count = m;
            return;
        }
        var w = 0;
        for (var x = s; x < r + 1; ++x) {
            var y = null;
            var z = x * v;
            if (g != null && g.i$b != null && z >= 0 && z < g.i$b.count) {
                z = g.i$b._inner[z];
            }
            if (x >= (this.valueColumn.count - 1)) {
                if (l && this.qo(a, a.f._inner[a.f.count - 1], u, Math.min(z, this.bz.count - 1), m, f, w - 1)) {
                    ++m;
                }
                break;
            }
            var aa = p(x);
            var ab = q(x);
            var ac = p(x + 1);
            var ad = q(x + 1);
            var ae = ac - aa;
            var af = this.ql[x];
            var ag = this.ql[x + 1];
            var ah = g.i$d(g.i$b._inner[x]);
            var ai = d.dy(ah, i) + n;
            var aj = e.dy(ab, j);
            a.f.add([ai, aj, aj]);
            w++;
            for (var ak = 1; ak < t; ++ak) {
                var al = ak / t;
                var am = aa + ae * al;
                var an = (ac - am) / ae;
                var ao = (am - aa) / ae;
                var ap = an * ab + ao * ad + ((an * an * an - an) * af + (ao * ao * ao - ao) * ag) * (ae * ae) / 6;
                var aq = g.i$d(g.i$b._inner[x]);
                var ar = g.i$d(g.i$b._inner[x + 1]);
                if (aq == ar && ab == ad) {
                    break;
                }
                var as = aq + (ar - aq) * al;
                am = d.dy(as, i) + n;
                ap = e.dy(ap, j);
                a.f.add([am, ap, ap]);
                w++;
            }
            if (l) {
                y = [ai, aj, aj];
            }
            if (l && this.qo(a, y, u, Math.min(z, this.bz.count - 1), m, f, w - 1)) {
                ++m;
            }
        }
        this.nj.cq.count = m;
    };
    SplineFragmentBase.prototype.op = function (a, b) {
        var _this = this;
        a.u();
        if (this.valueColumn == null || this.parentSeries == null || this.logicalSeriesLink == null) {
            return;
        }
        if (this.logicalSeriesLink.ad.count == 0 || this.logicalSeriesLink.ac.count == 0) {
            return;
        }
        if (this.nj.cn.d == 0) {
            return;
        }
        _super.prototype.op.call(this, a, b);
        if (a.f.count <= 1) {
            return;
        }
        var c = b.bs;
        var d = b.br;
        var e = this.getEffectiveViewport1(b);
        var f = typeCast(CategoryAxisBase.$, this.parentSeries.fetchXAxis());
        var g = typeCast(NumericYAxis.$, this.parentSeries.fetchYAxis());
        var h = new ScalerParams(0, c, d, f.ca, e);
        var i = new ScalerParams(0, c, d, g.ca, e);
        a.f.clear();
        a.m.clear();
        var j = this.l4();
        var k = 0;
        var l;
        var m;
        if (b.m) {
            l = this.parentSeries.o1;
            m = this.parentSeries.a0.a$h.item(b.aa);
        }
        else if (b == this.bh) {
            l = this.parentSeries.nd;
            m = typeCast(CategorySeriesView.$, this.parentSeries.bh);
        }
        else {
            l = this.parentSeries.nb;
            m = this.parentSeries.nj;
        }
        var n = m.cn.d;
        var o = typeCast(ISortingAxis_$type, f);
        if (o != null && o.i$b.count != this.bz.count) {
            return;
        }
        var p = this.preferredCategoryMode(f);
        if (p == 0 && f.categoryMode != 0) {
            p = 1;
        }
        var q = 0;
        switch (p) {
            case 0:
                q = 0;
                break;
            case 1:
                q = 0.5 * f.getCategorySize(c, d, e);
                break;
            case 2:
                var r = this.fh;
                q = f.getGroupCenter(this.fh, c, d, e);
                break;
        }
        if (f.ca) {
            q = -q;
        }
        var s = function (t) { return Math.abs(_this.parentSeries.o0[t]) + _this.parentSeries.oz[t]; };
        var t = function (u) { return u; };
        var u = function (v) {
            var w = _this.valueColumn.item(v);
            if (isNaN_(w) || isInfinity(w)) {
                w = 0;
            }
            if (typeCast(IStacked100Series_$type, _this.parentSeries) !== null) {
                if (s(v) == 0) {
                    return 0;
                }
                return w < 0 ? (_this.logicalSeriesLink.ad._inner[v] + w) / s(v) * 100 : (_this.logicalSeriesLink.ac._inner[v] + w) / s(v) * 100;
            }
            return w < 0 ? _this.logicalSeriesLink.ad._inner[v] + w : _this.logicalSeriesLink.ac._inner[v] + w;
        };
        var v = b.cn.d;
        var w = this.qn == 0 ? NaN : 0;
        if (f != null && typeCast(ISortingAxis_$type, f) !== null && f.i$b != null) {
            var x_1 = new SafeSortedReadOnlyDoubleCollection(0, this.valueColumn, f.i$b);
            u = function (y) { return x_1.item(y); };
        }
        this.ql = Numeric.c(this.valueColumn.count, t, u, w, w);
        var y = m.cn.e;
        var z = m.cn.f;
        var aa = truncate(Math.ceil(d.width / (z - y)));
        var ab = new CollisionAvoider();
        if (o != null) {
            this.qz(a, c, d, f, g, b);
            return;
        }
        var ac = 0;
        var ad = 0;
        for (var ae = y; ae < z + 1; ++ae) {
            if (ae >= this.valueColumn.count) {
                break;
            }
            var af = null;
            if (v == 1) {
                if (ae >= (this.valueColumn.count - 1)) {
                    if (j && a.f.count > 0 && this.qo(a, a.f._inner[a.f.count - 1], ab, Math.min(ae * v, this.bz.count - 1), k, b, ac - 1)) {
                        ++k;
                    }
                    break;
                }
                var ag = t(ae);
                var ah = t(ae + 1);
                var ai = u(ae);
                var aj = u(ae + 1);
                var ak = ah - ag;
                var al = this.ql[ae];
                var am = this.ql[ae + 1];
                var an = f.dy(ag, h) + q;
                var ao = g.dy(ai, i);
                a.f.add([an, ao, ao]);
                ac++;
                ad = ac;
                for (var ap = 1; ap < aa; ++ap) {
                    var aq = ag + ak * ap / aa;
                    var ar = (ah - aq) / ak;
                    var as = (aq - ag) / ak;
                    var at = ar * ai + as * aj + ((ar * ar * ar - ar) * al + (as * as * as - as) * am) * (ak * ak) / 6;
                    aq = f.dy(aq, h) + q;
                    at = g.dy(at, i);
                    a.f.add([aq, at, at]);
                    ac++;
                }
                if (j) {
                    af = [an, ao, ao];
                }
            }
            else {
                af = b.cn.getBucket(ae);
                if (!isNaN_(af[0])) {
                    af[0] = f.dy(af[0], h) + q;
                    af[1] = g.dy(af[1], i);
                    af[2] = g.dy(af[2], i);
                    a.f.add(af);
                }
            }
            if (j && this.qo(a, af, ab, Math.min(ae * v, this.bz.count - 1), k, b, ad - 1)) {
                ++k;
            }
        }
        b.cq.count = k;
    };
    SplineFragmentBase.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
        switch (b) {
            case "ActualBrush":
                if (this.logicalSeriesLink != null) {
                    this.logicalSeriesLink.fp = this.k4;
                }
                break;
        }
    };
    Object.defineProperty(SplineFragmentBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    SplineFragmentBase.$t = markType(SplineFragmentBase, 'SplineFragmentBase', SplineSeriesBase.$);
    return SplineFragmentBase;
}(SplineSeriesBase));
export { SplineFragmentBase };
/**
 * @hidden
 */
var SplineAreaFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(SplineAreaFragment, _super);
    function SplineAreaFragment() {
        var _this = _super.call(this) || this;
        _this.q4 = null;
        _this.ab = SplineAreaFragment.$;
        return _this;
    }
    SplineAreaFragment.prototype.bf = function () {
        return new SplineAreaFragmentView(this);
    };
    SplineAreaFragment.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.q0 = typeCast(SplineAreaFragmentView.$, a);
    };
    SplineAreaFragment.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.je(false);
    };
    SplineAreaFragment.prototype.get_ck = function () {
        return true;
    };
    SplineAreaFragment.prototype.q2 = function (a, b) {
        var c = this.q0.c9.ak;
        if (this.dj(a, c)) {
            return true;
        }
        var d = this.q0.da.ak;
        if (this.dj(a, d)) {
            return true;
        }
        return false;
    };
    SplineAreaFragment.prototype.dh = function (a, b) {
        if (this.q1(a, b)) {
            return true;
        }
        if (this.q2(a, b)) {
            return true;
        }
        if (this.l5(a, b)) {
            return true;
        }
        return false;
    };
    SplineAreaFragment.prototype.q1 = function (a, b) {
        var c = this.q0.db.ak;
        if (this.di(a, b, c)) {
            return true;
        }
        var d = this.q0.dc.ak;
        if (this.di(a, b, d)) {
            return true;
        }
        return false;
    };
    SplineAreaFragment.prototype.hw = function (a, b) {
        _super.prototype.hw.call(this, a, b);
        var c = b;
        c.c8();
    };
    SplineAreaFragment.prototype.os = function (a, b) {
        var _this = this;
        _super.prototype.os.call(this, a, b);
        this.qv.a = typeCast(ISortingAxis_$type, this.xAxis) !== null ? true : false;
        var c = typeCast(SplineAreaFragmentView.$, b);
        var d = b.cn.d;
        this.qv.i(c.c9, c.db, c.da, c.dc, a.f.count, a.f, true, d, this.eu, function (e, f, g, h, i) { return _this.q3(e, a.f, b); }, 1);
        c.c9._opacity = this.d6;
        c.da._opacity = 0.5 * this.d6;
    };
    SplineAreaFragment.prototype.jg = function (a, b) {
        _super.prototype.jg.call(this, a, b);
    };
    SplineAreaFragment.prototype.q3 = function (a, b, c) {
        var d = this.pb(c);
        var e = d;
        var f = this.logicalSeriesLink.y;
        var g = f ? this.parentSeries.o7.e : this.parentSeries.o7.d;
        var h = g.indexOf(this);
        if (a.count == 0) {
            return;
        }
        if (h == -1) {
            return;
        }
        var i = false;
        for (var j = h; j >= 0; j--) {
            if (i) {
                break;
            }
            if (j == 0) {
                a.add({ $type: Point_$type, x: a._inner[a.count - 1].x, y: e });
                a.add({ $type: Point_$type, x: a._inner[0].x, y: e });
                break;
            }
            var k = typeCast(SplineFragmentBase.$, g._inner[j - 1]);
            if (k != null && k.qv != null && k.qv.o.count > 0 && this.bi != null && k.dw(this.bi.br, this.bi.bs, this.bi)) {
                i = true;
                for (var l = k.qv.o.count - 1; l >= 0; l--) {
                    a.add(k.qv.o._inner[l]);
                }
            }
        }
    };
    SplineAreaFragment.prototype.pb = function (a) {
        var b = 0;
        var c = a.bs;
        var d = a.br;
        var e = this.getEffectiveViewport1(a);
        var f = new ScalerParams(0, c, d, this.yAxis.ca, e);
        if (!c.isEmpty && !d.isEmpty && this.yAxis != null) {
            b = this.yAxis.dy(0, f);
        }
        return b;
    };
    SplineAreaFragment.prototype.jo = function () {
        var a = (typeCast(XamDataChart.$, this.bs));
        if (a != null) {
            this.d6 = isNaN_(this.d7) ? this.parentSeries.d6 : this.d7;
        }
    };
    Object.defineProperty(SplineAreaFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    SplineAreaFragment.$t = markType(SplineAreaFragment, 'SplineAreaFragment', SplineFragmentBase.$);
    return SplineAreaFragment;
}(SplineFragmentBase));
export { SplineAreaFragment };
/**
 * @hidden
 */
var SplineFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(SplineFragment, _super);
    function SplineFragment() {
        var _this = _super.call(this) || this;
        _this.ab = SplineFragment.$;
        return _this;
    }
    SplineFragment.prototype.bf = function () {
        return new SplineFragmentView(this);
    };
    SplineFragment.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.q0 = a;
    };
    SplineFragment.prototype.q2 = function (a, b) {
        var c = this.q0.c9.ak;
        if (this.dj(a, c)) {
            return true;
        }
        return false;
    };
    SplineFragment.prototype.get_ck = function () {
        return true;
    };
    SplineFragment.prototype.dh = function (a, b) {
        if (this.q1(a, b)) {
            return true;
        }
        if (this.q2(a, b)) {
            return true;
        }
        if (this.l5(a, b)) {
            return true;
        }
        return false;
    };
    SplineFragment.prototype.q1 = function (a, b) {
        var c = this.q0.da.ak;
        if (this.di(a, b, c)) {
            return true;
        }
        var d = this.q0.db.ak;
        if (this.di(a, b, d)) {
            return true;
        }
        return false;
    };
    SplineFragment.prototype.hw = function (a, b) {
        _super.prototype.hw.call(this, a, b);
        var c = b;
        c.c8();
    };
    SplineFragment.prototype.os = function (a, b) {
        _super.prototype.os.call(this, a, b);
        this.qv.a = typeCast(ISortingAxis_$type, this.xAxis) !== null ? true : false;
        var c = typeCast(SplineFragmentView.$, b);
        var d = c.cn.d;
        this.qv.m(c.da, c.c9, c.db, a.f.count, a.f, true, 1, this.o0(a.f, a.f.count - 1, b.br, b.bs), d, this.eu);
    };
    Object.defineProperty(SplineFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    SplineFragment.$t = markType(SplineFragment, 'SplineFragment', SplineFragmentBase.$);
    return SplineFragment;
}(SplineFragmentBase));
export { SplineFragment };
/**
 * @hidden
 */
var StackedSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedSeriesBase, _super);
    function StackedSeriesBase() {
        var _this = _super.call(this) || this;
        _this._series = null;
        _this.seriesCreated = null;
        _this.pg = 0;
        _this.pf = 0;
        _this.oz = null;
        _this.o0 = null;
        _this.o7 = null;
        _this.o4 = null;
        _this.pc = new Dictionary$2(String_$type, Boolean_$type, 0);
        _this.o1 = null;
        _this.series = new StackedSeriesCollection();
        var a = _this.series;
        a.collectionResetting = delegateCombine(a.collectionResetting, runOn(_this, _this.ps));
        var b = _this.series;
        b.collectionChanged = delegateCombine(b.collectionChanged, runOn(_this, _this.pr));
        _this.nf = new StackedSeriesFramePreparer(1, _this, _this.o8, _this, _this, _this.o8.cn);
        _this.o7 = new StackedSeriesManager(_this);
        _this.o4 = new StackedSeriesCollection();
        var c = _this.o4;
        c.collectionChanged = delegateCombine(c.collectionChanged, runOn(_this, _this.pr));
        var d = _this.o4;
        d.collectionResetting = delegateCombine(d.collectionResetting, runOn(_this, _this.pm));
        return _this;
    }
    StackedSeriesBase.prototype.get_cv = function () {
        return false;
    };
    StackedSeriesBase.prototype.getHostReferenceValue = function () {
        return this.eh();
    };
    StackedSeriesBase.prototype.bf = function () {
        return new StackedSeriesView(this);
    };
    StackedSeriesBase.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.o8 = a;
    };
    StackedSeriesBase.prototype.iw = function (a, b) {
        var e_1, _a;
        _super.prototype.iw.call(this, a, b);
        try {
            for (var _b = tslib_1.__values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                c.visualSeriesLink.bi.br = b;
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
    };
    Object.defineProperty(StackedSeriesBase.prototype, "series", {
        get: function () {
            return this._series;
        },
        set: function (a) {
            this._series = a;
        },
        enumerable: true,
        configurable: true
    });
    StackedSeriesBase.prototype.fg = function () {
        if (this.series == null) {
            return -1;
        }
        return this.series.count;
    };
    StackedSeriesBase.prototype.h8 = function (a) {
        for (var b = 0; b < this.o7.f.count; b++) {
            var c = this.o7.f._inner[b];
            if (!a(c)) {
                break;
            }
        }
    };
    StackedSeriesBase.prototype.get_isStacked = function () {
        return true;
    };
    Object.defineProperty(StackedSeriesBase.prototype, "o3", {
        get: function () {
            return this.o9 ? this.o4 : this.series;
        },
        enumerable: true,
        configurable: true
    });
    StackedSeriesBase.prototype.pm = function (a, b) {
        var e_2, _a;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.o4)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (this.o7 != null && this.o7.c.contains(c)) {
                    c.parentSeries = null;
                    this.o7.c.remove(c);
                }
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
    };
    StackedSeriesBase.prototype.ps = function (a, b) {
        var e_3, _a;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (this.o7 != null && this.o7.c.contains(c)) {
                    c.parentSeries = null;
                    this.o7.c.remove(c);
                }
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
    };
    StackedSeriesBase.prototype.pr = function (a, b) {
        var e_4, _a, e_5, _b;
        if (b.oldItems != null) {
            try {
                for (var _c = tslib_1.__values(fromEn(b.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var c = _d.value;
                    if (this.o7 != null && this.o7.c.contains(c)) {
                        c.parentSeries = null;
                        this.o7.c.remove(c);
                    }
                }
            }
            catch (e_4_1) {
                e_4 = { error: e_4_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_4)
                        throw e_4.error;
                }
            }
        }
        if (b.newItems != null) {
            var d = b.newStartingIndex;
            try {
                for (var _e = tslib_1.__values(fromEn(b.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var e = _f.value;
                    if (this.o7 != null && !this.o7.c.contains(e)) {
                        e.parentSeries = this;
                        e.c1();
                        e.dg();
                        e.dh();
                        e.dp();
                        e.di();
                        e.dj();
                        e.cx();
                        e.cy();
                        e.cz();
                        e.c0();
                        e.c2();
                        e.c3();
                        e.c4();
                        e.c5();
                        e.c9();
                        e.da();
                        e.c6();
                        e.c7();
                        e.c8();
                        e.c9();
                        e.db();
                        e.dc();
                        e.dd();
                        e.cw();
                        e.de();
                        e.df();
                        e.dk();
                        e.dl();
                        e.dm();
                        e.dn();
                        e.dq();
                        if (!this.o9) {
                            this.o7.c.insert(d, e);
                            d++;
                        }
                    }
                }
            }
            catch (e_5_1) {
                e_5 = { error: e_5_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_5)
                        throw e_5.error;
                }
            }
        }
        if (!this.o9) {
            this.pt();
        }
    };
    StackedSeriesBase.prototype.jl = function (a) {
        this.bq.bn.c2(a, true, false);
    };
    StackedSeriesBase.prototype.ng = function (a) {
        if (a != null && a.n) {
            if (a.m) {
                return new StackedSeriesFramePreparer(1, typeCast(IIsCategoryBased_$type, this), typeCast(ISupportsMarkers_$type, a), a, this, a.cn);
            }
            else {
                var b = typeCast(CategorySeriesView.$, this.bh);
                return new StackedSeriesFramePreparer(1, this, typeCast(ISupportsMarkers_$type, b), this.bs.bn.m, this, b.cn);
            }
        }
        else {
            return this.nf;
        }
    };
    StackedSeriesBase.prototype.op = function (a, b) {
        a.u();
        this.pp();
        this.ng(b).d(a, b);
    };
    StackedSeriesBase.prototype.hw = function (a, b) {
        var e_6, _a;
        _super.prototype.hw.call(this, a, b);
        try {
            for (var _b = tslib_1.__values(fromEnum(this.o3)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (c.visualSeriesLink != null) {
                    c.visualSeriesLink.hw(a, c.visualSeriesLink.bi);
                }
            }
        }
        catch (e_6_1) {
            e_6 = { error: e_6_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_6)
                    throw e_6.error;
            }
        }
    };
    StackedSeriesBase.prototype.pn = function () {
        this.pp();
    };
    StackedSeriesBase.prototype.pt = function () {
        var a = this.fetchXAxis();
        if (a != null) {
            a.co(true);
        }
        var b = this.fetchYAxis();
        if (b != null) {
            b.co(true);
        }
    };
    StackedSeriesBase.prototype.c9 = function (a) {
        var b = this.bz != null ? this.bz.indexOf(a) : -1;
        var c = this.bs != null ? this.bs.mr : Rect.empty;
        c = c.copy();
        var d = this.bi.br;
        var e = new Rect(0, 0, 0, 1, 1);
        var f = this.lt(this.bi);
        if (b >= 0 && Rect.l_op_Inequality(c, null) && Rect.l_op_Inequality(d, null)) {
            var g = this.fetchXAxis();
            if (g != null) {
                var h = new ScalerParams(0, e, e, g.ca, f);
                var i = g.dy(b, h);
                if (i < c.left + 0.1 * c.width) {
                    i = i + 0.4 * c.width;
                }
                if (i > c.right - 0.1 * c.width) {
                    i = i - 0.4 * c.width;
                }
                c.x = i - 0.5 * c.width;
            }
            var j = this.fetchYAxis();
            if (j != null && this.oz != null && b < this.oz.length) {
                var k = new ScalerParams(0, e, e, j.ca, f);
                var l = j.dy(this.oz[b], k);
                var m = j.dy(this.o0[b], k);
                if (!isNaN_(l) && !isNaN_(m)) {
                    var n = Math.abs(m - l);
                    if (c.height < n) {
                        c.height = n;
                        c.y = Math.min(m, l);
                    }
                    else {
                        if (m < c.top + 0.1 * c.height) {
                            m = m + 0.4 * c.height;
                        }
                        if (m > c.bottom - 0.1 * c.height) {
                            m = m - 0.4 * c.height;
                        }
                        c.y = m - 0.5 * c.height;
                    }
                }
            }
            this.bn.ap(this.bs, c, true);
        }
        return b >= 0;
    };
    StackedSeriesBase.prototype.an = function (a) {
        if (this.o0 == null || this.o0.length == 0 || this.oz == null || this.oz.length == 0) {
            return null;
        }
        if (a == this.fetchXAxis()) {
            var b = Math.min(this.o0.length, this.oz.length);
            return new AxisRange(0, b - 1);
        }
        if (a == this.fetchYAxis()) {
            return new AxisRange(this.pg, this.pf);
        }
        return null;
    };
    StackedSeriesBase.prototype.l4 = function () {
        return false;
    };
    StackedSeriesBase.prototype.hz = function (a, b, c, d) {
        this.pp();
        this.n5();
        this.je(false);
    };
    StackedSeriesBase.prototype.o2 = function () {
        return this.o8;
    };
    StackedSeriesBase.prototype.pd = function () {
        var a = 0;
        var b = this.bi.bs;
        var c = this.bi.br;
        var d = this.getEffectiveViewport1(this.bi);
        var e = typeCast(NumericYAxis.$, this.fetchYAxis());
        if (!b.isEmpty && !c.isEmpty && e != null) {
            var f = new ScalerParams(0, b, c, e.ca, d);
            a = e.dy(e.kl, f);
        }
        return a;
    };
    StackedSeriesBase.prototype.pe = function () {
        var a = typeCast(NumericYAxis.$, this.fetchYAxis());
        if (a != null) {
            return a.kl;
        }
        return 0;
    };
    StackedSeriesBase.prototype.pi = function (a) {
        return this.fh < 0 || this.o3 == null || this.o3.count == 0 ? -1 : this.fh + this.o3.indexOf(a);
    };
    StackedSeriesBase.prototype.ph = function (a) {
        var b = this.bs != null ? this.bs.mr : Rect.empty;
        var c = this.bi.br;
        var d = this.getEffectiveViewport1(this.bi);
        var e = typeCast(CategoryAxisBase.$, this.fetchXAxis());
        var f = -1;
        if (e != null && !b.isEmpty && !c.isEmpty) {
            var g = new ScalerParams(0, b, c, e.ca, d);
            var h = this.lr(this.bi);
            var i = e.d1(h.left, g);
            var j = e.d1(h.right, g);
            var k = (a.x - b.left) / b.width;
            var l = i + (k * (j - i));
            if (e.categoryMode != 0) {
                l -= 0.5;
            }
            var m = truncate(Math.round(l));
            f = m;
        }
        return f;
    };
    StackedSeriesBase.prototype.pb = function (a, b, c, d) {
        var e = true;
        var f = typeCast(CategoryAxisBase.$, this.fetchXAxis());
        var g = typeCast(NumericYAxis.$, this.fetchYAxis());
        if (!d.l() || c.isEmpty || b.isEmpty || f == null || f.itemsSource == null || g == null || this.bz == null || f.bh == null || g.bh == null || g.kb == g.ka) {
            e = false;
        }
        var h = d;
        var i = h.cn.d;
        if (a.valueColumn == null || a.valueColumn.count == 0 || i < 1 || a._visibility != 0) {
            e = false;
        }
        return e;
    };
    StackedSeriesBase.prototype.po = function () {
        var e_7, _a;
        if (this.bs == null || this.o7 == null) {
            return;
        }
        if (!this.o9) {
            this.o4.clear();
            try {
                for (var _b = tslib_1.__values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    if (!this.o7.c.contains(a)) {
                        this.o7.c.add(a);
                    }
                }
            }
            catch (e_7_1) {
                e_7 = { error: e_7_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_7)
                        throw e_7.error;
                }
            }
            this.pt();
            return;
        }
    };
    StackedSeriesBase.prototype.os = function (a, b) {
        _super.prototype.os.call(this, a, b);
        this.o7.h();
    };
    StackedSeriesBase.prototype.pq = function (a, b, c) {
    };
    StackedSeriesBase.prototype.pp = function () {
        var e_8, _a;
        if (this.bz == null) {
            return;
        }
        var a = this.bz.count;
        this.oz = new Array(a);
        this.o0 = new Array(a);
        for (var b = 0; b < a; b++) {
            this.oz[b] = 0;
            this.o0[b] = 0;
        }
        this.pg = Number.POSITIVE_INFINITY;
        this.pf = Number.NEGATIVE_INFINITY;
        var c = 0;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.o3)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                this.bz.deregisterColumn(d.p);
                d.p = this.bw(d.cq);
                if (d.visualSeriesLink != null) {
                    d.visualSeriesLink.pa = true;
                    d.visualSeriesLink.valueColumn = d.p;
                    d.visualSeriesLink.pa = false;
                }
                d.y = true;
                if (d.p != null) {
                    d.ac.clear();
                    d.ad.clear();
                    for (var e = 0; e < d.p.count; e++) {
                        var f = d.p.item(e);
                        if (f < c) {
                            d.ac.add(c);
                            d.ad.add(this.o0[e]);
                            this.o0[e] = this.o0[e] + f;
                            if (d.y) {
                                d.y = false;
                            }
                        }
                        else if (f >= c) {
                            d.ac.add(this.oz[e]);
                            d.ad.add(c);
                            this.oz[e] = this.oz[e] + f;
                        }
                        else if (isNaN_(f) || isInfinity(f)) {
                            d.ac.add(this.oz[e]);
                            d.ad.add(this.o0[e]);
                        }
                    }
                }
            }
        }
        catch (e_8_1) {
            e_8 = { error: e_8_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_8)
                    throw e_8.error;
            }
        }
        for (var g = 0; g < a; g++) {
            this.pg = Math.min(this.pg, this.o0[g]);
            this.pf = Math.max(this.pf, this.oz[g]);
        }
    };
    StackedSeriesBase.prototype.i0 = function (a, b, c, d) {
        var e_9, _a, e_10, _b, e_11, _c, e_12, _d, e_13, _e, e_14, _f, e_15, _g, e_16, _h, e_17, _j, e_18, _k, e_19, _l, e_20, _m, e_21, _o, e_22, _p, e_23, _q, e_24, _r, e_25, _s, e_26, _t, e_27, _u, e_28, _v, e_29, _w, e_30, _x, e_31, _y, e_32, _z, e_33, _0, e_34, _1, e_35, _2, e_36, _3, e_37, _4, e_38, _5;
        _super.prototype.i0.call(this, a, b, c, d);
        switch (b) {
            case "SeriesViewer":
                if (c != null && d == null) {
                    this.h0(this.fetchXAxis());
                    this.h0(this.fetchYAxis());
                }
                if (c == null && d != null) {
                    this.i5(this.fetchXAxis());
                    this.i5(this.fetchYAxis());
                }
                if (this.o3 != null) {
                    try {
                        for (var _6 = tslib_1.__values(fromEnum(this.o3)), _7 = _6.next(); !_7.done; _7 = _6.next()) {
                            var e = _7.value;
                            e.o = this.bs;
                        }
                    }
                    catch (e_9_1) {
                        e_9 = { error: e_9_1 };
                    }
                    finally {
                        try {
                            if (_7 && !_7.done && (_a = _6.return))
                                _a.call(_6);
                        }
                        finally {
                            if (e_9)
                                throw e_9.error;
                        }
                    }
                    this.je(false);
                }
                break;
            case "ItemsSource":
                if (this.o3 != null) {
                    try {
                        for (var _8 = tslib_1.__values(fromEnum(this.o3)), _9 = _8.next(); !_9.done; _9 = _8.next()) {
                            var f = _9.value;
                            if (f.visualSeriesLink != null) {
                                f.visualSeriesLink.itemsSource = d;
                            }
                        }
                    }
                    catch (e_10_1) {
                        e_10 = { error: e_10_1 };
                    }
                    finally {
                        try {
                            if (_9 && !_9.done && (_b = _8.return))
                                _b.call(_8);
                        }
                        finally {
                            if (e_10)
                                throw e_10.error;
                        }
                    }
                }
                break;
            case "FastItemsSource":
                if (this.o9) {
                    this.po();
                }
                if (!this.n5()) {
                    this.o8.cn.g(this.eu);
                }
                this.je(false);
                break;
            case StackedSeriesBase.$$p[0]:
                this.po();
                break;
            case StackedSeriesBase.$$p[1]:
                if (this.bs != null) {
                    this.bs.ik(this.o7.f);
                }
                break;
            case StackedSeriesBase.$$p[2]:
                try {
                    for (var _10 = tslib_1.__values(fromEnum(this.o3)), _11 = _10.next(); !_11.done; _11 = _10.next()) {
                        var g = _11.value;
                        g.dq();
                    }
                }
                catch (e_11_1) {
                    e_11 = { error: e_11_1 };
                }
                finally {
                    try {
                        if (_11 && !_11.done && (_c = _10.return))
                            _c.call(_10);
                    }
                    finally {
                        if (e_11)
                            throw e_11.error;
                    }
                }
                break;
            case "Brush":
                try {
                    for (var _12 = tslib_1.__values(fromEnum(this.o3)), _13 = _12.next(); !_13.done; _13 = _12.next()) {
                        var h = _13.value;
                        h.cx();
                    }
                }
                catch (e_12_1) {
                    e_12 = { error: e_12_1 };
                }
                finally {
                    try {
                        if (_13 && !_13.done && (_d = _12.return))
                            _d.call(_12);
                    }
                    finally {
                        if (e_12)
                            throw e_12.error;
                    }
                }
                break;
            case "DashArray":
                try {
                    for (var _14 = tslib_1.__values(fromEnum(this.o3)), _15 = _14.next(); !_15.done; _15 = _14.next()) {
                        var i = _15.value;
                        i.cy();
                    }
                }
                catch (e_13_1) {
                    e_13 = { error: e_13_1 };
                }
                finally {
                    try {
                        if (_15 && !_15.done && (_e = _14.return))
                            _e.call(_14);
                    }
                    finally {
                        if (e_13)
                            throw e_13.error;
                    }
                }
                break;
            case "DashCap":
                try {
                    for (var _16 = tslib_1.__values(fromEnum(this.o3)), _17 = _16.next(); !_17.done; _17 = _16.next()) {
                        var j = _17.value;
                        j.cz();
                    }
                }
                catch (e_14_1) {
                    e_14 = { error: e_14_1 };
                }
                finally {
                    try {
                        if (_17 && !_17.done && (_f = _16.return))
                            _f.call(_16);
                    }
                    finally {
                        if (e_14)
                            throw e_14.error;
                    }
                }
                break;
            case "IsDropShadowEnabled":
                try {
                    for (var _18 = tslib_1.__values(fromEnum(this.o3)), _19 = _18.next(); !_19.done; _19 = _18.next()) {
                        var k = _19.value;
                        k.c1();
                    }
                }
                catch (e_15_1) {
                    e_15 = { error: e_15_1 };
                }
                finally {
                    try {
                        if (_19 && !_19.done && (_g = _18.return))
                            _g.call(_18);
                    }
                    finally {
                        if (e_15)
                            throw e_15.error;
                    }
                }
                break;
            case "ShadowBlur":
                try {
                    for (var _20 = tslib_1.__values(fromEnum(this.o3)), _21 = _20.next(); !_21.done; _21 = _20.next()) {
                        var l = _21.value;
                        l.dg();
                    }
                }
                catch (e_16_1) {
                    e_16 = { error: e_16_1 };
                }
                finally {
                    try {
                        if (_21 && !_21.done && (_h = _20.return))
                            _h.call(_20);
                    }
                    finally {
                        if (e_16)
                            throw e_16.error;
                    }
                }
                break;
            case "ShadowColor":
                try {
                    for (var _22 = tslib_1.__values(fromEnum(this.o3)), _23 = _22.next(); !_23.done; _23 = _22.next()) {
                        var m = _23.value;
                        m.dh();
                    }
                }
                catch (e_17_1) {
                    e_17 = { error: e_17_1 };
                }
                finally {
                    try {
                        if (_23 && !_23.done && (_j = _22.return))
                            _j.call(_22);
                    }
                    finally {
                        if (e_17)
                            throw e_17.error;
                    }
                }
                break;
            case "UseSingleShadow":
                try {
                    for (var _24 = tslib_1.__values(fromEnum(this.o3)), _25 = _24.next(); !_25.done; _25 = _24.next()) {
                        var n = _25.value;
                        n.dp();
                    }
                }
                catch (e_18_1) {
                    e_18 = { error: e_18_1 };
                }
                finally {
                    try {
                        if (_25 && !_25.done && (_k = _24.return))
                            _k.call(_24);
                    }
                    finally {
                        if (e_18)
                            throw e_18.error;
                    }
                }
                break;
            case "ShadowOffsetX":
                try {
                    for (var _26 = tslib_1.__values(fromEnum(this.o3)), _27 = _26.next(); !_27.done; _27 = _26.next()) {
                        var o = _27.value;
                        o.di();
                    }
                }
                catch (e_19_1) {
                    e_19 = { error: e_19_1 };
                }
                finally {
                    try {
                        if (_27 && !_27.done && (_l = _26.return))
                            _l.call(_26);
                    }
                    finally {
                        if (e_19)
                            throw e_19.error;
                    }
                }
                break;
            case "ShadowOffsetY":
                try {
                    for (var _28 = tslib_1.__values(fromEnum(this.o3)), _29 = _28.next(); !_29.done; _29 = _28.next()) {
                        var p = _29.value;
                        p.dj();
                    }
                }
                catch (e_20_1) {
                    e_20 = { error: e_20_1 };
                }
                finally {
                    try {
                        if (_29 && !_29.done && (_m = _28.return))
                            _m.call(_28);
                    }
                    finally {
                        if (e_20)
                            throw e_20.error;
                    }
                }
                break;
            case "EndCap":
                try {
                    for (var _30 = tslib_1.__values(fromEnum(this.o3)), _31 = _30.next(); !_31.done; _31 = _30.next()) {
                        var q = _31.value;
                        q.c0();
                    }
                }
                catch (e_21_1) {
                    e_21 = { error: e_21_1 };
                }
                finally {
                    try {
                        if (_31 && !_31.done && (_o = _30.return))
                            _o.call(_30);
                    }
                    finally {
                        if (e_21)
                            throw e_21.error;
                    }
                }
                break;
            case "IsHitTestVisible":
                try {
                    for (var _32 = tslib_1.__values(fromEnum(this.o3)), _33 = _32.next(); !_33.done; _33 = _32.next()) {
                        var r = _33.value;
                        r.c2();
                    }
                }
                catch (e_22_1) {
                    e_22 = { error: e_22_1 };
                }
                finally {
                    try {
                        if (_33 && !_33.done && (_p = _32.return))
                            _p.call(_32);
                    }
                    finally {
                        if (e_22)
                            throw e_22.error;
                    }
                }
                break;
            case "LegendItemBadgeTemplate":
                try {
                    for (var _34 = tslib_1.__values(fromEnum(this.o3)), _35 = _34.next(); !_35.done; _35 = _34.next()) {
                        var s = _35.value;
                        s.c3();
                    }
                }
                catch (e_23_1) {
                    e_23 = { error: e_23_1 };
                }
                finally {
                    try {
                        if (_35 && !_35.done && (_q = _34.return))
                            _q.call(_34);
                    }
                    finally {
                        if (e_23)
                            throw e_23.error;
                    }
                }
                break;
            case "LegendItemTemplate":
                try {
                    for (var _36 = tslib_1.__values(fromEnum(this.o3)), _37 = _36.next(); !_37.done; _37 = _36.next()) {
                        var t = _37.value;
                        t.c4();
                    }
                }
                catch (e_24_1) {
                    e_24 = { error: e_24_1 };
                }
                finally {
                    try {
                        if (_37 && !_37.done && (_r = _36.return))
                            _r.call(_36);
                    }
                    finally {
                        if (e_24)
                            throw e_24.error;
                    }
                }
                break;
            case "LegendItemVisibility":
                try {
                    for (var _38 = tslib_1.__values(fromEnum(this.o3)), _39 = _38.next(); !_39.done; _39 = _38.next()) {
                        var u = _39.value;
                        u.c5();
                    }
                }
                catch (e_25_1) {
                    e_25 = { error: e_25_1 };
                }
                finally {
                    try {
                        if (_39 && !_39.done && (_s = _38.return))
                            _s.call(_38);
                    }
                    finally {
                        if (e_25)
                            throw e_25.error;
                    }
                }
                break;
            case "MarkerTemplate":
                try {
                    for (var _40 = tslib_1.__values(fromEnum(this.o3)), _41 = _40.next(); !_41.done; _41 = _40.next()) {
                        var v = _41.value;
                        v.c9();
                    }
                }
                catch (e_26_1) {
                    e_26 = { error: e_26_1 };
                }
                finally {
                    try {
                        if (_41 && !_41.done && (_t = _40.return))
                            _t.call(_40);
                    }
                    finally {
                        if (e_26)
                            throw e_26.error;
                    }
                }
                break;
            case "MarkerType":
                try {
                    for (var _42 = tslib_1.__values(fromEnum(this.o3)), _43 = _42.next(); !_43.done; _43 = _42.next()) {
                        var w = _43.value;
                        w.da();
                    }
                }
                catch (e_27_1) {
                    e_27 = { error: e_27_1 };
                }
                finally {
                    try {
                        if (_43 && !_43.done && (_u = _42.return))
                            _u.call(_42);
                    }
                    finally {
                        if (e_27)
                            throw e_27.error;
                    }
                }
                break;
            case "MarkerBrush":
                try {
                    for (var _44 = tslib_1.__values(fromEnum(this.o3)), _45 = _44.next(); !_45.done; _45 = _44.next()) {
                        var x = _45.value;
                        x.c6();
                    }
                }
                catch (e_28_1) {
                    e_28 = { error: e_28_1 };
                }
                finally {
                    try {
                        if (_45 && !_45.done && (_v = _44.return))
                            _v.call(_44);
                    }
                    finally {
                        if (e_28)
                            throw e_28.error;
                    }
                }
                break;
            case "MarkerOutline":
                try {
                    for (var _46 = tslib_1.__values(fromEnum(this.o3)), _47 = _46.next(); !_47.done; _47 = _46.next()) {
                        var y = _47.value;
                        y.c7();
                    }
                }
                catch (e_29_1) {
                    e_29 = { error: e_29_1 };
                }
                finally {
                    try {
                        if (_47 && !_47.done && (_w = _46.return))
                            _w.call(_46);
                    }
                    finally {
                        if (e_29)
                            throw e_29.error;
                    }
                }
                break;
            case "MarkerStyle":
                try {
                    for (var _48 = tslib_1.__values(fromEnum(this.o3)), _49 = _48.next(); !_49.done; _49 = _48.next()) {
                        var z = _49.value;
                        z.c8();
                    }
                }
                catch (e_30_1) {
                    e_30 = { error: e_30_1 };
                }
                finally {
                    try {
                        if (_49 && !_49.done && (_x = _48.return))
                            _x.call(_48);
                    }
                    finally {
                        if (e_30)
                            throw e_30.error;
                    }
                }
                break;
            case "Opacity":
                try {
                    for (var _50 = tslib_1.__values(fromEnum(this.o3)), _51 = _50.next(); !_51.done; _51 = _50.next()) {
                        var aa = _51.value;
                        aa.db();
                    }
                }
                catch (e_31_1) {
                    e_31 = { error: e_31_1 };
                }
                finally {
                    try {
                        if (_51 && !_51.done && (_y = _50.return))
                            _y.call(_50);
                    }
                    finally {
                        if (e_31)
                            throw e_31.error;
                    }
                }
                break;
            case "OpacityMask":
                try {
                    for (var _52 = tslib_1.__values(fromEnum(this.o3)), _53 = _52.next(); !_53.done; _53 = _52.next()) {
                        var ab = _53.value;
                        ab.dc();
                    }
                }
                catch (e_32_1) {
                    e_32 = { error: e_32_1 };
                }
                finally {
                    try {
                        if (_53 && !_53.done && (_z = _52.return))
                            _z.call(_52);
                    }
                    finally {
                        if (e_32)
                            throw e_32.error;
                    }
                }
                break;
            case "AreaFillOpacity":
                try {
                    for (var _54 = tslib_1.__values(fromEnum(this.o3)), _55 = _54.next(); !_55.done; _55 = _54.next()) {
                        var ac = _55.value;
                        ac.cw();
                    }
                }
                catch (e_33_1) {
                    e_33 = { error: e_33_1 };
                }
                finally {
                    try {
                        if (_55 && !_55.done && (_0 = _54.return))
                            _0.call(_54);
                    }
                    finally {
                        if (e_33)
                            throw e_33.error;
                    }
                }
                break;
            case "Outline":
                try {
                    for (var _56 = tslib_1.__values(fromEnum(this.o3)), _57 = _56.next(); !_57.done; _57 = _56.next()) {
                        var ad = _57.value;
                        ad.dd();
                    }
                }
                catch (e_34_1) {
                    e_34 = { error: e_34_1 };
                }
                finally {
                    try {
                        if (_57 && !_57.done && (_1 = _56.return))
                            _1.call(_56);
                    }
                    finally {
                        if (e_34)
                            throw e_34.error;
                    }
                }
                break;
            case "StartCap":
                try {
                    for (var _58 = tslib_1.__values(fromEnum(this.o3)), _59 = _58.next(); !_59.done; _59 = _58.next()) {
                        var ae = _59.value;
                        ae.dk();
                    }
                }
                catch (e_35_1) {
                    e_35 = { error: e_35_1 };
                }
                finally {
                    try {
                        if (_59 && !_59.done && (_2 = _58.return))
                            _2.call(_58);
                    }
                    finally {
                        if (e_35)
                            throw e_35.error;
                    }
                }
                break;
            case "Thickness":
                try {
                    for (var _60 = tslib_1.__values(fromEnum(this.o3)), _61 = _60.next(); !_61.done; _61 = _60.next()) {
                        var af = _61.value;
                        af.dl();
                    }
                }
                catch (e_36_1) {
                    e_36 = { error: e_36_1 };
                }
                finally {
                    try {
                        if (_61 && !_61.done && (_3 = _60.return))
                            _3.call(_60);
                    }
                    finally {
                        if (e_36)
                            throw e_36.error;
                    }
                }
                break;
            case "ToolTip":
                try {
                    for (var _62 = tslib_1.__values(fromEnum(this.o3)), _63 = _62.next(); !_63.done; _63 = _62.next()) {
                        var ag = _63.value;
                        ag.dm();
                    }
                }
                catch (e_37_1) {
                    e_37 = { error: e_37_1 };
                }
                finally {
                    try {
                        if (_63 && !_63.done && (_4 = _62.return))
                            _4.call(_62);
                    }
                    finally {
                        if (e_37)
                            throw e_37.error;
                    }
                }
                break;
            case "UseLightweightMarkers":
                try {
                    for (var _64 = tslib_1.__values(fromEnum(this.o3)), _65 = _64.next(); !_65.done; _65 = _64.next()) {
                        var ah = _65.value;
                        ah.dn();
                    }
                }
                catch (e_38_1) {
                    e_38 = { error: e_38_1 };
                }
                finally {
                    try {
                        if (_65 && !_65.done && (_5 = _64.return))
                            _5.call(_64);
                    }
                    finally {
                        if (e_38)
                            throw e_38.error;
                    }
                }
                break;
        }
    };
    Object.defineProperty(StackedSeriesBase.prototype, "currentCategoryMode", {
        get: function () {
            return this.preferredCategoryMode(typeCast(CategoryAxisBase.$, this.fetchXAxis()));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "scaler", {
        get: function () {
            return typeCast(ICategoryScaler_$type, this.fetchXAxis());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "yScaler", {
        get: function () {
            return typeCast(IScaler_$type, this.fetchYAxis());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "bucketizer", {
        get: function () {
            return this.nj.cn;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "currentMode2Index", {
        get: function () {
            return this.od();
        },
        enumerable: true,
        configurable: true
    });
    StackedSeriesBase.prototype.provideCollisionDetector = function () {
        return new CollisionAvoider();
    };
    StackedSeriesBase.prototype.dc = function () {
        return false;
    };
    StackedSeriesBase.prototype.get_cq = function () {
        return false;
    };
    StackedSeriesBase.prototype.jg = function (a, b) {
        var e_39, _a;
        var c = this.dl;
        _super.prototype.jg.call(this, a, b);
        if (!c) {
            this.bi.az(b);
            return;
        }
        this.bi.az(b);
        if (this.cc(this.bh)) {
            return;
        }
        try {
            for (var _b = tslib_1.__values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                d.visualSeriesLink.jg(a, b);
            }
        }
        catch (e_39_1) {
            e_39 = { error: e_39_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_39)
                    throw e_39.error;
            }
        }
        this.dl = false;
    };
    StackedSeriesBase.prototype.jd = function (a, b, c, d, e) {
        var e_40, _a;
        _super.prototype.jd.call(this, a, b, c, d, e);
        var f = this.a0.a$h.item(d);
        f.cn.g(this.eu);
        f.ay(c);
        if (this.cc(f)) {
            return;
        }
        if (this.o1 == null) {
            this.o1 = new CategoryFrame(3);
        }
        this.o1.u();
        this.pp();
        this.ng(f).d(this.o1, f);
        this.os(this.o1, f);
        try {
            for (var _b = tslib_1.__values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var g = _c.value;
                g.visualSeriesLink.jd(a, b, c, d, e);
            }
        }
        catch (e_40_1) {
            e_40 = { error: e_40_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_40)
                    throw e_40.error;
            }
        }
    };
    StackedSeriesBase.prototype.fo = function () {
        var e_41, _a;
        var a = this.a2.exportStackedVisualData(this, this.lz);
        try {
            for (var _b = tslib_1.__values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                var c = this.a2.createFragmentVisualData(this, this.lz, getInstanceType(b).typeName, b.b8);
                b.visualSeriesLink.bi.ai(c);
                this.a2.addSubSeriesVisualData(a, c);
            }
        }
        catch (e_41_1) {
            e_41 = { error: e_41_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_41)
                    throw e_41.error;
            }
        }
        this.h5(a);
        this.bi.ai(a);
        return a;
    };
    Object.defineProperty(StackedSeriesBase.prototype, "mayContainUnknowns", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    StackedSeriesBase.$t = markType(StackedSeriesBase, 'StackedSeriesBase', CategorySeries.$, [IIsCategoryBased_$type]);
    StackedSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, StackedSeriesBase, 'raisePropertyChanged', ['AutoGenerateSeries:o9:pu', [0, false], 'ReverseLegendOrder:pa:pv', [0, false], 'SeriesVisibility:px:pw', [Visibility_$type, enumGetBox(Visibility_$type, 0)]]);
    return StackedSeriesBase;
}(CategorySeries));
export { StackedSeriesBase };
/**
 * @hidden
 */
var HorizontalStackedSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(HorizontalStackedSeriesBase, _super);
    function HorizontalStackedSeriesBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HorizontalStackedSeriesBase.prototype.getOffsetValue = function () {
        return this.nf.r(this.xAxis, this.bi.bs, this.bi.br, this.getEffectiveViewport1(this.bi));
    };
    HorizontalStackedSeriesBase.prototype.getCategoryWidth = function () {
        return this.xAxis.getCategorySize(this.bi.bs, this.bi.br, this.getEffectiveViewport1(this.bi));
    };
    HorizontalStackedSeriesBase.prototype.fetchXAxis = function () {
        return this.xAxis;
    };
    HorizontalStackedSeriesBase.prototype.fetchYAxis = function () {
        return this.yAxis;
    };
    HorizontalStackedSeriesBase.prototype.ag = function () {
        return [this.fetchXAxis(), this.fetchYAxis()];
    };
    HorizontalStackedSeriesBase.prototype.n5 = function () {
        return this.yAxis != null && this.yAxis.cn();
    };
    HorizontalStackedSeriesBase.prototype.jo = function () {
        var e_42, _a;
        var a = (typeCast(XamDataChart.$, this.bs));
        if (a != null) {
            this.d6 = isNaN_(this.d7) ? a.nl.ff : this.d7;
            try {
                for (var _b = tslib_1.__values(fromEnum(this.o3)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    b.cw();
                }
            }
            catch (e_42_1) {
                e_42 = { error: e_42_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_42)
                        throw e_42.error;
                }
            }
        }
    };
    HorizontalStackedSeriesBase.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
        switch (b) {
            case HorizontalStackedSeriesBase.$$p[0]:
                if (c != d) {
                    this.h0(typeCast(Axis.$, c));
                    this.i5(typeCast(Axis.$, d));
                    this.nj.cn.g(this.eu);
                    this.je(false);
                    this.il();
                }
                break;
            case HorizontalStackedSeriesBase.$$p[1]:
                if (c != d) {
                    this.h0(typeCast(Axis.$, c));
                    this.i5(typeCast(Axis.$, d));
                    this.nj.cn.g(this.eu);
                    this.n5();
                    this.je(false);
                    this.il();
                }
                break;
        }
    };
    HorizontalStackedSeriesBase.prototype.p1 = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    HorizontalStackedSeriesBase.prototype.p0 = function (a) {
        if (typeCast(CategoryXAxis.$, a) !== null || a.b7) {
            return true;
        }
        return false;
    };
    Object.defineProperty(HorizontalStackedSeriesBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    HorizontalStackedSeriesBase.$t = markType(HorizontalStackedSeriesBase, 'HorizontalStackedSeriesBase', StackedSeriesBase.$);
    HorizontalStackedSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, HorizontalStackedSeriesBase, 'raisePropertyChanged', ['XAxis::p4', [CategoryAxisBase.$, null], 'YAxis::p5', [NumericYAxis.$, null]]);
    return HorizontalStackedSeriesBase;
}(StackedSeriesBase));
export { HorizontalStackedSeriesBase };
/**
 * @hidden
 */
var StackedAreaSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedAreaSeries, _super);
    function StackedAreaSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedAreaSeries.$;
        return _this;
    }
    StackedAreaSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.je(false);
    };
    StackedAreaSeries.prototype.an = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.bz.count - 1);
        }
        if (a == this.yAxis) {
            this.pp();
            return new AxisRange(this.pg, this.pf);
        }
        return null;
    };
    StackedAreaSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    Object.defineProperty(StackedAreaSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    StackedAreaSeries.$t = markType(StackedAreaSeries, 'StackedAreaSeries', HorizontalStackedSeriesBase.$);
    return StackedAreaSeries;
}(HorizontalStackedSeriesBase));
export { StackedAreaSeries };
/**
 * @hidden
 */
var VerticalStackedSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(VerticalStackedSeriesBase, _super);
    function VerticalStackedSeriesBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VerticalStackedSeriesBase.prototype.na = function () {
        return this.yAxis;
    };
    VerticalStackedSeriesBase.prototype.nu = function () {
        return this.xAxis;
    };
    VerticalStackedSeriesBase.prototype.getOffsetValue = function () {
        return this.nf.r(this.yAxis, this.bi.bs, this.bi.br, this.getEffectiveViewport1(this.bi));
    };
    VerticalStackedSeriesBase.prototype.getCategoryWidth = function () {
        return this.yAxis.getCategorySize(this.bi.bs, this.bi.br, this.getEffectiveViewport1(this.bi));
    };
    VerticalStackedSeriesBase.prototype.get_isVertical = function () {
        return true;
    };
    VerticalStackedSeriesBase.prototype.fetchXAxis = function () {
        return this.xAxis;
    };
    VerticalStackedSeriesBase.prototype.fetchYAxis = function () {
        return this.yAxis;
    };
    VerticalStackedSeriesBase.prototype.n5 = function () {
        return this.xAxis != null && this.xAxis.cn();
    };
    VerticalStackedSeriesBase.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
        switch (b) {
            case VerticalStackedSeriesBase.$$p[0]:
                if (c != d) {
                    this.h0(typeCast(Axis.$, c));
                    this.i5(typeCast(Axis.$, d));
                    this.nj.cn.g(this.eu);
                    this.je(false);
                    this.il();
                }
                break;
            case VerticalStackedSeriesBase.$$p[1]:
                if (c != d) {
                    this.h0(typeCast(Axis.$, c));
                    this.i5(typeCast(Axis.$, d));
                    this.nj.cn.g(this.eu);
                    this.n5();
                    this.je(false);
                    this.il();
                }
                break;
        }
    };
    VerticalStackedSeriesBase.prototype.p1 = function (a) {
        if (typeCast(CategoryYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    VerticalStackedSeriesBase.prototype.p0 = function (a) {
        if (typeCast(NumericXAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    Object.defineProperty(VerticalStackedSeriesBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    VerticalStackedSeriesBase.$t = markType(VerticalStackedSeriesBase, 'VerticalStackedSeriesBase', StackedSeriesBase.$);
    VerticalStackedSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, VerticalStackedSeriesBase, 'raisePropertyChanged', ['XAxis::p4', [NumericXAxis.$, null], 'YAxis::p5', [CategoryYAxis.$, null]]);
    return VerticalStackedSeriesBase;
}(StackedSeriesBase));
export { VerticalStackedSeriesBase };
/**
 * @hidden
 */
var StackedBarSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedBarSeries, _super);
    function StackedBarSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedBarSeries.$;
        return _this;
    }
    StackedBarSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.je(false);
    };
    StackedBarSeries.prototype.bf = function () {
        return new StackedBarSeriesView(this);
    };
    StackedBarSeries.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.p6 = a;
    };
    StackedBarSeries.prototype.getHostReferenceValue = function () {
        return this.eh();
    };
    StackedBarSeries.prototype.o2 = function () {
        return this.p6;
    };
    StackedBarSeries.prototype.preferredCategoryMode = function (a) {
        return 2;
    };
    StackedBarSeries.prototype.od = function () {
        var e_43, _a;
        var a = 0;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.bs.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                if (b == this) {
                    return a;
                }
                var c = typeCast(IBarSeries_$type, b);
                if (c != null && c.yAxis == this.yAxis && c.getPreferredCategoryMode() == 2) {
                    a++;
                }
            }
        }
        catch (e_43_1) {
            e_43 = { error: e_43_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_43)
                    throw e_43.error;
            }
        }
        return -1;
    };
    StackedBarSeries.prototype.pd = function () {
        var a = 0;
        var b = this.bs != null ? this.bs.mr : Rect.empty;
        var c = this.bi.br;
        if (!b.isEmpty && !c.isEmpty && this.xAxis != null) {
            var d = this.getEffectiveViewport1(this.bi);
            var e = new ScalerParams(0, b, c, this.xAxis.ca, d);
            a = this.xAxis.dy(this.xAxis.kl, e);
        }
        return a;
    };
    StackedBarSeries.prototype.pe = function () {
        if (this.xAxis != null) {
            return this.xAxis.kl;
        }
        return 0;
    };
    StackedBarSeries.prototype.an = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.yAxis) {
            return new AxisRange(0, this.bz.count - 1);
        }
        if (a == this.xAxis) {
            this.pp();
            return new AxisRange(this.pg, this.pf);
        }
        return null;
    };
    StackedBarSeries.prototype.c9 = function (a) {
        var b = this.bz != null ? this.bz.indexOf(a) : -1;
        var c = this.bs != null ? this.bs.mr : Rect.empty;
        c = c.copy();
        var d = this.bi.br;
        var e = new Rect(0, 0, 0, 1, 1);
        var f = this.lt(this.bi);
        var g = new ScalerParams(0, e, e, this.xAxis.ca, f);
        var h = new ScalerParams(0, e, e, this.yAxis.ca, f);
        if (b >= 0 && Rect.l_op_Inequality(c, null) && Rect.l_op_Inequality(d, null)) {
            if (this.yAxis != null) {
                var i = this.yAxis.dy(b, h);
                if (i < c.top + 0.1 * c.height) {
                    i = i + 0.4 * c.height;
                }
                if (i > c.bottom - 0.1 * c.height) {
                    i = i - 0.4 * c.height;
                }
                c.y = i - 0.5 * c.height;
            }
            if (this.xAxis != null && this.oz != null && b < this.oz.length) {
                var j = this.xAxis.dy(this.oz[b], g);
                var k = this.xAxis.dy(this.o0[b], g);
                if (!isNaN_(j) && !isNaN_(k)) {
                    var l = Math.abs(k - j);
                    if (c.width < l) {
                        c.width = l;
                        c.x = Math.min(k, j);
                    }
                    else {
                        if (k < c.left + 0.1 * c.width) {
                            k = k + 0.4 * c.width;
                        }
                        if (k > c.right - 0.1 * c.width) {
                            k = k - 0.4 * c.width;
                        }
                        c.x = k - 0.5 * c.width;
                    }
                }
            }
            this.bn.ap(this.bs, c, true);
        }
        return b >= 0;
    };
    StackedBarSeries.prototype.dw = function (a, b, c) {
        var d = true;
        var e = c;
        if (!c.l() || b.isEmpty || a.isEmpty || this.yAxis == null || this.yAxis.itemsSource == null || this.xAxis == null || this.bz == null || this.xAxis.bh == null || this.yAxis.bh == null || this.xAxis.kb == this.xAxis.ka) {
            e.cn.d = 0;
            d = false;
        }
        return d;
    };
    StackedBarSeries.prototype.hz = function (a, b, c, d) {
        switch (a) {
            case 4:
            case 1:
            case 0:
                this.nj.cn.g(this.eu);
                break;
        }
        switch (a) {
            case 4:
                if (this.xAxis != null && !this.xAxis.cn()) {
                    this.je(true);
                }
                break;
            case 1:
                if (this.xAxis != null && !this.xAxis.cn()) {
                    this.je(true);
                }
                break;
            case 0:
                if (this.xAxis != null && !this.xAxis.cn()) {
                    this.je(true);
                }
                break;
            case 2:
                if (this.nj.cn.d > 0) {
                    this.je(true);
                }
                break;
            case 3:
                if (this.xAxis != null && !this.xAxis.cn()) {
                    this.je(true);
                }
                break;
        }
    };
    StackedBarSeries.prototype.e8 = function (a) {
        var b = this.bs != null ? this.bs.mr : Rect.empty;
        var c = this.bi.br;
        var d = this.getEffectiveViewport1(this.bi);
        var e = -1;
        if (this.yAxis != null && !b.isEmpty && !c.isEmpty) {
            var f = new ScalerParams(0, b, c, this.yAxis.ca, d);
            var g = this.lr(this.bi);
            var h = this.yAxis.d1(g.top, f);
            var i = this.yAxis.d1(g.bottom, f);
            var j = (a.y - b.top) / b.height;
            var k = h + (j * (i - h));
            if (this.yAxis.categoryMode != 0) {
                k -= 0.5;
            }
            var l = truncate(Math.round(k));
            e = l;
        }
        return e;
    };
    StackedBarSeries.prototype.fp = function (a) {
        var b = this.e8(a);
        return b >= 0 && this.bz != null && b < this.bz.count ? this.bz.item(b) : null;
    };
    StackedBarSeries.prototype.pt = function () {
        if (this.xAxis != null) {
            this.xAxis.co(true);
        }
        if (this.yAxis != null) {
            this.yAxis.co(true);
        }
    };
    StackedBarSeries.prototype.ph = function (a) {
        return this.e8(a);
    };
    StackedBarSeries.prototype.pb = function (a, b, c, d) {
        var e = true;
        if (!d.l() || c.isEmpty || b.isEmpty || this.yAxis == null || this.yAxis.itemsSource == null || this.xAxis == null || this.bz == null || this.xAxis.bh == null || this.yAxis.bh == null) {
            e = false;
        }
        var f = d;
        if (a.valueColumn == null || a.valueColumn.count == 0 || f.cn.d < 1) {
            e = false;
        }
        return e;
    };
    StackedBarSeries.prototype.eg = function () {
        return this.yAxis.jy(this.bi.bs, this.bi.br, this.getEffectiveViewport1(this.bi));
    };
    StackedBarSeries.prototype.pq = function (a, b, c) {
        var e_44, _a;
        var d = typeCast(BarFragment.$, a);
        var e = typeCast(ColumnFragmentView.$, c);
        if (!this.dw(c.br, c.bs, c) || d == null || e == null) {
            return;
        }
        var f = this.yAxis.jy(c.bs, c.br, this.getEffectiveViewport1(c));
        if (isNaN_(f) || isInfinity(f)) {
            d.qu.c7.count = 0;
            return;
        }
        var g = 0;
        try {
            for (var _b = tslib_1.__values(fromEnum(b.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var h = _c.value;
                if (isInfinity(h[0]) || isNaN_(h[0]) || isInfinity(h[1]) || isInfinity(h[2]) || isNaN_(h[1]) || isNaN_(h[2])) {
                    continue;
                }
                var i = h[0] - 0.5 * f;
                var j = h[1];
                var k = h[2];
                k = Math.max(k, -100);
                j = Math.min(j, c.br.right + 100);
                var l = e.c7.item(g);
                l.height = f;
                l.width = Math.abs(j - k);
                e.de(l, Math.min(j, k), i);
                g++;
            }
        }
        catch (e_44_1) {
            e_44 = { error: e_44_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_44)
                    throw e_44.error;
            }
        }
        e.c7.count = g;
    };
    StackedBarSeries.prototype.i0 = function (a, b, c, d) {
        var e_45, _a;
        _super.prototype.i0.call(this, a, b, c, d);
        switch (b) {
            case StackedBarSeries.$$p[0]:
            case StackedBarSeries.$$p[1]:
                try {
                    for (var _b = tslib_1.__values(fromEnum(this.o3)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var e = _c.value;
                        e.de();
                        e.df();
                    }
                }
                catch (e_45_1) {
                    e_45 = { error: e_45_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_45)
                            throw e_45.error;
                    }
                }
                this.je(false);
                break;
            case "SyncLink":
                if (this.xAxis != null) {
                    this.xAxis.cn();
                }
                break;
            case "FastItemsSource":
                if (this.xAxis != null && !this.xAxis.cn()) {
                    this.p6.cn.g(this.eu);
                }
                this.je(false);
                break;
            case "SeriesViewer":
                if (c != null && d == null) {
                    this.h0(this.xAxis);
                    this.h0(this.yAxis);
                }
                if (c == null && d != null) {
                    this.i5(this.xAxis);
                    this.i5(this.yAxis);
                }
                this.p6.cn.g(this.eu);
                this.je(false);
                if (this.xAxis != null) {
                    this.xAxis.cn();
                }
                break;
        }
    };
    StackedBarSeries.prototype.getPreferredCategoryMode = function () {
        return this.preferredCategoryMode(this.yAxis);
    };
    Object.defineProperty(StackedBarSeries.prototype, "currentCategoryMode", {
        get: function () {
            return this.preferredCategoryMode(this.yAxis);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedBarSeries.prototype, "scaler", {
        get: function () {
            return this.yAxis;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedBarSeries.prototype, "yScaler", {
        get: function () {
            return this.xAxis;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedBarSeries.prototype, "mayContainUnknowns", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedBarSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    StackedBarSeries.$t = markType(StackedBarSeries, 'StackedBarSeries', VerticalStackedSeriesBase.$, [IIsCategoryBased_$type, IBarSeries_$type]);
    StackedBarSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedBarSeries, 'raisePropertyChanged', ['RadiusX:p7:qb', [1, 2], 'RadiusY:p8:qc', [1, 2]]);
    return StackedBarSeries;
}(VerticalStackedSeriesBase));
export { StackedBarSeries };
/**
 * @hidden
 */
var StackedColumnSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedColumnSeries, _super);
    function StackedColumnSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedColumnSeries.$;
        return _this;
    }
    StackedColumnSeries.prototype.bf = function () {
        return new StackedColumnSeriesView(this);
    };
    StackedColumnSeries.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.p6 = a;
    };
    StackedColumnSeries.prototype.o2 = function () {
        return this.p6;
    };
    StackedColumnSeries.prototype.preferredCategoryMode = function (a) {
        return 2;
    };
    StackedColumnSeries.prototype.an = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.bz.count - 1);
        }
        if (a == this.yAxis) {
            this.pp();
            return new AxisRange(this.pg, this.pf);
        }
        return null;
    };
    StackedColumnSeries.prototype.eg = function () {
        var a = this.getEffectiveViewport1(this.bi);
        return this.xAxis.jy(this.bi.bs, this.bi.br, a);
    };
    StackedColumnSeries.prototype.pq = function (a, b, c) {
        var e_46, _a;
        var d = typeCast(ColumnFragment.$, a);
        var e = typeCast(ColumnFragmentView.$, c);
        if (!this.dw(c.br, c.bs, c) || d == null || e == null) {
            return;
        }
        if (d == null) {
            return;
        }
        var f = this.getEffectiveViewport1(c);
        var g = this.xAxis.jy(c.bs, c.br, f);
        if (isNaN_(g) || isInfinity(g)) {
            d.qu.c7.count = 0;
            return;
        }
        var h = 0;
        try {
            for (var _b = tslib_1.__values(fromEnum(b.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var i = _c.value;
                if (isInfinity(i[0]) || isNaN_(i[0]) || isInfinity(i[1]) || isInfinity(i[2]) || isNaN_(i[1]) || isNaN_(i[2])) {
                    continue;
                }
                var j = i[0] - 0.5 * g;
                var k = i[1];
                var l = i[2];
                k = Math.max(k, -100);
                l = Math.min(l, c.br.bottom + 100);
                var m = e.c7.item(h);
                m.width = g;
                m.height = Math.abs(l - k);
                e.de(m, j, Math.min(l, k));
                h++;
            }
        }
        catch (e_46_1) {
            e_46 = { error: e_46_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_46)
                    throw e_46.error;
            }
        }
        e.c7.count = h;
    };
    StackedColumnSeries.prototype.i0 = function (a, b, c, d) {
        var e_47, _a;
        _super.prototype.i0.call(this, a, b, c, d);
        switch (b) {
            case StackedColumnSeries.$$p[0]:
            case StackedColumnSeries.$$p[1]:
                try {
                    for (var _b = tslib_1.__values(fromEnum(this.o3)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var e = _c.value;
                        e.de();
                        e.df();
                    }
                }
                catch (e_47_1) {
                    e_47 = { error: e_47_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_47)
                            throw e_47.error;
                    }
                }
                this.je(false);
                break;
            case "SyncLink":
                if (this.yAxis != null) {
                    this.yAxis.cn();
                }
                break;
            case "SeriesViewer":
                if (this.yAxis != null) {
                    this.yAxis.cn();
                }
                break;
        }
    };
    Object.defineProperty(StackedColumnSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    StackedColumnSeries.$t = markType(StackedColumnSeries, 'StackedColumnSeries', HorizontalStackedSeriesBase.$);
    StackedColumnSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedColumnSeries, 'raisePropertyChanged', ['RadiusX:p7:qb', [1, 2], 'RadiusY:p8:qc', [1, 2]]);
    return StackedColumnSeries;
}(HorizontalStackedSeriesBase));
export { StackedColumnSeries };
/**
 * @hidden
 */
var StackedLineSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedLineSeries, _super);
    function StackedLineSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedLineSeries.$;
        return _this;
    }
    StackedLineSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.je(false);
    };
    StackedLineSeries.prototype.an = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.bz.count - 1);
        }
        if (a == this.yAxis) {
            this.pp();
            return new AxisRange(this.pg, this.pf);
        }
        return null;
    };
    StackedLineSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    Object.defineProperty(StackedLineSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    StackedLineSeries.$t = markType(StackedLineSeries, 'StackedLineSeries', HorizontalStackedSeriesBase.$);
    return StackedLineSeries;
}(HorizontalStackedSeriesBase));
export { StackedLineSeries };
/**
 * @hidden
 */
var StackedSplineAreaSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedSplineAreaSeries, _super);
    function StackedSplineAreaSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedSplineAreaSeries.$;
        return _this;
    }
    StackedSplineAreaSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.je(false);
    };
    StackedSplineAreaSeries.prototype.an = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.bz.count - 1);
        }
        if (a == this.yAxis) {
            this.pp();
            return new AxisRange(this.pg, this.pf);
        }
        return null;
    };
    StackedSplineAreaSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    Object.defineProperty(StackedSplineAreaSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    StackedSplineAreaSeries.$t = markType(StackedSplineAreaSeries, 'StackedSplineAreaSeries', HorizontalStackedSeriesBase.$);
    return StackedSplineAreaSeries;
}(HorizontalStackedSeriesBase));
export { StackedSplineAreaSeries };
/**
 * @hidden
 */
var StackedSplineSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedSplineSeries, _super);
    function StackedSplineSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedSplineSeries.$;
        return _this;
    }
    StackedSplineSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.je(false);
    };
    StackedSplineSeries.prototype.an = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.bz.count - 1);
        }
        if (a == this.yAxis) {
            this.pp();
            return new AxisRange(this.pg, this.pf);
        }
        return null;
    };
    StackedSplineSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    Object.defineProperty(StackedSplineSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n6;
        },
        enumerable: true,
        configurable: true
    });
    StackedSplineSeries.$t = markType(StackedSplineSeries, 'StackedSplineSeries', HorizontalStackedSeriesBase.$);
    return StackedSplineSeries;
}(HorizontalStackedSeriesBase));
export { StackedSplineSeries };
/**
 * @hidden
 */
var StackedFragmentSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedFragmentSeries, _super);
    function StackedFragmentSeries() {
        var _this = _super.call(this) || this;
        _this.q = false;
        _this.r = false;
        _this._parentSeries = null;
        _this.av = 0;
        _this.o = null;
        _this.p = null;
        _this._visualSeriesLink = null;
        _this.ac = null;
        _this.ad = null;
        _this.ab = null;
        _this.y = false;
        _this.au = null;
        _this.propertyChanged = null;
        _this.propertyUpdated = null;
        _this.ac = new List$1(Number_$type, 0);
        _this.ad = new List$1(Number_$type, 0);
        _this.ab = new List$1(Array_$type, 0);
        _this.propertyUpdated = delegateCombine(_this.propertyUpdated, function (a, b) { return _this.ct(a, b.propertyName, b.oldValue, b.newValue); });
        return _this;
    }
    Object.defineProperty(StackedFragmentSeries.prototype, "parentSeries", {
        get: function () {
            return this._parentSeries;
        },
        set: function (a) {
            this._parentSeries = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeries.prototype, "visualSeriesLink", {
        get: function () {
            return this._visualSeriesLink;
        },
        set: function (a) {
            this._visualSeriesLink = a;
        },
        enumerable: true,
        configurable: true
    });
    StackedFragmentSeries.prototype.provideRenderer = function (a) {
        this.au = a;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.provideRenderer(a);
        }
    };
    StackedFragmentSeries.prototype.dq = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.gd = this.parentSeries._visibility != 0 ? 1 : this.gf;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink._visibility = this.gd;
        }
    };
    StackedFragmentSeries.prototype.c9 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.dt = this.dw != null ? this.dw : this.parentSeries.mn;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.mn = this.dt;
        }
    };
    StackedFragmentSeries.prototype.da = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = this.l == 0 ? 1 : this.l;
        this.k = this.l == 0 ? this.parentSeries.l2 : a;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.l2 = this.k;
        }
    };
    StackedFragmentSeries.prototype.cx = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.fz = this.fu != null ? this.fu : this.parentSeries.k6;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.k6 = this.fz;
        }
    };
    StackedFragmentSeries.prototype.cy = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.f2 = this.f3 != null ? this.f3 : this.parentSeries.lc;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.lc = this.f2;
        }
    };
    StackedFragmentSeries.prototype.cz = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.f4 = this.f7;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.ld = this.f4;
        }
    };
    StackedFragmentSeries.prototype.c1 = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (!this.q) {
            this.s = this.parentSeries.cp;
        }
        else {
            this.s = this.w;
        }
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.cp = this.s;
        }
    };
    StackedFragmentSeries.prototype.dg = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ai = !isNaN_(this.aq) ? this.aq : this.parentSeries.ev;
        if (this.visualSeriesLink != null && !isNaN_(this.ai)) {
            this.visualSeriesLink.ev = this.ai;
        }
    };
    StackedFragmentSeries.prototype.dh = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.f0 = Color.e(toNullable(Color.$, this.f1), toNullable(Color.$, null)) ? this.f1 : this.parentSeries.lb;
        if (this.visualSeriesLink != null && Color.e(toNullable(Color.$, this.f0), toNullable(Color.$, null))) {
            this.visualSeriesLink.lb = this.f0;
        }
    };
    StackedFragmentSeries.prototype.dp = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (!this.r) {
            this.v = this.parentSeries.du;
        }
        else {
            this.v = this.aa;
        }
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.du = this.v;
        }
    };
    StackedFragmentSeries.prototype.di = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.aj = !isNaN_(this.ar) ? this.ar : this.parentSeries.ew;
        if (this.visualSeriesLink != null && !isNaN_(this.aj)) {
            this.visualSeriesLink.ew = this.aj;
        }
    };
    StackedFragmentSeries.prototype.dj = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ak = !isNaN_(this.as) ? this.as : this.parentSeries.ex;
        if (this.visualSeriesLink != null && !isNaN_(this.ak)) {
            this.visualSeriesLink.ex = this.ak;
        }
    };
    StackedFragmentSeries.prototype.c0 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.f5 = this.f8;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.le = this.f5;
        }
    };
    StackedFragmentSeries.prototype.c2 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.t = this.x;
    };
    StackedFragmentSeries.prototype.c3 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.dr = this.du != null ? this.du : this.parentSeries.legendItemBadgeTemplate;
        if (this.visualSeriesLink != null) {
            if (this.dr != null) {
                this.visualSeriesLink.legendItemBadgeTemplate = this.dr;
            }
            else {
                this.visualSeriesLink.legendItemBadgeTemplate = null;
            }
        }
    };
    StackedFragmentSeries.prototype.c4 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ds = this.dv != null ? this.dv : this.parentSeries.legendItemTemplate;
        if (this.visualSeriesLink != null) {
            if (this.ds != null) {
                this.visualSeriesLink.legendItemTemplate = this.ds;
            }
            else {
                this.visualSeriesLink.legendItemTemplate = null;
            }
        }
    };
    StackedFragmentSeries.prototype.c5 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.gc = this.parentSeries.l0 != 0 ? 1 : this.ge;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.l0 = this.gc;
        }
    };
    StackedFragmentSeries.prototype.c6 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.fq = this.fv != null ? this.fv : this.parentSeries.m1;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.m1 = this.fq;
        }
    };
    StackedFragmentSeries.prototype.c7 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.fr = this.fw != null ? this.fw : this.parentSeries.m2;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.m2 = this.fr;
        }
    };
    StackedFragmentSeries.prototype.c8 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ga = this.gb != null ? this.gb : this.parentSeries.m3;
        if (this.visualSeriesLink != null) {
            if (this.ga != null) {
                this.visualSeriesLink.m3 = this.ga;
            }
            else {
                this.visualSeriesLink.m3 = null;
            }
        }
    };
    StackedFragmentSeries.prototype.db = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.af = !isNaN_(this.an) ? this.an : this.parentSeries._opacity;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink._opacity = this.af;
        }
    };
    StackedFragmentSeries.prototype.dc = function () {
    };
    StackedFragmentSeries.prototype.dd = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ft = this.fy != null ? this.fy : this.parentSeries.k9;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.k9 = this.ft;
        }
    };
    StackedFragmentSeries.prototype.cw = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = NaN;
        if (typeCast(StackedAreaSeries.$, this.parentSeries) !== null) {
            a = this.parentSeries.d6;
        }
        if (typeCast(StackedSplineAreaSeries.$, this.parentSeries) !== null) {
            a = this.parentSeries.d6;
        }
        this.ae = !isNaN_(this.am) ? this.am : a;
        if (this.visualSeriesLink != null) {
            if (typeCast(AreaFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.d7 = this.ae;
            }
            if (typeCast(SplineAreaFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.d7 = this.ae;
            }
        }
    };
    StackedFragmentSeries.prototype.de = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = NaN;
        if (typeCast(StackedColumnSeries.$, this.parentSeries) !== null) {
            a = this.parentSeries.p7;
        }
        if (typeCast(StackedBarSeries.$, this.parentSeries) !== null) {
            a = this.parentSeries.p7;
        }
        this.ag = !isNaN_(a) ? a : this.ao;
        if (this.visualSeriesLink != null) {
            if (typeCast(ColumnFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.qx = this.ag;
            }
            if (typeCast(BarFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.qx = this.ag;
            }
        }
    };
    StackedFragmentSeries.prototype.df = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = NaN;
        if (typeCast(StackedColumnSeries.$, this.parentSeries) !== null) {
            a = this.parentSeries.p8;
        }
        if (typeCast(StackedBarSeries.$, this.parentSeries) !== null) {
            a = this.parentSeries.p8;
        }
        this.ah = !isNaN_(a) ? a : this.ap;
        if (this.visualSeriesLink != null) {
            if (typeCast(ColumnFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.qy = this.ah;
            }
            if (typeCast(BarFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.qy = this.ah;
            }
        }
    };
    StackedFragmentSeries.prototype.dk = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.f6 = this.f9;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.lf = this.f6;
        }
    };
    StackedFragmentSeries.prototype.dl = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.al = !isNaN_(this.at) ? this.at : this.parentSeries.ey;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.ey = this.al;
        }
    };
    StackedFragmentSeries.prototype.dm = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.toolTip = this.ay;
        }
    };
    StackedFragmentSeries.prototype.dn = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.u = this.z;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.l6 = this.u;
        }
    };
    StackedFragmentSeries.prototype.cv = function (a, b, c) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        if (this.propertyUpdated != null) {
            this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));
        }
    };
    StackedFragmentSeries.prototype.ct = function (a, b, c, d) {
        if (this.parentSeries == null) {
            return;
        }
        switch (b) {
            case StackedFragmentSeries.$$p[58]:
                if (this.parentSeries == null || this.visualSeriesLink == null) {
                    return;
                }
                this.visualSeriesLink.fx = d;
                break;
            case StackedFragmentSeries.$$p[63]:
                this.dq();
                break;
            case StackedFragmentSeries.$$p[31]:
                this.cx();
                break;
            case StackedFragmentSeries.$$p[32]:
                this.cy();
                break;
            case StackedFragmentSeries.$$p[33]:
                this.cz();
                break;
            case StackedFragmentSeries.$$p[35]:
                this.q = true;
                this.c1();
                break;
            case StackedFragmentSeries.$$p[52]:
                this.dg();
                break;
            case StackedFragmentSeries.$$p[53]:
                this.dh();
                break;
            case StackedFragmentSeries.$$p[61]:
                this.q = true;
                this.dp();
                break;
            case StackedFragmentSeries.$$p[54]:
                this.di();
                break;
            case StackedFragmentSeries.$$p[55]:
                this.dj();
                break;
            case StackedFragmentSeries.$$p[34]:
                this.c0();
                break;
            case StackedFragmentSeries.$$p[36]:
                this.c2();
                break;
            case StackedFragmentSeries.$$p[43]:
                this.c9();
                break;
            case StackedFragmentSeries.$$p[44]:
                this.da();
                break;
            case StackedFragmentSeries.$$p[37]:
                this.c3();
                break;
            case StackedFragmentSeries.$$p[38]:
                this.c4();
                break;
            case StackedFragmentSeries.$$p[39]:
                this.c5();
                break;
            case StackedFragmentSeries.$$p[40]:
                this.c6();
                break;
            case StackedFragmentSeries.$$p[41]:
                this.c7();
                break;
            case StackedFragmentSeries.$$p[42]:
                this.c8();
                break;
            case StackedFragmentSeries.$$p[47]:
                this.db();
                break;
            case StackedFragmentSeries.$$p[46]:
                this.dc();
                break;
            case StackedFragmentSeries.$$p[48]:
                this.dd();
                break;
            case StackedFragmentSeries.$$p[30]:
                this.cw();
                break;
            case StackedFragmentSeries.$$p[50]:
                this.de();
                break;
            case StackedFragmentSeries.$$p[51]:
                this.df();
                break;
            case StackedFragmentSeries.$$p[56]:
                this.dk();
                break;
            case StackedFragmentSeries.$$p[57]:
                this.dl();
                break;
            case StackedFragmentSeries.$$p[59]:
                this.dm();
                break;
            case StackedFragmentSeries.$$p[60]:
                this.dn();
                break;
        }
        this.parentSeries.je(false);
    };
    StackedFragmentSeries.$t = markType(StackedFragmentSeries, 'StackedFragmentSeries', DependencyObject.$, [INotifyPropertyChanged_$type]);
    StackedFragmentSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedFragmentSeries, 'cv', ['ActualAreaFillOpacity:ae:dx', [1, 1], 'ActualBrush:fp:dy', [Brush.$], 'ActualDashArray:f2:dz', [DoubleCollection.$], 'ActualDashCap:f4:d0', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)], 'ActualEndCap:f5:d1', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 2)], 'ActualIsDropShadowEnabled:s:d2', [0, false], 'ActualIsHitTestVisible:t:d3', [0, true], 'ActualLegendItemBadgeTemplate:dr:d4', [DataTemplate.$], 'ActualLegendItemTemplate:ds:d5', [DataTemplate.$], 'ActualLegendItemVisibility:gc:d6', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'ActualMarkerBrush:fq:d7', [Brush.$], 'ActualMarkerOutline:fr:d8', [Brush.$], 'ActualMarkerStyle:ga:d9', [Style.$], 'ActualMarkerTemplate:dt:ea', [DataTemplate.$], 'ActualMarkerType:k:eb', [MarkerType_$type, enumGetBox(MarkerType_$type, 1)], 'ActualOpacityMask:fs:ec', [Brush.$], 'ActualOpacity:af:ed', [1, 1], 'ActualOutline:ft:ee', [Brush.$], 'ActualRadiusX:ag:ef', [1, 0], 'ActualRadiusY:ah:eg', [1, 0], 'ActualShadowBlur:ai:eh', [1, NaN], 'ActualShadowColor:f0:ei', [Color.$], 'ActualShadowOffsetX:aj:ej', [1, NaN], 'ActualShadowOffsetY:ak:ek', [1, NaN], 'ActualStartCap:f6:el', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 2)], 'ActualThickness:al:em', [1, 1], 'ActualToolTip:aw:en', [4], 'ActualUseLightweightMarkers:u:eo', [0, false], 'ActualUseSingleShadow:v:ep', [0, true], 'ActualVisibility:gd:eq', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'AreaFillOpacity:am:er', [1, NaN], 'Brush:fu:es', [Brush.$], 'DashArray:f3:et', [DoubleCollection.$], 'DashCap:f7:eu', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)], 'EndCap:f8:ev', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 2)], 'IsDropShadowEnabled:w:ew', [0], 'IsHitTestVisible:x:ex', [0, true], 'LegendItemBadgeTemplate:du:ey', [DataTemplate.$, null], 'LegendItemTemplate:dv:ez', [DataTemplate.$, null], 'LegendItemVisibility:ge:e0', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'MarkerBrush:fv:e1', [Brush.$], 'MarkerOutline:fw:e2', [Brush.$], 'MarkerStyle:gb:e3', [Style.$], 'MarkerTemplate:dw:e4', [DataTemplate.$, null], 'MarkerType:l:e5', [MarkerType_$type, enumGetBox(MarkerType_$type, 0)], 'Name:b8:e6', [2], 'OpacityMask:fx:e7', [Brush.$], 'Opacity:an:e8', [1, 1], 'Outline:fy:e9', [Brush.$, null], 'ParentOrLocalBrush:fz:fa', [Brush.$], 'RadiusX:ao:fb', [1, 2], 'RadiusY:ap:fc', [1, 2], 'ShadowBlur:aq:fd', [1, NaN], 'ShadowColor:f1:fe', [Color.$], 'ShadowOffsetX:ar:ff', [1, NaN], 'ShadowOffsetY:as:fg', [1, NaN], 'StartCap:f9:fh', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 2)], 'Thickness:at:fi', [1, 1.5], 'Title:ax:fj', [4, "Series Title"], 'ToolTip:ay:fk', [4, null], 'UseLightweightMarkers:z:fl', [0, false], 'UseSingleShadow:aa:fm', [0], 'ValueMemberPath:cq:fn', [2, null], 'Visibility:gf:fo', [Visibility_$type, enumGetBox(Visibility_$type, 0)]]);
    return StackedFragmentSeries;
}(DependencyObject));
export { StackedFragmentSeries };
/**
 * @hidden
 */
var StackedSeriesCollection = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedSeriesCollection, _super);
    function StackedSeriesCollection() {
        var _this = _super.call(this, StackedFragmentSeries.$, 0) || this;
        _this.collectionResetting = null;
        return _this;
    }
    StackedSeriesCollection.prototype.p = function () {
        if (this.collectionResetting != null) {
            this.collectionResetting(this, null);
        }
        _super.prototype.p.call(this);
    };
    StackedSeriesCollection.$t = markType(StackedSeriesCollection, 'StackedSeriesCollection', ObservableCollection$1.$.specialize(StackedFragmentSeries.$));
    return StackedSeriesCollection;
}(ObservableCollection$1));
export { StackedSeriesCollection };
/**
 * @hidden
 */
var StackedSeriesFramePreparer = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedSeriesFramePreparer, _super);
    function StackedSeriesFramePreparer(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = this;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    _this = _super.call(this, 0, c) || this;
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    var g = _rest[4];
                    _this = _super.call(this, 1, c, d, e, f, g) || this;
                }
                break;
        }
        return _this;
    }
    StackedSeriesFramePreparer.prototype.j = function (a) {
        var b = new SingleValuesHolder();
        if (typeCast(StackedColumnSeries.$, this.h) !== null || typeCast(StackedBarSeries.$, this.h) !== null) {
            var c = typeCast(StackedSeriesBase.$, this.h);
            if (c.o3.count > 0) {
                b.f = c.o3._inner[0].p;
            }
            return b;
        }
        var d = this.ab.valueColumn;
        b.f = d;
        return b;
    };
    StackedSeriesFramePreparer.prototype.t = function (a, b, c, d, e) {
        var _this = this;
        var f = 0;
        var g = false;
        var h;
        var i = a.d != null;
        var j = this.h.provideCollisionDetector();
        var k = a.f;
        var l = a.k;
        var m = this.h.mayContainUnknowns;
        var n = new ScalerParams(0, a.m, a.l, a.b.j$a, l);
        var o = new ScalerParams(0, a.m, a.l, a.c.j$a, l);
        o.b = this.h.getHostReferenceValue();
        var p = (a.b.j$c(2, n) - a.b.j$c(1, n));
        var q = a.m;
        var r = a.l;
        var s = typeCast(NumericAxisBase.$, a.c) !== null && a.c.j1;
        var _loop_1 = function (t) {
            var u = void 0;
            if (a.d == null) {
                if (!m) {
                    u = this_1.g.getBucketWithoutUnknowns(t);
                }
                else {
                    u = this_1.g.getBucket(t);
                }
            }
            else {
                u = ((function () { var v = _this.f(a, t, b, p, g, h, c); t = v.p1; g = v.p4; h = v.p5; return v.ret; })());
            }
            var v = !s || (s && u[1] > 0);
            var w = u[0];
            if (!isNaN_(u[0])) {
                this_1.x(a, u, c, i, n, o);
                a.a.f.add(u);
                var x = t * a.h;
                var y = x;
                if (a.d != null && a.d.i$b != null && x >= 0 && x < a.d.i$b.count) {
                    x = a.d.i$b._inner[x];
                }
                var z = u;
                if (k && x < b.e) {
                    z = new Array(u.length);
                    z[0] = w;
                    this_1.z(b, x, true, a.e);
                    z[1] = b.c;
                    z[2] = b.d;
                    this_1.x(a, z, c, i, n, o);
                }
                if (d && v && this_1.l(a.a, z, j, Math.min(x, b.e - 1), f, a.a.f.count - 1)) {
                    ++f;
                }
            }
            out_t_1 = t;
        };
        var this_1 = this, out_t_1;
        for (var t = a.i; t <= a.j; ++t) {
            _loop_1(t);
            t = out_t_1;
        }
        return f;
    };
    StackedSeriesFramePreparer.prototype.l = function (a, b, c, d, e, f) {
        var g = b[0];
        var h = b[1];
        if (typeCast(IBarSeries_$type, this.c) !== null) {
            h = b[0];
            g = b[1];
        }
        var i = new Rect(0, g - 5, h - 5, 11, 11);
        if (!isNaN_(g) && !isNaN_(h) && !isInfinity(g) && !isInfinity(h) && c.tryAdd(i)) {
            a.m.add({ $type: Point_$type, x: g, y: h });
            this.c.updateMarkerTemplate(e, d, f);
            return true;
        }
        return false;
    };
    StackedSeriesFramePreparer.$t = markType(StackedSeriesFramePreparer, 'StackedSeriesFramePreparer', CategoryFramePreparer.$);
    return StackedSeriesFramePreparer;
}(CategoryFramePreparer));
export { StackedSeriesFramePreparer };
/**
 * @hidden
 */
var AreaFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(AreaFragmentView, _super);
    function AreaFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.c6 = null;
        _this.c8 = new Path();
        _this.da = new Path();
        _this.c9 = new Path();
        _this.db = new Path();
        _this.c6 = a;
        return _this;
    }
    AreaFragmentView.prototype.ap = function () {
        _super.prototype.ap.call(this);
        if (!this.n) {
            this.e.bj = 1;
        }
    };
    AreaFragmentView.prototype.c7 = function () {
        this.c8.ak = null;
        this.c9.ak = null;
        this.da.ak = null;
        this.db.ak = null;
    };
    AreaFragmentView.prototype.co = function () {
        return new AreaFragmentBucketCalculator(this);
    };
    AreaFragmentView.prototype.a8 = function () {
        _super.prototype.a8.call(this);
        this.c8._fill = this.e.k4;
        this.c9._fill = this.e.k4;
        this.c8._opacity = this.e.d6;
        this.c9._opacity = 0.5 * this.e.d6;
        this.da._stroke = this.e.k5;
        this.da.ac = this.e.ey;
        this.da.ai = this.e.lc;
        this.da.ad = this.e.ld;
        this.db._stroke = this.e.k5;
        this.db.ac = this.e.ey;
        this.db.ai = this.e.lc;
        this.db.ad = this.e.ld;
    };
    AreaFragmentView.prototype.a9 = function () {
        _super.prototype.a9.call(this);
        var a = this.bl();
        this.c8._fill = a;
        this.c9._fill = a;
        this.c8._opacity = 1;
        this.c9._opacity = 1;
        this.da._stroke = a;
        this.da.ac = this.e.ey + 3;
        this.db._stroke = a;
        this.db.ac = this.e.ey + 3;
    };
    AreaFragmentView.prototype.a3 = function (a, b) {
        _super.prototype.a3.call(this, a, b);
        a.s(this.c8);
        a.s(this.c9);
        a.s(this.da);
        a.s(this.db);
    };
    AreaFragmentView.prototype.get_index = function () {
        var a = this.c6.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.c6.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.bi.index;
        return e + d;
    };
    AreaFragmentView.prototype.ai = function (a) {
        _super.prototype.ai.call(this, a);
        this.e.a2.exportPathData(a, this.da, "lowerShape", ["Lower"]);
        this.e.a2.exportPathData(a, this.db, "upperShape", ["Upper", "Main"]);
        this.e.a2.exportPathData(a, this.c9, "translucentShape", ["Translucent"]);
        this.e.a2.exportPathData(a, this.c8, "fillShape", ["Fill"]);
    };
    AreaFragmentView.$t = markType(AreaFragmentView, 'AreaFragmentView', AnchoredCategorySeriesView.$);
    return AreaFragmentView;
}(AnchoredCategorySeriesView));
export { AreaFragmentView };
/**
 * @hidden
 */
var ColumnFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ColumnFragmentView, _super);
    function ColumnFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.c6 = null;
        _this.da = null;
        _this.c7 = null;
        _this.c8 = null;
        _this.c9 = null;
        _this.c6 = a;
        _this.c8 = new List$1(Number_$type, 0);
        _this.c9 = new List$1(Number_$type, 0);
        _this.c7 = ((function () {
            var $ret = new Pool$1(Rectangle.$);
            $ret.create = runOn(_this, _this.df);
            $ret.activate = runOn(_this, _this.db);
            $ret.disactivate = runOn(_this, _this.dd);
            $ret.destroy = runOn(_this, _this.dc);
            return $ret;
        })());
        _this.da = new List$1(Rectangle.$, 0);
        return _this;
    }
    ColumnFragmentView.prototype.ap = function () {
        _super.prototype.ap.call(this);
        if (!this.n) {
            this.e.bj = 1;
        }
    };
    ColumnFragmentView.prototype.df = function () {
        var _this = this;
        var a = ((function () {
            var $ret = new Rectangle();
            $ret.dataContext = ((function () {
                var $ret = new DataContext();
                $ret.series = _this.e;
                return $ret;
            })());
            return $ret;
        })());
        this.da.add(a);
        a._visibility = 1;
        return a;
    };
    ColumnFragmentView.prototype.db = function (a) {
        a._visibility = 0;
    };
    ColumnFragmentView.prototype.dd = function (a) {
        a._visibility = 1;
    };
    ColumnFragmentView.prototype.dc = function (a) {
        this.da.remove(a);
    };
    ColumnFragmentView.prototype.bb = function (a, b) {
        _super.prototype.bb.call(this, a, b);
        var c = a;
        c._fill = this.e.k4;
        c._stroke = this.e.k5;
        c.ac = this.e.ey;
        c.ai = this.e.lc;
        c.ad = this.e.ld;
        c.am = this.c6.qx;
        c.an = this.c6.qy;
    };
    ColumnFragmentView.prototype.de = function (a, b, c) {
        var d = false;
        if (a.o != c) {
            d = true;
            a.o = c;
        }
        if (a.n != b) {
            d = true;
            a.n = b;
        }
        if (d) {
            this.an();
        }
    };
    ColumnFragmentView.prototype.bc = function (a, b) {
        _super.prototype.bc.call(this, a, b);
        var c = a;
        var d = this.bm(b);
        c._fill = d;
        c._stroke = d;
        c.ac = this.e.ey + 3;
    };
    ColumnFragmentView.prototype.a3 = function (a, b) {
        _super.prototype.a3.call(this, a, b);
        if (a.d) {
            for (var c = 0; c < this.da.count; c++) {
                var d = this.da._inner[c];
                this.ba(d, c, b);
                a.v(d);
            }
        }
    };
    ColumnFragmentView.prototype.get_index = function () {
        var a = this.c6.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.c6.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.bi.index;
        return e + d;
    };
    ColumnFragmentView.prototype.ai = function (a) {
        var e_48, _a, e_49, _b;
        _super.prototype.ai.call(this, a);
        var b = 0;
        var c = new List$1(Rectangle.$, 0);
        try {
            for (var _c = tslib_1.__values(fromEnum(this.c7.a)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var d = _d.value;
                c.add(d);
            }
        }
        catch (e_48_1) {
            e_48 = { error: e_48_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_48)
                    throw e_48.error;
            }
        }
        c.aa(function (e, f) {
            if (e.n < f.n) {
                return -1;
            }
            else if (e.n > f.n) {
                return 1;
            }
            else {
                return 0;
            }
        });
        try {
            for (var _e = tslib_1.__values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var e = _f.value;
                this.e.a2.exportRectangleData(a, e, "column" + b, ["Main", "Fill"]);
            }
        }
        catch (e_49_1) {
            e_49 = { error: e_49_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_49)
                    throw e_49.error;
            }
        }
        b++;
    };
    ColumnFragmentView.prototype.getDefaultTooltipTemplate = function () {
        var a = "<div class='ui-chart-default-tooltip-content'>";
        var b = null;
        if (this.c6.na().b4) {
            b = this.c6.fragmentXAxis;
        }
        else if (this.c6.fragmentYAxis.b4) {
            b = this.c6.fragmentYAxis;
        }
        if (b.b7) {
            var c = b;
            a += "<span>${item." + c.dateTimeMemberPath + "}</span><br/>";
        }
        if (b != null && b.e9 != null) {
            a += "<span>${item." + b.e9 + "}</span><br/>";
        }
        a += "<span";
        var d = this.e.a0.a$q(this.e);
        if (!stringIsNullOrEmpty(d)) {
            a += " style='color:" + d + "'";
        }
        a += ">" + this.c6.fx + ": </span><span class='ui-priority-primary'>" + "${item." + this.c6.ph + "}</span></div>";
        return a;
    };
    ColumnFragmentView.$t = markType(ColumnFragmentView, 'ColumnFragmentView', AnchoredCategorySeriesView.$);
    return ColumnFragmentView;
}(AnchoredCategorySeriesView));
export { ColumnFragmentView };
/**
 * @hidden
 */
var LineFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(LineFragmentView, _super);
    function LineFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.c6 = null;
        _this.c9 = new Path();
        _this.c8 = new Path();
        _this.da = new Path();
        _this.c6 = a;
        return _this;
    }
    LineFragmentView.prototype.c7 = function () {
        this.c8.ak = null;
        this.c9.ak = null;
        this.da.ak = null;
    };
    LineFragmentView.prototype.co = function () {
        return new LineFragmentBucketCalculator(this);
    };
    LineFragmentView.prototype.a8 = function () {
        _super.prototype.a8.call(this);
        this.c9._stroke = this.e.k4;
        this.c9.ac = this.e.ey;
        this.c9.ai = this.e.lc;
        this.c9.ad = this.e.ld;
        this.da._stroke = this.e.k4;
        this.da.ac = this.e.ey;
        this.da.ai = this.e.lc;
        this.da.ad = this.e.ld;
        this.c8._fill = this.e.k4;
        this.c8._opacity = 0.75;
    };
    LineFragmentView.prototype.a9 = function () {
        _super.prototype.a9.call(this);
        var a = this.bl();
        this.c9._stroke = a;
        this.c9.ac = this.e.ey + 3;
        this.da._stroke = a;
        this.da.ac = this.e.ey + 3;
        this.c8._fill = a;
        this.c8._opacity = 1;
    };
    LineFragmentView.prototype.a3 = function (a, b) {
        _super.prototype.a3.call(this, a, b);
        if (a.d) {
            a.s(this.c8);
            a.s(this.c9);
            a.s(this.da);
        }
    };
    LineFragmentView.prototype.get_index = function () {
        var a = this.c6.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.c6.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.bi.index;
        return e + d;
    };
    LineFragmentView.prototype.ai = function (a) {
        _super.prototype.ai.call(this, a);
        this.e.a2.exportPathData(a, this.c9, "lowerShape", ["Lower", "Main"]);
        this.e.a2.exportPathData(a, this.da, "upperShape", ["Upper"]);
        this.e.a2.exportPathData(a, this.c8, "translucentShape", ["Translucent"]);
    };
    LineFragmentView.$t = markType(LineFragmentView, 'LineFragmentView', AnchoredCategorySeriesView.$);
    return LineFragmentView;
}(AnchoredCategorySeriesView));
export { LineFragmentView };
/**
 * @hidden
 */
var SplineAreaFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(SplineAreaFragmentView, _super);
    function SplineAreaFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.c7 = null;
        _this.c9 = new Path();
        _this.db = new Path();
        _this.da = new Path();
        _this.dc = new Path();
        _this.c7 = a;
        return _this;
    }
    SplineAreaFragmentView.prototype.ap = function () {
        _super.prototype.ap.call(this);
        if (!this.n) {
            this.e.bj = 1;
        }
    };
    SplineAreaFragmentView.prototype.c8 = function () {
        this.c9.ak = null;
        this.da.ak = null;
        this.db.ak = null;
        this.dc.ak = null;
    };
    SplineAreaFragmentView.prototype.a8 = function () {
        _super.prototype.a8.call(this);
        this.c9._fill = this.e.k4;
        this.da._fill = this.e.k4;
        this.c9._opacity = this.e.d6;
        this.da._opacity = 0.5 * this.e.d6;
        this.db._stroke = this.e.k5;
        this.db.ac = this.e.ey;
        this.db.ai = this.e.lc;
        this.db.ad = this.e.ld;
        this.dc._stroke = this.e.k5;
        this.dc.ac = this.e.ey;
        this.dc.ai = this.e.lc;
        this.dc.ad = this.e.ld;
    };
    SplineAreaFragmentView.prototype.a9 = function () {
        _super.prototype.a9.call(this);
        var a = this.bl();
        this.c9._fill = a;
        this.da._fill = a;
        this.da._opacity = 1;
        this.c9._opacity = 1;
        this.db._stroke = a;
        this.db.ac = this.e.ey + 3;
        this.dc._stroke = a;
        this.dc.ac = this.e.ey + 3;
    };
    SplineAreaFragmentView.prototype.a3 = function (a, b) {
        _super.prototype.a3.call(this, a, b);
        if (a.d) {
            a.s(this.c9);
            a.s(this.da);
            a.s(this.db);
            a.s(this.dc);
        }
    };
    SplineAreaFragmentView.prototype.get_index = function () {
        var a = this.c7.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.c7.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.bi.index;
        return e + d;
    };
    SplineAreaFragmentView.prototype.ai = function (a) {
        _super.prototype.ai.call(this, a);
        this.e.a2.exportPathData(a, this.db, "lowerShape", ["Lower"]);
        this.e.a2.exportPathData(a, this.dc, "upperShape", ["Upper", "Main"]);
        this.e.a2.exportPathData(a, this.da, "translucentShape", ["Translucent"]);
        this.e.a2.exportPathData(a, this.c9, "fillShape", ["Fill"]);
    };
    SplineAreaFragmentView.$t = markType(SplineAreaFragmentView, 'SplineAreaFragmentView', SplineSeriesBaseView.$);
    return SplineAreaFragmentView;
}(SplineSeriesBaseView));
export { SplineAreaFragmentView };
/**
 * @hidden
 */
var SplineFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(SplineFragmentView, _super);
    function SplineFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.c7 = null;
        _this.da = new Path();
        _this.c9 = new Path();
        _this.db = new Path();
        _this.c7 = a;
        return _this;
    }
    SplineFragmentView.prototype.co = function () {
        return new SplineFragmentBucketCalculator(this);
    };
    SplineFragmentView.prototype.c8 = function () {
        this.c9.ak = null;
        this.da.ak = null;
        this.db.ak = null;
    };
    SplineFragmentView.prototype.a8 = function () {
        _super.prototype.a8.call(this);
        this.da._stroke = this.e.k4;
        this.da.ac = this.e.ey;
        this.da.ai = this.e.lc;
        this.da.ad = this.e.ld;
        this.db._stroke = this.e.k4;
        this.db.ac = this.e.ey;
        this.db.ai = this.e.lc;
        this.db.ad = this.e.ld;
        this.c9._fill = this.e.k4;
        this.c9._opacity = 0.75;
    };
    SplineFragmentView.prototype.a9 = function () {
        _super.prototype.a9.call(this);
        var a = this.bl();
        this.da._stroke = a;
        this.da.ac = this.e.ey + 3;
        this.db._stroke = a;
        this.db.ac = this.e.ey + 3;
        this.c9._fill = a;
        this.c9._opacity = 0.75;
    };
    SplineFragmentView.prototype.a3 = function (a, b) {
        _super.prototype.a3.call(this, a, b);
        if (a.d) {
            a.s(this.c9);
            a.s(this.da);
            a.s(this.db);
        }
    };
    SplineFragmentView.prototype.get_index = function () {
        var a = this.c7.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.c7.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.bi.index;
        return e + d;
    };
    SplineFragmentView.prototype.ai = function (a) {
        _super.prototype.ai.call(this, a);
        this.e.a2.exportPathData(a, this.da, "lowerShape", ["Lower", "Main"]);
        this.e.a2.exportPathData(a, this.db, "upperShape", ["Upper"]);
        this.e.a2.exportPathData(a, this.c9, "translucentShape", ["Translucent"]);
    };
    SplineFragmentView.$t = markType(SplineFragmentView, 'SplineFragmentView', SplineSeriesBaseView.$);
    return SplineFragmentView;
}(SplineSeriesBaseView));
export { SplineFragmentView };
/**
 * @hidden
 */
var StackedSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedSeriesView, _super);
    function StackedSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.cw = null;
        _this.cx = new Canvas();
        _this.cz = new Panel();
        _this.cw = a;
        return _this;
    }
    Object.defineProperty(StackedSeriesView.prototype, "cy", {
        get: function () {
            return this.cx;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StackedSeriesView.prototype, "c0", {
        get: function () {
            return this.cz;
        },
        enumerable: true,
        configurable: true
    });
    StackedSeriesView.prototype.co = function () {
        return new StackedBucketCalculator(this);
    };
    StackedSeriesView.prototype.am = function () {
        _super.prototype.am.call(this);
        for (var a = 0; a < this.cw.o7.f.count; a++) {
            this.cw.o7.f._inner[a].bi.am();
        }
    };
    StackedSeriesView.prototype.ao = function (a, b) {
        var e_50, _a;
        _super.prototype.ao.call(this, a, b);
        try {
            for (var _b = tslib_1.__values(fromEnum(this.cw.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                c.visualSeriesLink.bi.ao(a, b);
            }
        }
        catch (e_50_1) {
            e_50 = { error: e_50_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_50)
                    throw e_50.error;
            }
        }
    };
    StackedSeriesView.prototype.ac = function () {
        var a = "rgba(95,95,95,0.5)";
        var b = true;
        var c = 5, d = 5, e = 5;
        var f = this.e;
        if (typeCast(StackedAreaSeries.$, f) !== null || typeCast(StackedSplineAreaSeries.$, f) !== null) {
            d = 1;
            e = -3;
        }
        else if (typeCast(StackedLineSeries.$, f) !== null || typeCast(StackedSplineSeries.$, f) !== null) {
            c = 3;
            d = 1;
            e = 4;
            b = false;
        }
        else if (typeCast(StackedColumnSeries.$, f) !== null) {
            d = 5;
            e = 0;
        }
        var g = new Color();
        g.colorString = a;
        f.lb = g;
        f.ev = c;
        f.ew = d;
        f.ex = e;
        f.du = b;
    };
    StackedSeriesView.$t = markType(StackedSeriesView, 'StackedSeriesView', CategorySeriesView.$);
    return StackedSeriesView;
}(CategorySeriesView));
export { StackedSeriesView };
/**
 * @hidden
 */
var StackedBarSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedBarSeriesView, _super);
    function StackedBarSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.c1 = null;
        _this.c1 = a;
        return _this;
    }
    StackedBarSeriesView.prototype.co = function () {
        return new StackedBarBucketCalculator(this);
    };
    StackedBarSeriesView.$t = markType(StackedBarSeriesView, 'StackedBarSeriesView', StackedSeriesView.$);
    return StackedBarSeriesView;
}(StackedSeriesView));
export { StackedBarSeriesView };
/**
 * @hidden
 */
var StackedColumnSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedColumnSeriesView, _super);
    function StackedColumnSeriesView(a) {
        return _super.call(this, a) || this;
    }
    StackedColumnSeriesView.prototype.co = function () {
        return new StackedColumnBucketCalculator(this);
    };
    StackedColumnSeriesView.$t = markType(StackedColumnSeriesView, 'StackedColumnSeriesView', StackedSeriesView.$);
    return StackedColumnSeriesView;
}(StackedSeriesView));
export { StackedColumnSeriesView };
/**
 * @hidden
 */
var StackedSeriesManager = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(StackedSeriesManager, _super);
    function StackedSeriesManager(a) {
        var _this = _super.call(this) || this;
        _this.b = null;
        _this.f = null;
        _this.c = null;
        _this.e = null;
        _this.d = null;
        _this.j = null;
        _this.k = null;
        if (a == null) {
            return _this;
        }
        _this.b = a;
        _this.f = new ObservableCollection$1(AnchoredCategorySeries.$, 0);
        _this.c = new StackedSeriesCollection();
        _this.e = new ObservableCollection$1(AnchoredCategorySeries.$, 0);
        _this.d = new ObservableCollection$1(AnchoredCategorySeries.$, 0);
        _this.j = _this.b.o8.cy;
        _this.k = _this.b.o8.c0;
        var b = _this.c;
        b.collectionChanged = delegateCombine(b.collectionChanged, function (b, c) {
            var e_51, _a, e_52, _b;
            if (c.oldItems != null) {
                try {
                    for (var _c = tslib_1.__values(fromEn(c.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var d = _d.value;
                        if (_this.f.contains(d.visualSeriesLink)) {
                            _this.f.remove(d.visualSeriesLink);
                        }
                    }
                }
                catch (e_51_1) {
                    e_51 = { error: e_51_1 };
                }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return))
                            _a.call(_c);
                    }
                    finally {
                        if (e_51)
                            throw e_51.error;
                    }
                }
            }
            if (c.newItems != null) {
                var e = c.newStartingIndex;
                try {
                    for (var _e = tslib_1.__values(fromEn(c.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var f = _f.value;
                        var g = _this.a(f);
                        _this.f.insert(e, g);
                        e++;
                    }
                }
                catch (e_52_1) {
                    e_52 = { error: e_52_1 };
                }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return))
                            _b.call(_e);
                    }
                    finally {
                        if (e_52)
                            throw e_52.error;
                    }
                }
            }
        });
        var c = _this.f;
        c.collectionChanged = delegateCombine(c.collectionChanged, function (c, d) {
            var e_53, _a, e_54, _b;
            if (d.oldItems != null) {
                try {
                    for (var _c = tslib_1.__values(fromEn(d.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var e = _d.value;
                        e.hw(true, e.bi);
                        e.bs = null;
                        e.bn = null;
                        e.itemsSource = null;
                        e.legend = null;
                        if (_this.k != null && _this.k.ab.contains(e)) {
                            _this.k.ab.remove(e);
                        }
                        if (_this.b.bs != null) {
                            _this.b.bs.jy(e);
                        }
                    }
                }
                catch (e_53_1) {
                    e_53 = { error: e_53_1 };
                }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return))
                            _a.call(_c);
                    }
                    finally {
                        if (e_53)
                            throw e_53.error;
                    }
                }
            }
            if (d.newItems != null) {
                try {
                    for (var _e = tslib_1.__values(fromEn(d.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var f = _f.value;
                        f.bs = _this.b.bs;
                        f.bn = _this.b.bn;
                        if (!_this.k.ab.contains(f)) {
                            _this.k.ab.add(f);
                        }
                        if (_this.b.bs != null) {
                            _this.b.bs.hc(f);
                        }
                    }
                }
                catch (e_54_1) {
                    e_54 = { error: e_54_1 };
                }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return))
                            _b.call(_e);
                    }
                    finally {
                        if (e_54)
                            throw e_54.error;
                    }
                }
            }
            _this.b.je(false);
        });
        return _this;
    }
    StackedSeriesManager.prototype.a = function (a) {
        if (typeCast(StackedLineSeries.$, this.b) !== null) {
            var b = new LineFragment();
            b.provideRenderer(a.au);
            b.parentSeries = this.b;
            a.visualSeriesLink = b;
            b.logicalSeriesLink = a;
            b.bi.br = this.b.bi.br;
            this.i(b, a);
            this.g(b);
            return b;
        }
        if (typeCast(StackedColumnSeries.$, this.b) !== null) {
            var c = new ColumnFragment();
            c.provideRenderer(a.au);
            c.parentSeries = this.b;
            a.visualSeriesLink = c;
            c.logicalSeriesLink = a;
            c.bi.br = this.b.bi.br;
            this.i(c, a);
            this.g(c);
            return c;
        }
        if (typeCast(StackedBarSeries.$, this.b) !== null) {
            var d = new BarFragment();
            d.provideRenderer(a.au);
            d.parentSeries = typeCast(StackedBarSeries.$, this.b);
            a.visualSeriesLink = d;
            d.logicalSeriesLink = a;
            d.bi.br = this.b.bi.br;
            this.i(d, a);
            this.g(d);
            return d;
        }
        if (typeCast(StackedAreaSeries.$, this.b) !== null) {
            var e = new AreaFragment();
            e.provideRenderer(a.au);
            e.parentSeries = this.b;
            a.visualSeriesLink = e;
            e.logicalSeriesLink = a;
            e.bi.br = this.b.bi.br;
            this.i(e, a);
            this.g(e);
            return e;
        }
        if (typeCast(StackedSplineSeries.$, this.b) !== null) {
            var f = new SplineFragment();
            f.provideRenderer(a.au);
            f.parentSeries = this.b;
            a.visualSeriesLink = f;
            f.logicalSeriesLink = a;
            f.bi.br = this.b.bi.br;
            this.i(f, a);
            this.g(f);
            return f;
        }
        if (typeCast(StackedSplineAreaSeries.$, this.b) !== null) {
            var g = new SplineAreaFragment();
            g.provideRenderer(a.au);
            g.parentSeries = this.b;
            a.visualSeriesLink = g;
            g.logicalSeriesLink = a;
            g.bi.br = this.b.bi.br;
            this.i(g, a);
            this.g(g);
            return g;
        }
        return null;
    };
    StackedSeriesManager.prototype.i = function (a, b) {
        a.k6 = b.fz;
        a.lc = b.f2;
        a.ld = b.f4;
        a.le = b.f5;
        a.itemsSource = this.b.itemsSource;
        a.legend = this.b.aw;
        a.legendItemTemplate = b.ds;
        a.l0 = b.gc;
        a.m1 = b.fq;
        a.m2 = b.fr;
        a.m3 = b.ga;
        a.mn = b.dt;
        a.l2 = b.k;
        a.es = this.b.es;
        a._opacity = b.an;
        a.k9 = b.ft;
        a.eu = this.b.eu;
        a.lf = b.f6;
        a.ey = b.al;
        a.fx = b.ax;
        a.l6 = b.u;
        a.ph = b.cq;
        a._visibility = b.gd;
        var c = typeCast(AreaFragment.$, a);
        if (c != null) {
            c.d6 = b.ae;
        }
        var d = typeCast(SplineAreaFragment.$, a);
        if (d != null) {
            d.d6 = b.ae;
        }
        var e = typeCast(ColumnFragment.$, a);
        if (e != null) {
            e.qx = b.ag;
            e.qy = b.ah;
        }
        var f = typeCast(BarFragment.$, a);
        if (f != null) {
            f.qx = b.ag;
            f.qy = b.ah;
        }
        a.toolTip = b.ay;
        a.cp = b.s;
        a.du = b.v;
        b.dg();
        b.dh();
        b.di();
        b.dj();
    };
    StackedSeriesManager.prototype.h = function () {
        var e_55, _a;
        this.e.clear();
        this.d.clear();
        var a = 0;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                b.dl = true;
                b.fh = this.b.pi(this.c._inner[a]);
                b.bn = this.b.bn;
                b.bs = this.b.bs;
                if (this.c._inner[a].y) {
                    this.e.add(b);
                }
                else {
                    this.d.add(b);
                }
                if (typeCast(StackedLineSeries.$, this.b) !== null || typeCast(StackedAreaSeries.$, this.b) !== null || typeCast(StackedSplineSeries.$, this.b) !== null || typeCast(StackedSplineAreaSeries.$, this.b) !== null) {
                    b.pk(this.b.fetchXAxis());
                    b.pl(this.b.fetchYAxis());
                }
                b.je(false);
                a++;
            }
        }
        catch (e_55_1) {
            e_55 = { error: e_55_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_55)
                    throw e_55.error;
            }
        }
    };
    StackedSeriesManager.prototype.g = function (a) {
        var fragment_ = a;
        fragment_.externalObject = TypeRegistrar.createFromInternal(fragment_, PlatformConstants.Prefix, PlatformConstants.Postfix);
        fragment_.externalObject._implementation = fragment_;
    };
    StackedSeriesManager.$t = markType(StackedSeriesManager, 'StackedSeriesManager');
    return StackedSeriesManager;
}(Base));
export { StackedSeriesManager };
//# sourceMappingURL=StackedSeriesCreatedEventArgs_combined.js.map
