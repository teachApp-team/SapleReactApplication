import * as React from 'react';
import { IgrLegendBase, IIgrLegendBaseProps } from './igr-legend-base';
import { ItemLegend } from "./ItemLegend";
/**
 * Represents a legend that displays an item for each point in the series.
*
* You can use the `IgrItemLegend` to display a legend item for each data member bound to the `IgrBubbleSeries`
*
* ```ts
*   <IgrItemLegend ref={this.onLegendRef} />
* ```
*
* ```ts
* this.onLegendRef = this.onLegendRef.bind(this);
* public onLegendRef(legend: IgrItemLegend) {
*         this.legend = legend;
*         if (this.chart) {
*             this.chart.actualSeries[0].legend = this.legend;
*         }
*     }
* ```
*/
export declare class IgrItemLegend extends IgrLegendBase<IIgrItemLegendProps> {
    private container;
    private _elRef;
    render(): React.DetailedReactHTMLElement<{
        className: string;
        ref: (div: HTMLDivElement) => void;
    }, HTMLDivElement>;
    private _getMainRef;
    componentDidMount(): void;
    private initializeContent;
    constructor(props: IIgrItemLegendProps);
    private _wrapper;
    destroy(): void;
    protected createImplementation(): ItemLegend;
    readonly i: ItemLegend;
    createItemwiseLegendItems(legendItems: any, series: any): void;
    exportVisualData(): any;
    exportSerializedVisualData(): any;
    /**
 * Gets whether or not this legend supports itemwise visuals
*/
    readonly isItemwise: boolean;
}
export interface IIgrItemLegendProps extends IIgrLegendBaseProps {
}
