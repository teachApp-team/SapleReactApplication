/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { FinancialSeries } from "./FinancialSeries";
import { DependencyProperty } from "igniteui-react-core";
import { ISortingAxis_$type } from "./ISortingAxis";
import { typeCast, markType, markDep } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { AxisRange } from "./AxisRange";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
export let FinancialOverlay = /*@__PURE__*/ (() => {
    class FinancialOverlay extends FinancialSeries {
        constructor() {
            super();
            this.pj = false;
            this.pj = false;
        }
        hz(a, b, c, d) {
            super.hz(a, b, c, d);
            if (this.l9 != null && typeCast(ISortingAxis_$type, this.l9) !== null) {
                this.l9.i$i();
            }
            this.mp.bu.e(this.eu);
            this.pk();
            if (this.mu != null) {
                this.mu.cn();
            }
            this.je(true);
        }
        get_dv() {
            return true;
        }
        i0(a, b, c, d) {
            switch (b) {
                case "FastItemsSource":
                    this.pj = false;
                    break;
                case FinancialOverlay.$$p[0]:
                    this.pj = false;
                    this.je(false);
                    this.il();
                    break;
                case "XAxis":
                    this.pj = false;
                    break;
            }
            super.i0(a, b, c, d);
        }
        bd() {
            if (this.be == 0) {
                return 1;
            }
            else {
                return super.bd();
            }
        }
        dh(a, b) {
            if (this.dg(a, b)) {
                return true;
            }
            return false;
        }
        ac() {
            super.ac();
            this.je(false);
        }
        c9(a) {
            let b = this.bz != null ? this.bz.indexOf(a) : -1;
            let c = this.bi.bs;
            c = c.copy();
            let d = this.bi.br;
            let e = new Rect(0, 0, 0, 1, 1);
            let f = this.lt(this.bi);
            let g = new ScalerParams(0, e, e, this.l9.ca, f);
            let h = new ScalerParams(0, e, e, this.mu.ca, f);
            h.b = this.eh();
            if (b >= 0 && Rect.l_op_Inequality(c, null) && Rect.l_op_Inequality(d, null)) {
                if (this.l9 != null) {
                    let i = this.l9.dy(b, g);
                    if (i < c.left + 0.1 * c.width) {
                        i = i + 0.4 * c.width;
                    }
                    if (i > c.right - 0.1 * c.width) {
                        i = i - 0.4 * c.width;
                    }
                    c.x = i - 0.5 * c.width;
                }
                if (this.mu != null && this.m1 != null && this.mz != null && b < this.m1.count && b < this.mz.count) {
                    let j = this.mu.dy(this.m1.item(b), h);
                    let k = this.mu.dy(this.mz.item(b), h);
                    if (!isNaN_(j) && !isNaN_(k)) {
                        let l = Math.abs(j - k);
                        if (c.height < l) {
                            c.height = l;
                            c.y = Math.min(j, k);
                        }
                        else {
                            if (j < c.top + 0.1 * c.height) {
                                j = j + 0.4 * c.height;
                            }
                            if (j > c.bottom - 0.1 * c.height) {
                                j = j - 0.4 * c.height;
                            }
                            c.y = j - 0.5 * c.height;
                        }
                    }
                }
                this.bn.ap(this.bs, c, true);
            }
            return b >= 0;
        }
        an(a) {
            if (a != null && a == this.mu && this.m1 != null && this.mz != null) {
                return new AxisRange(this.m1.minimum, this.mz.maximum);
            }
            return null;
        }
    }
    FinancialOverlay.$t = /*@__PURE__*/ markType(FinancialOverlay, 'FinancialOverlay', FinancialSeries.$);
    FinancialOverlay.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, FinancialOverlay, 'raisePropertyChanged', ['IgnoreFirst:pl:pn', [1, 0]]);
    return FinancialOverlay;
})();
//# sourceMappingURL=FinancialOverlay.js.map
