import { Base, Type } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class FinancialChartRangeSelectorVisualData extends Base {
    static $t: Type;
    private _visibility;
    visibility: string;
    private _buttonVisibilities;
    buttonVisibilities: boolean[];
    private _buttonLabels;
    buttonLabels: string[];
    private _buttonsChecked;
    buttonsChecked: boolean[];
    private _buttonLefts;
    buttonLefts: number[];
    private _buttonTops;
    buttonTops: number[];
    private _buttonWidths;
    buttonWidths: number[];
    private _buttonHeights;
    buttonHeights: number[];
    private _left;
    left: number;
    private _top;
    top: number;
    private _width;
    width: number;
    private _height;
    height: number;
    serialize(): string;
}
/**
 * @hidden
 */
export declare class FinancialChartEnumPickerVisualData extends Base {
    static $t: Type;
    a: string[];
    g: string;
    d: number;
    e: number;
    f: number;
    c: number;
    b: boolean;
    h(): string;
}
/**
 * @hidden
 */
export declare class FinancialChartToolbarVisualData extends Base {
    static $t: Type;
    private _chartTypePicker;
    chartTypePicker: FinancialChartEnumPickerVisualData;
    private _rangeSelector;
    rangeSelector: FinancialChartRangeSelectorVisualData;
    serialize(): string;
}
/**
 * @hidden
 */
export declare class FinancialChartVisualData extends Base {
    static $t: Type;
    constructor();
    private _mainChart;
    mainChart: any;
    private _volumeChart;
    volumeChart: any;
    private _indicatorCharts;
    indicatorCharts: List$1<any>;
    private _toolbar;
    toolbar: FinancialChartToolbarVisualData;
    private _zoomChart;
    zoomChart: any;
    private _mainChartLeft;
    mainChartLeft: number;
    private _mainChartTop;
    mainChartTop: number;
    private _volumeChartLeft;
    volumeChartLeft: number;
    private _volumeChartTop;
    volumeChartTop: number;
    private _indicatorChartLefts;
    indicatorChartLefts: List$1<number>;
    private _indicatorChartTops;
    indicatorChartTops: List$1<number>;
    private _zoomChartLeft;
    zoomChartLeft: number;
    private _zoomChartTop;
    zoomChartTop: number;
    private _toolbarLeft;
    toolbarLeft: number;
    private _toolbarTop;
    toolbarTop: number;
    private _toolbarWidth;
    toolbarWidth: number;
    private _toolbarHeight;
    toolbarHeight: number;
    private _legendLeft;
    legendLeft: number;
    private _legendTop;
    legendTop: number;
    private _legendWidth;
    legendWidth: number;
    private _legendHeight;
    legendHeight: number;
    private _legend;
    legend: any;
    private ab;
    scaleByViewport(): void;
    private w;
    serialize(): string;
    static y(a: string[], b: any[]): string;
    private static aa;
    private static z;
}
