/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { HorizontalAnchoredCategorySeries } from "./HorizontalAnchoredCategorySeries";
import { markType } from "igniteui-react-core";
import { AnchoredCategorySeriesView } from "./AnchoredCategorySeriesView";
import { Color } from "igniteui-react-core";
/**
 * @hidden
 */
export let PointSeries = /*@__PURE__*/ (() => {
    class PointSeries extends HorizontalAnchoredCategorySeries {
        constructor() {
            super();
            this.ab = PointSeries.$;
        }
        bf() {
            return new PointSeriesView(this);
        }
        iv(a) {
            super.iv(a);
            this.ql = a;
        }
        dh(a, b) {
            let c = this.lm(this.lp(a), true, false);
            if (this.l5(a, b)) {
                return true;
            }
            return false;
        }
        i0(a, b, c, d) {
            super.i0(a, b, c, d);
        }
        get_cy() {
            return false;
        }
        get useHighMarkerFidelity() {
            return this.n6;
        }
    }
    PointSeries.$t = /*@__PURE__*/ markType(PointSeries, 'PointSeries', HorizontalAnchoredCategorySeries.$);
    return PointSeries;
})();
/**
 * @hidden
 */
export let PointSeriesView = /*@__PURE__*/ (() => {
    class PointSeriesView extends AnchoredCategorySeriesView {
        constructor(a) {
            super(a);
            this.c6 = null;
            this.c6 = a;
        }
        ap() {
            super.ap();
            if (!this.n) {
                this.by.l2 = 2;
                this.e.bj = 4;
            }
        }
        ac() {
            let a = new Color();
            a.colorString = "rgba(95,95,95,0.5)";
            this.e.lb = a;
            this.e.ev = 3;
            this.e.ew = 2;
            this.e.ex = 2;
            this.e.du = false;
        }
    }
    PointSeriesView.$t = /*@__PURE__*/ markType(PointSeriesView, 'PointSeriesView', AnchoredCategorySeriesView.$);
    return PointSeriesView;
})();
//# sourceMappingURL=PointSeries_combined.js.map
