/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Series } from "./Series";
import { NumericXAxis } from "./NumericXAxis";
import { DependencyProperty } from "igniteui-react-core";
import { NumericYAxis } from "./NumericYAxis";
import { Color } from "igniteui-react-core";
import { ScatterFrame } from "./ScatterFrame";
import { KDTree2D } from "./KDTree2D";
import { typeGetValue, runOn, delegateRemove, typeCast, delegateCombine, markType, markDep, toNullable } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { List$1 } from "igniteui-react-core";
import { KDPointData } from "./KDPointData";
import { ScalerParams } from "./ScalerParams";
import { ProgressiveLoadStatusEventArgs } from "./ProgressiveLoadStatusEventArgs";
import { SearchArgs } from "./SearchArgs";
import { KDTreeNode2D } from "./KDTreeNode2D";
import { AxisRange } from "./AxisRange";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate, isNaN_, isInfinity, logBase, intDivide } from "igniteui-react-core";
import { boxArray$1, arrayShallowClone } from "igniteui-react-core";
import { dateNow } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
import { CanvasViewRenderer } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
/**
 * @hidden
 */
var HighDensityScatterSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(HighDensityScatterSeries, _super);
    function HighDensityScatterSeries() {
        var _this = _super.call(this) || this;
        _this.me = null;
        _this.mg = null;
        _this.nm = 0;
        _this.mi = false;
        _this.m2 = 0;
        _this.m1 = 0;
        _this.m0 = 0;
        _this.mz = 255;
        _this.my = 0;
        _this.mx = 0;
        _this.m5 = 255;
        _this.m4 = 0;
        _this.m3 = 0;
        _this.l6 = null;
        _this.mb = null;
        _this.mc = null;
        _this.l7 = null;
        _this.l9 = null;
        _this.mk = false;
        _this.nn = 0;
        _this.np = 0;
        _this.nj = 0;
        _this.ni = 0;
        _this.progressiveLoadStatusChanged = null;
        _this.mp = null;
        _this.mv = 0;
        _this.mu = 0;
        _this.mw = 0;
        _this.m8 = 0;
        _this.m6 = 0;
        _this.m7 = 0;
        _this.m9 = 0;
        _this.nb = 0;
        _this.nd = 0;
        _this.nc = 0;
        _this.na = 0;
        _this.mr = 0;
        _this.ms = 0;
        _this.mt = 0;
        _this.mq = 0;
        _this.nl = 0;
        _this.nk = 0;
        _this.l3 = null;
        _this.no = 0;
        _this.mj = false;
        _this._itemIndexes = null;
        _this.l4 = null;
        _this.l1 = null;
        _this.md = null;
        _this.ab = HighDensityScatterSeries.$;
        _this.c7 = false;
        return _this;
    }
    HighDensityScatterSeries.prototype.get_c4 = function () {
        return true;
    };
    Object.defineProperty(HighDensityScatterSeries.prototype, "mf", {
        get: function () {
            return this.me;
        },
        set: function (a) {
            if (this.me != a) {
                var b = this.mf;
                this.me = a;
                this.raisePropertyChanged("XColumn", b, this.mf);
            }
        },
        enumerable: true,
        configurable: true
    });
    HighDensityScatterSeries.prototype.fs = function (a, b) {
        var c = this.gv(b);
        if (c == HighDensityScatterSeries.$$p[8]) {
            return this.ft(a, b, this.n4);
        }
        if (c == HighDensityScatterSeries.$$p[10]) {
            return this.ft(a, b, this.n8);
        }
        return _super.prototype.fs.call(this, a, b);
    };
    Object.defineProperty(HighDensityScatterSeries.prototype, "mh", {
        get: function () {
            return this.mg;
        },
        set: function (a) {
            if (this.mg != a) {
                var b = this.mh;
                this.mg = a;
                this.raisePropertyChanged("YColumn", b, this.mh);
            }
        },
        enumerable: true,
        configurable: true
    });
    HighDensityScatterSeries.prototype.om = function () {
        if (this.l6 == null) {
            return;
        }
        this.l6.s();
        var a = this.l6;
        a.progressiveThunkCompleted = delegateRemove(a.progressiveThunkCompleted, runOn(this, this.oa));
        this.l6 = null;
    };
    HighDensityScatterSeries.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
        switch (b) {
            case "SeriesViewer":
                if (this.bs != null) {
                    var e = this.getEffectiveViewport1(this.bi);
                    this.mj = !e.isEmpty;
                }
                break;
            case "FastItemsSource":
                this.om();
                if (typeCast(IFastItemsSource_$type, c) != null) {
                    c.deregisterColumn(this.mf);
                    c.deregisterColumn(this.mh);
                    this.mf = null;
                    this.mh = null;
                }
                if (typeCast(IFastItemsSource_$type, d) != null) {
                    this.mf = this.bw(this.n4);
                    this.mh = this.bw(this.n8);
                }
                if ((this.ma != null && !this.ma.cn()) || (this.l8 != null && !this.l8.cn())) {
                    this.je(false);
                }
                this.im();
                break;
            case HighDensityScatterSeries.$$p[7]:
                var f = this.l7;
                this.l7 = this.l8;
                this.om();
                if (f != null) {
                    f.rangeChanged = delegateRemove(f.rangeChanged, runOn(this, this.od));
                }
                if (this.l7 != null) {
                    var g = this.l7;
                    g.rangeChanged = delegateCombine(g.rangeChanged, runOn(this, this.od));
                }
                if (c != null) {
                    c.bx(this);
                }
                if (d != null) {
                    d.ck(this);
                }
                if ((this.l8 != null && !this.l8.cn()) || (d == null && c != null)) {
                    this.je(false);
                }
                break;
            case HighDensityScatterSeries.$$p[9]:
                var h = this.l9;
                this.l9 = this.ma;
                this.om();
                if (h != null) {
                    h.rangeChanged = delegateRemove(h.rangeChanged, runOn(this, this.od));
                }
                if (this.l9 != null) {
                    var i = this.l9;
                    i.rangeChanged = delegateCombine(i.rangeChanged, runOn(this, this.od));
                }
                if (c != null) {
                    c.bx(this);
                }
                if (d != null) {
                    d.ck(this);
                }
                if ((this.ma != null && !this.ma.cn()) || (d == null && c != null)) {
                    this.je(false);
                }
                break;
            case "MouseOverEnabled":
                this.mk = this.c7;
                this.je(false);
                break;
            case HighDensityScatterSeries.$$p[8]:
                if (this.bz != null) {
                    this.bz.deregisterColumn(this.mf);
                    this.mf = this.bw(this.n4);
                }
                break;
            case "XColumn":
                this.om();
                if (this.l8 != null && !this.l8.cn()) {
                    this.je(false);
                }
                this.im();
                break;
            case HighDensityScatterSeries.$$p[10]:
                if (this.bz != null) {
                    this.bz.deregisterColumn(this.mh);
                    this.mh = this.bw(this.n8);
                }
                break;
            case "YColumn":
                this.om();
                if (this.ma != null && !this.ma.cn()) {
                    this.je(false);
                }
                this.im();
                break;
            case HighDensityScatterSeries.$$p[6]:
                this.om();
                this.je(false);
                this.il();
                break;
            case HighDensityScatterSeries.$$p[3]:
                this.je(false);
                this.il();
                break;
            case HighDensityScatterSeries.$$p[1]:
                this.je(false);
                this.il();
                break;
            case HighDensityScatterSeries.$$p[0]:
            case HighDensityScatterSeries.$$p[2]:
                if (!this.l5.by(this.o1, this.o0)) {
                    return;
                }
                this.m2 = this.o1.o;
                this.m1 = this.o1.n;
                this.m0 = this.o1.m;
                this.mz = this.o0.o;
                this.my = this.o0.n;
                this.mx = this.o0.m;
                this.m5 = this.mz - this.m2;
                this.m4 = this.my - this.m1;
                this.m3 = this.mx - this.m0;
                this.je(false);
                this.il();
                break;
            case HighDensityScatterSeries.$$p[4]:
                this.nm = Math.max(typeGetValue(d) - 1, 0);
                this.mi = this.nm > 0;
                this.je(false);
                this.il();
                break;
            case HighDensityScatterSeries.$$p[5]:
                this.je(false);
                this.il();
                break;
        }
    };
    HighDensityScatterSeries.prototype.mm = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    HighDensityScatterSeries.prototype.ml = function (a) {
        if (typeCast(NumericXAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    HighDensityScatterSeries.prototype.od = function (a, b) {
        this.om();
        this.je(false);
    };
    HighDensityScatterSeries.prototype.dw = function (a, b, c) {
        var d = _super.prototype.dw.call(this, a, b, c);
        if (this.ma == null || this.l8 == null || this.l8.bh == null || this.ma.bh == null || this.mh == null || this.mf == null || this.mh.count < 1 || this.mf.count < 1 || this.mh.count != this.mf.count || this.l8.kb == this.l8.ka || this.ma.kb == this.ma.ka || this.lz.isEmpty) {
            d = false;
        }
        return d;
    };
    Object.defineProperty(HighDensityScatterSeries.prototype, "nt", {
        get: function () {
            return this.nn;
        },
        set: function (a) {
            var b = this.nn;
            this.nn = a;
            this.raisePropertyChanged("ProgressiveStatus", b, this.nn);
        },
        enumerable: true,
        configurable: true
    });
    HighDensityScatterSeries.prototype.jf = function (a) {
        _super.prototype.jf.call(this, a);
        this.of(a, this.bi);
    };
    HighDensityScatterSeries.prototype.of = function (a, b) {
        if (this.cc(b)) {
            return;
        }
        if (this.l6 == null && !this.mo) {
            var c = new List$1(KDPointData.$, 2, this.mf.count);
            var d = this.l8;
            var e = this.ma;
            var f = new Rect(0, 0, 0, 1, 1);
            var g = new Rect(0, 0, 0, 1, 1);
            var h = new ScalerParams(1, f, g, d.ca);
            var i = new ScalerParams(1, f, g, e.ca);
            var j_1;
            var k_1;
            var _loop_1 = function (l) {
                j_1 = d.dy(this_1.mf.item(l), h);
                k_1 = e.dy(this_1.mh.item(l), i);
                if (!isNaN_(j_1) && !isNaN_(k_1) && !isInfinity(j_1) && !isInfinity(k_1)) {
                    c.add(((function () {
                        var $ret = new KDPointData();
                        $ret.a = j_1;
                        $ret.b = k_1;
                        $ret.c = l;
                        return $ret;
                    })()));
                }
            };
            var this_1 = this;
            for (var l = 0; l < this.mf.count; l++) {
                _loop_1(l);
            }
            if (this.mn) {
                this.ni = 1;
                this.nj = truncate(logBase(c.count, 2)) + 3;
                this.nt = truncate(((this.ni / this.nj) * 100));
                if (this.progressiveLoadStatusChanged != null) {
                    this.progressiveLoadStatusChanged(this, new ProgressiveLoadStatusEventArgs(this.nt));
                }
                this.l6 = KDTree2D.b(c.toArray(), 1);
                var m = this.l6;
                m.progressiveThunkCompleted = delegateCombine(m.progressiveThunkCompleted, runOn(this, this.oa));
                if (!this.l6.f(this.e4)) {
                    var n = this.l6;
                    n.progressiveThunkCompleted = delegateRemove(n.progressiveThunkCompleted, runOn(this, this.oa));
                }
                this.il();
            }
            else {
                var o = dateNow();
                this.l6 = new KDTree2D(0, c.toArray(), 1);
                var p = dateNow();
            }
        }
        if (this.mn && !this.mo) {
            this.og(b);
        }
        else {
            this.oh(b);
        }
    };
    HighDensityScatterSeries.prototype.hz = function (a, b, c, d) {
        _super.prototype.hz.call(this, a, b, c, d);
        this.om();
        var e = false;
        if (this.l8 != null && !this.l8.cn()) {
            e = true;
        }
        if (this.ma != null && !this.ma.cn()) {
            e = true;
        }
        if (e) {
            this.je(false);
        }
        this.im();
    };
    HighDensityScatterSeries.prototype.oc = function (a) {
        var b = a;
        var c = this.nl * this.nk;
        if (this.mk) {
            if (this._itemIndexes == null || this._itemIndexes.length != c) {
                this._itemIndexes = new Array(c);
                for (var d = 0; d < c; d++) {
                    this._itemIndexes[d] = 0;
                }
            }
            else {
                for (var e = 0; e < c; e++) {
                    this._itemIndexes[e] = 0;
                }
            }
        }
    };
    HighDensityScatterSeries.prototype.oh = function (a) {
        var b;
        var c;
        var d = null;
        if (a.n) {
            d = this._itemIndexes;
        }
        var e = a.getViewInfo(c, b);
        c = e.p0;
        b = e.p1;
        var f = a;
        var g = this.getEffectiveViewport1(a);
        this.mb = new ScalerParams(0, b, c, this.l7.ca, g);
        this.mc = new ScalerParams(0, b, c, this.l9.ca, g);
        this.ob(a);
        this.oc(a);
        var h = this.nl * this.nk;
        if (this.l4 == null || this.l4.length != h) {
            this.l4 = new Array(h);
            this.l1 = new Array(h);
        }
        var i = this.l4.length;
        var j = this.l4;
        var k = this.l1;
        for (var l = 0; l < i; l++) {
            j[l] = 0;
            k[l] = 0;
        }
        this.np = truncate(Math.round(this.eu));
        this.l3 = f.bv();
        var m = this.l3.length;
        var n = this.l3;
        for (var o = 0; o < m; o++) {
            n[o] = 0;
        }
        var p = this.ng;
        var q = this.nf;
        if (isNaN_(p) || isInfinity(p)) {
            p = 0;
        }
        if (isNaN_(q) || isInfinity(q)) {
            q = 50;
        }
        this.mv = Math.min(p, q);
        this.mu = Math.max(p, q);
        if (this.mv < 0) {
            this.mv = 0;
        }
        if (this.mu < 0) {
            this.mu = 0;
        }
        this.mw = this.mu - this.mv;
        if (this.mo) {
            this.oe(a);
        }
        else {
            this.oo(a);
        }
        f.b6();
        if (a.n) {
            this._itemIndexes = d;
            this.l5.b7();
        }
    };
    HighDensityScatterSeries.prototype.og = function (a) {
        if (this.l6 == null) {
            return;
        }
        this.oh(a);
    };
    HighDensityScatterSeries.prototype.oa = function (a, b) {
        var _this = this;
        this.l5.b5(function () {
            if (_this.ni < _this.nj - 1) {
                _this.ni++;
            }
            _this.nt = truncate(((_this.ni / _this.nj) * 100));
            if (_this.progressiveLoadStatusChanged != null) {
                _this.progressiveLoadStatusChanged(_this, new ProgressiveLoadStatusEventArgs(_this.nt));
            }
            _this.og(_this.bi);
            _this.il();
            if (_this.l6 != null) {
                if (!_this.l6.f(_this.e4)) {
                    var c = _this.l6;
                    c.progressiveThunkCompleted = delegateRemove(c.progressiveThunkCompleted, runOn(_this, _this.oa));
                    _this.nt = 100;
                    if (_this.progressiveLoadStatusChanged != null) {
                        _this.progressiveLoadStatusChanged(_this, new ProgressiveLoadStatusEventArgs(_this.nt));
                    }
                }
            }
        });
    };
    HighDensityScatterSeries.prototype.oe = function (a) {
        var b = arrayShallowClone(this.mf.asArray());
        this.l8.gs(boxArray$1(b), 0, b.length, this.mb);
        var c = arrayShallowClone(this.mh.asArray());
        this.no = 0;
        var d = this.nm;
        var e = this.mi;
        var f = this.l4.length;
        this.ma.gs(boxArray$1(c), 0, c.length, this.mc);
        var g = 255 << 24 | truncate(this.m2) << 16 | truncate(this.m1) << 8 | truncate(this.m0);
        for (var h = 0; h < b.length; h++) {
            var i = truncate(b[h]);
            var j = truncate(c[h]);
            i = truncate(Math.floor(i));
            j = truncate(Math.floor(j));
            if (i < 0 || i >= this.nl || j < 0 || j >= this.nk) {
                continue;
            }
            if (e) {
                var k = i - d;
                var l = i + d;
                l = l > (this.nl - 1) ? (this.nl - 1) : l;
                k = k < 0 ? 0 : k;
                var m = j + d;
                var n = j - d;
                for (var o = k; o <= l; o++) {
                    for (var p = n; p <= m; p++) {
                        var q = (p * this.nl) + o;
                        if (q < 0 || q > f - 1) {
                            continue;
                        }
                        this.l4[q] = this.l4[q] + 1;
                        this.l1[q] = 1;
                        this.no++;
                        if (this.mk) {
                            this._itemIndexes[q] = h + 1;
                        }
                    }
                }
            }
            else {
                var r = (j * this.nl) + i;
                this.l4[r] = this.l4[r] + 1;
                this.l1[r] = 1;
                this.no++;
                if (this.mk) {
                    this._itemIndexes[r] = h + 1;
                }
            }
        }
        this.oi();
    };
    HighDensityScatterSeries.prototype.oo = function (a) {
        var b;
        var c;
        var d = a.getViewInfo(b, c);
        b = d.p0;
        c = d.p1;
        if (this.l6 == null) {
            return;
        }
        if (this.mp == null) {
            this.mp = new List$1(KDTreeNode2D.$, 2, truncate(Math.round(b.width * b.height)));
        }
        else {
            this.mp.clear();
        }
        var e = c.left;
        var f = c.right;
        var g = c.top;
        var h = c.bottom;
        this.nc = c.top;
        this.na = c.height;
        this.nb = c.left;
        this.nd = c.width;
        this.m8 = b.top;
        this.m6 = b.height;
        this.m7 = b.left;
        this.m9 = b.width;
        var i = this.getEffectiveViewport1(a);
        this.mr = (i.left - this.m7) / this.m9;
        this.ms = (i.top - this.m8) / this.m6;
        var j = (i.right - this.m7) / this.m9;
        this.mt = j - this.mr;
        var k = (i.bottom - this.m8) / this.m6;
        this.mq = k - this.ms;
        if (this.mj) {
            e = (e - this.mr) / this.mt;
            f = (f - this.mr) / this.mt;
            g = (g - this.ms) / this.mq;
            h = (h - this.ms) / this.mq;
        }
        var l = this.eu / b.width * c.width;
        var m = this.eu / b.height * c.height;
        var n = Math.min(l, m);
        var o = ((function () {
            var $ret = new SearchArgs();
            $ret.c = e;
            $ret.a = f;
            $ret.d = g;
            $ret.b = h;
            $ret.e = l;
            $ret.f = m;
            $ret.g = 0x7FFFFFFF;
            return $ret;
        })());
        this.l6.t(this.mp, o, 0, 1, 0, 1);
        var p;
        this.no = 0;
        for (var q = 0; q < this.mp.count; q++) {
            p = this.mp._inner[q];
            this.oj(p);
        }
        this.oi();
    };
    HighDensityScatterSeries.prototype.oj = function (a) {
        if (a.g) {
            return;
        }
        var b = a.e != null && a.e.a;
        var c = a.a == null ? 0 : a.a.length;
        var d = (a.h - c) + 1;
        if (b && d > 0) {
        }
        else {
            d = 1;
        }
        this.ol(a.b, d, b, a.e);
        if (c > 0 && !b) {
            var e = void 0;
            for (var f = 0; f < c; f++) {
                e = a.a[f];
                this.ol(e, d, false, a.e);
            }
        }
        if (a.e != null) {
            a.e.a = false;
        }
    };
    HighDensityScatterSeries.prototype.c9 = function (a) {
        var b = this.bs != null ? this.bs.mr : Rect.empty;
        var c = this.bs != null ? this.bs.m5 : Rect.empty;
        var d = new Rect(0, 0, 0, 1, 1);
        var e = this.lt(this.bi);
        var f = new ScalerParams(0, d, d, this.l8.ca, e);
        var g = new ScalerParams(0, d, d, this.ma.ca, e);
        var h = !b.isEmpty && !c.isEmpty && this.bz != null ? this.bz.indexOf(a) : -1;
        var i = this.l8 != null && this.mf != null && h < this.mf.count ? this.l8.dy(this.mf.item(h), f) : NaN;
        var j = this.ma != null && this.mh != null && h < this.mh.count ? this.ma.dy(this.mh.item(h), g) : NaN;
        if (!isNaN_(i)) {
            if (i < b.left + 0.1 * b.width) {
                i = i + 0.4 * b.width;
                b.x = i - 0.5 * b.width;
            }
            if (i > b.right - 0.1 * b.width) {
                i = i - 0.4 * b.width;
                b.x = i - 0.5 * b.width;
            }
        }
        if (!isNaN_(j)) {
            if (j < b.top + 0.1 * b.height) {
                j = j + 0.4 * b.height;
                b.y = j - 0.5 * b.height;
            }
            if (j > b.bottom - 0.1 * b.height) {
                j = j - 0.4 * b.height;
                b.y = j - 0.5 * b.height;
            }
        }
        if (this.bn != null) {
            this.bn.ap(this.bs, b, true);
        }
        return h >= 0;
    };
    HighDensityScatterSeries.prototype.ol = function (a, b, c, d) {
        var e = this.nr(b);
        var f = a.c;
        var g = this.nm;
        if (c) {
            var h = d.d;
            var i = d.b;
            var j = d.e;
            var k = d.c;
            if (this.mj) {
                h = this.mr + this.mt * h;
                i = this.mr + this.mt * i;
                j = this.ms + this.mq * j;
                k = this.ms + this.mq * k;
            }
            var l = truncate((this.m7 + this.m9 * (h - this.nb) / this.nd));
            var m = truncate((this.m7 + this.m9 * (i - this.nb) / this.nd));
            var n = truncate((this.m8 + this.m6 * (j - this.nc) / this.na));
            var o = truncate((this.m8 + this.m6 * (k - this.nc) / this.na));
            l = truncate(Math.floor(l));
            m = truncate(Math.floor(m));
            n = truncate(Math.floor(n));
            o = truncate(Math.floor(o));
            if (this.mi) {
                l -= g;
                m += g;
                n -= g;
                o += g;
            }
            var p = ((m - l) + 1) * ((o - n) + 1);
            var q = b / p;
            var r = q;
            for (var s = l; s <= m; s++) {
                for (var t = n; t <= o; t++) {
                    this.ok(f, s, t, q, r);
                }
            }
        }
        else {
            var u = a.a;
            var v = a.b;
            if (this.mj) {
                u = this.mr + this.mt * u;
                v = this.ms + this.mq * v;
            }
            var w = truncate((this.m7 + this.m9 * (u - this.nb) / this.nd));
            var x = truncate((this.m8 + this.m6 * (v - this.nc) / this.na));
            w = truncate(Math.floor(w));
            x = truncate(Math.floor(x));
            if (this.mi) {
                var y = w - g;
                var z = w + g;
                var aa = x + g;
                var ab = x - g;
                var ac = ((z - y) + 1) * ((aa - ab) + 1);
                var ad = b / ac;
                var ae = ad;
                for (var af = y; af <= z; af++) {
                    for (var ag = ab; ag <= aa; ag++) {
                        this.ok(f, af, ag, ad, ae);
                    }
                }
            }
            else {
                this.ok(f, w, x, b, 1);
            }
        }
    };
    HighDensityScatterSeries.prototype.nq = function (a, b) {
        return truncate((Math.floor(255 * b))) << 24 | truncate(Math.floor(b * (this.m2 + a * this.m5))) << 16 | truncate(Math.floor(b * (this.m1 + a * this.m4))) << 8 | truncate(Math.floor(b * (this.m0 + a * this.m3)));
    };
    HighDensityScatterSeries.prototype.nr = function (a) {
        return 255 << 24 | truncate(Math.floor((this.m2 + a * this.m5))) << 16 | truncate(Math.floor((this.m1 + a * this.m4))) << 8 | truncate(Math.floor((this.m0 + a * this.m3)));
    };
    HighDensityScatterSeries.prototype.ne = function (a) {
        return (a >> 24 & 255) / 255;
    };
    HighDensityScatterSeries.prototype.ok = function (a, b, c, d, e) {
        if (b < 0 || b >= this.nl || c < 0 || c >= this.nk) {
            return;
        }
        var f = (c * this.nl) + b;
        this.l4[f] = this.l4[f] + d;
        this.l1[f] = this.l1[f] + e;
        if (this.mk) {
            this._itemIndexes[f] = a + 1;
        }
        this.no += truncate(d);
    };
    HighDensityScatterSeries.prototype.oi = function () {
        var a = 0;
        var b = 0;
        var c = this.mw;
        var d = this.mv;
        var e = this.mu;
        var f = this.l4.length;
        var g = this.l4;
        var h = this.l1;
        var i = this.l3;
        var j = NaN;
        var k = NaN;
        var l = 0;
        var m = 0;
        for (var n = 0; n < f; n++) {
            a = g[n];
            if (a != 0) {
                b = h[n];
                if (a >= e) {
                    a = 1;
                }
                else if (a <= d) {
                    a = 0;
                }
                else {
                    a = (a - d) / (c);
                }
                if (b > 1) {
                    b = 1;
                }
                if (b < 0.2) {
                    b = 0.2;
                }
                if (j != a || k != b) {
                    l = this.nq(a, b);
                    j = a;
                    k = b;
                }
                i[m] = l >> 16 & 255;
                i[m + 1] = l >> 8 & 255;
                i[m + 2] = l & 255;
                i[m + 3] = l >> 24 & 255;
            }
            m += 4;
        }
    };
    HighDensityScatterSeries.prototype.ob = function (a) {
        var b = a;
        b.b3();
    };
    HighDensityScatterSeries.prototype.bf = function () {
        return new HighDensityScatterSeriesView(this);
    };
    HighDensityScatterSeries.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.l5 = a;
    };
    HighDensityScatterSeries.prototype.an = function (a) {
        if (a != null && a == this.l8 && this.mf != null) {
            return new AxisRange(this.mf.minimum, this.mf.maximum);
        }
        if (a != null && a == this.ma && this.mh != null) {
            return new AxisRange(this.mh.minimum, this.mh.maximum);
        }
        return null;
    };
    HighDensityScatterSeries.prototype.jt = function (a, b) {
        if (this.bs != null) {
            var c = this.getEffectiveViewport1(this.bi);
            this.mj = !c.isEmpty;
        }
        this.je(false);
    };
    HighDensityScatterSeries.prototype.ju = function (a, b) {
        this.je(false);
    };
    HighDensityScatterSeries.prototype.fp = function (a) {
        if (!this.mk || this._itemIndexes == null || this.bs == null || this.bz == null || this._itemIndexes.length != (this.nl * this.nk)) {
            return null;
        }
        var b = this.bs.mr;
        var c = (a.x - b.left) / b.width;
        var d = (a.y - b.top) / b.height;
        var e = truncate(Math.round(this.lz.left + (this.lz.width * c)));
        var f = truncate(Math.round(this.lz.top + (this.lz.height * d)));
        var g = this.nu(e, f);
        if (g < 0 || g > this._itemIndexes.length - 1) {
            return null;
        }
        var h = this._itemIndexes[g] - 1;
        if (h < 0 || h > this.bz.count) {
            return null;
        }
        return this.bz.item(h);
    };
    HighDensityScatterSeries.prototype.nu = function (a, b) {
        var c = (this.nl * b) + a;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        var d = 1;
        c = (this.nl * (b - d)) + a;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.nl * (b + d)) + a;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.nl * (b)) + a - 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.nl * (b)) + a + 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.nl * (b - d)) + a - 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.nl * (b + d)) + a + 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.nl * (b - d)) + a + 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.nl * (b + d)) + a - 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        return 0;
    };
    HighDensityScatterSeries.prototype.on = function (a, b, c) {
        this.l3 = a;
        this.nl = b;
        this.nk = c;
    };
    HighDensityScatterSeries.prototype.get_dq = function () {
        return true;
    };
    HighDensityScatterSeries.prototype.set_dq = function (a) {
        _super.prototype.set_dq.call(this, a);
    };
    HighDensityScatterSeries.prototype.hw = function (a, b) {
        _super.prototype.hw.call(this, a, b);
        this.l5.b4();
        if (this.bh != null) {
            this.bh.b4();
        }
        this.il();
    };
    HighDensityScatterSeries.prototype.jg = function (a, b) {
        _super.prototype.jg.call(this, a, b);
        if (!this.dl) {
            this.bi.az(b);
            return;
        }
        this.bi.az(b);
        if (this.cc(this.bh)) {
            return;
        }
        var c = typeCast(HighDensityScatterSeriesView.$, this.bh);
        var d = new ScatterFrame();
        this.of(false, c);
        this.dl = false;
    };
    HighDensityScatterSeries.prototype.jd = function (a, b, c, d, e) {
        _super.prototype.jd.call(this, a, b, c, d, e);
        var f = this.a0.a$h.item(d);
        var g = f;
        f.ay(c);
        if (this.cc(g)) {
            return;
        }
        if (this.md == null) {
            this.md = new ScatterFrame();
        }
        this.of(false, f);
    };
    HighDensityScatterSeries.prototype.hu = function () {
        _super.prototype.hu.call(this);
        this.l8 = null;
        this.ma = null;
    };
    HighDensityScatterSeries.$t = markType(HighDensityScatterSeries, 'HighDensityScatterSeries', Series.$);
    HighDensityScatterSeries.$$p = markDep(DependencyProperty, PropertyMetadata, HighDensityScatterSeries, 'raisePropertyChanged', ['HeatMaximumColor:o0:op', [Color.$, null], 'HeatMaximum:nf:oq', [1, 50], 'HeatMinimumColor:o1:or', [Color.$, null], 'HeatMinimum:ng:os', [1, 0], 'PointExtent:ns:ot', [1, 1], 'ProgressiveLoad:mn:ou', [0, true], 'UseBruteForce:mo:ov', [0, false], 'XAxis:l8:ow', [NumericXAxis.$, null], 'XMemberPath:n4:ox', [2, null], 'YAxis:ma:oy', [NumericYAxis.$, null], 'YMemberPath:n8:oz', [2, null]]);
    return HighDensityScatterSeries;
}(Series));
export { HighDensityScatterSeries };
/**
 * @hidden
 */
var HighDensityScatterSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(HighDensityScatterSeriesView, _super);
    function HighDensityScatterSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.bw = null;
        _this.bu = null;
        _this.b2 = 0;
        _this.b1 = 0;
        _this.bz = null;
        _this.b0 = null;
        _this.bx = null;
        _this.bw = a;
        return _this;
    }
    HighDensityScatterSeriesView.prototype.ap = function () {
        _super.prototype.ap.call(this);
        if (!this.n) {
            this.e.eu = 4;
            this.bw.o1 = Color.u(255, 0, 0, 0);
            this.bw.o0 = Color.u(255, 255, 0, 0);
        }
    };
    HighDensityScatterSeriesView.prototype.b7 = function () {
        this.bw.on(this.bu, this.b2, this.b1);
    };
    HighDensityScatterSeriesView.prototype.b3 = function () {
        if (this.bz == null) {
            this.bz = this.e.e4.createElement("canvas");
            var a = this.e.e4.get2DCanvasContext(this.bz);
            this.bx = new RenderingContext(new CanvasViewRenderer(), a);
        }
        var b;
        if (this.m) {
            b = this.br;
        }
        else {
            b = this.e.bs.mw();
        }
        var c = truncate(Math.round(b.left));
        var d = truncate(Math.round(b.top));
        var e = truncate(Math.round(b.width));
        var f = truncate(Math.round(b.height));
        var g = this.b2;
        var h = this.b1;
        this.b2 = e;
        this.b1 = f;
        if (g != this.b2 || h != this.b1 || this.bu == null) {
            this.bz.setAttribute("width", e.toString());
            this.bz.setAttribute("height", f.toString());
            this.b0 = this.bx.g().getImageData(0, 0, e, f);
            var imageDataArray_ = this.b0.data;
            this.bu = imageDataArray_;
        }
        this.bw.on(this.bu, this.b2, this.b1);
    };
    HighDensityScatterSeriesView.prototype.bv = function () {
        return this.bu;
    };
    HighDensityScatterSeriesView.prototype.b6 = function () {
        var a = truncate(Math.round(this.br.left));
        var b = truncate(Math.round(this.br.left));
        var c = truncate(Math.round(this.br.width));
        var d = truncate(Math.round(this.br.height));
        this.bx.g().putImageData(this.b0, 0, 0);
        this.an();
    };
    HighDensityScatterSeriesView.prototype.b5 = function (a) {
        if (this.e.e4 != null) {
            this.e.e4.setTimeout(a, 0);
        }
        else {
            window.setTimeout(a, 0);
        }
    };
    HighDensityScatterSeriesView.prototype.a3 = function (a, b) {
        _super.prototype.a3.call(this, a, b);
        if (b) {
            if (!this.bw.c7) {
                return;
            }
            var c = new Rectangle();
            c.n = this.br.left;
            c.o = this.br.top;
            c.width = this.br.width;
            c.height = this.br.height;
            c._fill = this.bl();
            a.v(c);
            return;
        }
        if (this.bz == null) {
            return;
        }
        var d = truncate(Math.round(this.br.left));
        var e = truncate(Math.round(this.br.top));
        var f = truncate(Math.round(this.br.width));
        var g = truncate(Math.round(this.br.height));
        this.h.n(this.bz.getNativeElement(), this.e._opacity, d, e, f, g, d, e, f, g);
    };
    HighDensityScatterSeriesView.prototype.by = function (a, b) {
        return Color.e(toNullable(Color.$, a), toNullable(Color.$, null)) && Color.e(toNullable(Color.$, b), toNullable(Color.$, null));
    };
    HighDensityScatterSeriesView.prototype.b4 = function () {
        if (this.bu != null) {
            for (var a = 0; a < this.bu.length; a++) {
                this.bu[a] = 0;
            }
            this.b6();
        }
    };
    HighDensityScatterSeriesView.prototype.ai = function (a) {
        _super.prototype.ai.call(this, a);
        if (this.bu == null) {
            this.e.a2.exportSeriesPixelsData(a, null, this.b2, this.b1);
            return;
        }
        var b = new Array(intDivide(this.bu.length, 4));
        var c;
        for (var d = 0; d < intDivide(this.bu.length, 4); d++) {
            c = d * 4;
            b[d] = this.bu[c + 3] << 24 | this.bu[c] << 16 | this.bu[c + 1] << 8 | this.bu[c + 2];
        }
        this.e.a2.exportSeriesPixelsData(a, b, this.b2, this.b1);
    };
    HighDensityScatterSeriesView.$t = markType(HighDensityScatterSeriesView, 'HighDensityScatterSeriesView', SeriesView.$);
    return HighDensityScatterSeriesView;
}(SeriesView));
export { HighDensityScatterSeriesView };
//# sourceMappingURL=HighDensityScatterSeries_combined.js.map
