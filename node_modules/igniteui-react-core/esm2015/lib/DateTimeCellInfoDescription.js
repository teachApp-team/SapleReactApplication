/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CellInfoDescription } from "./CellInfoDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let DateTimeCellInfoDescription = /*@__PURE__*/ (() => {
    class DateTimeCellInfoDescription extends CellInfoDescription {
        constructor() {
            super();
            this.e8 = new Date();
            this.fd = null;
            this.e3 = null;
            this.fc = null;
            this.fb = null;
            this.e6 = false;
        }
        get_type() {
            return "DateTimeCellInfo";
        }
        get dateTimeValue() {
            return this.e8;
        }
        set dateTimeValue(a) {
            this.e8 = a;
            this.e("DateTimeValue");
        }
        get formatStringOverride() {
            return this.fd;
        }
        set formatStringOverride(a) {
            this.fd = a;
            this.e("FormatStringOverride");
        }
        get formatSpecifiers() {
            return this.e3;
        }
        set formatSpecifiers(a) {
            this.e3 = a;
            this.e("FormatSpecifiers");
        }
        get formatOverrideRef() {
            return this.fc;
        }
        set formatOverrideRef(a) {
            this.fc = a;
            this.e("FormatOverrideRef");
        }
        get dateTimeFormat() {
            return this.fb;
        }
        set dateTimeFormat(a) {
            this.fb = a;
            this.e("DateTimeFormat");
        }
        get isOffsetValue() {
            return this.e6;
        }
        set isOffsetValue(a) {
            this.e6 = a;
            this.e("IsOffsetValue");
        }
    }
    DateTimeCellInfoDescription.$t = /*@__PURE__*/ markType(DateTimeCellInfoDescription, 'DateTimeCellInfoDescription', CellInfoDescription.$);
    DateTimeCellInfoDescription.__marshalByValue1 = true;
    DateTimeCellInfoDescription.__marshalByValueAlias1 = "DateTimeCellModel";
    return DateTimeCellInfoDescription;
})();
//# sourceMappingURL=DateTimeCellInfoDescription.js.map
