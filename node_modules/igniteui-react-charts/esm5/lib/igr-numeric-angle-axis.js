import * as tslib_1 from "tslib";
import { IgrNumericAxisBase } from "./igr-numeric-axis-base";
import { NumericAngleAxis } from "./NumericAngleAxis";
/**
 * Represents a IgxDataChartComponent angle based axis for polar series.
*/
var IgrNumericAngleAxis = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(IgrNumericAngleAxis, _super);
    function IgrNumericAngleAxis(props) {
        return _super.call(this, props) || this;
    }
    IgrNumericAngleAxis.prototype.createImplementation = function () {
        return new NumericAngleAxis();
    };
    Object.defineProperty(IgrNumericAngleAxis.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrNumericAngleAxis.prototype, "isAngular", {
        /**
         * Gets if the current axis is of angular axis type
        */
        get: function () {
            return this.i.b2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrNumericAngleAxis.prototype, "startAngleOffset", {
        /**
         * Indicates the angle in degress that the chart's 0th angle should be offset.
        */
        get: function () {
            return this.i.lt;
        },
        set: function (v) {
            this.i.lt = +v;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Gets the scaled angle value in radians based on the raw input.
    
    * @param unscaledValue  * The raw input value.
    */
    IgrNumericAngleAxis.prototype.getScaledAngle = function (unscaledValue) {
        var iv = this.i.getScaledAngle(unscaledValue);
        return (iv);
    };
    /**
     * Gets the raw axis value back from the angle that would be used on the chart.
    
    * @param scaledValue  * The chart angle value.
    */
    IgrNumericAngleAxis.prototype.getUnscaledAngle = function (scaledValue) {
        var iv = this.i.getUnscaledAngle(scaledValue);
        return (iv);
    };
    return IgrNumericAngleAxis;
}(IgrNumericAxisBase));
export { IgrNumericAngleAxis };
//# sourceMappingURL=igr-numeric-angle-axis.js.map
