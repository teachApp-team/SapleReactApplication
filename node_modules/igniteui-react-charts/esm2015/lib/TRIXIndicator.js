/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { TRIXIndicatorStrategy } from "./TRIXIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
/**
 * @hidden
 */
export let TRIXIndicator = /*@__PURE__*/ (() => {
    class TRIXIndicator extends StrategyBasedIndicator {
        constructor() {
            super();
            this.pl = 0;
            this.trendLineBrush = ((() => {
                let $ret = new Brush();
                $ret.fill = "#565656";
                return $ret;
            })());
            this.trendLineType = 9;
            this.trendLinePeriod = 9;
        }
        get_qd() {
            return new TRIXIndicatorStrategy();
        }
        get qd() {
            return this.get_qd();
        }
        get_qq() {
            return TRIXIndicator.$;
        }
        get qq() {
            return this.get_qq();
        }
        get qy() {
            return typeGetValue(this.c(TRIXIndicator.qz));
        }
        set qy(a) {
            this.h(TRIXIndicator.qz, a);
        }
        qj() {
            return this.qy;
        }
        qs(a) {
            this.qy = a;
        }
    }
    TRIXIndicator.$t = /*@__PURE__*/ markType(TRIXIndicator, 'TRIXIndicator', StrategyBasedIndicator.$);
    TRIXIndicator.qz = /*@__PURE__*/ StrategyBasedIndicator.qv(15, TRIXIndicator.$);
    return TRIXIndicator;
})();
//# sourceMappingURL=TRIXIndicator.js.map
