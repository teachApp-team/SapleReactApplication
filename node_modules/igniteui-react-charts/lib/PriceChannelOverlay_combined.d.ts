import { FinancialOverlay } from "./FinancialOverlay";
import { List$1 } from "igniteui-react-core";
import { Type, Point } from "igniteui-react-core";
import { CategoryFrame } from "./CategoryFrame";
import { Rect } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { FinancialSeriesView } from "./FinancialSeriesView";
import { FinancialBucketCalculator } from "./FinancialBucketCalculator";
import { Polyline } from "igniteui-react-core";
import { Polygon } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class PriceChannelOverlay extends FinancialOverlay {
    static $t: Type;
    constructor();
    pr: number;
    protected i0(a: any, b: string, c: any, d: any): void;
    dw(a: Rect, b: Rect, c: SeriesView): boolean;
    protected pk(): boolean;
    o0(a: CategoryFrame, b: FinancialSeriesView): void;
    hw(a: boolean, b: SeriesView): void;
    o2(a: CategoryFrame, b: FinancialSeriesView): void;
    pq: List$1<number>;
    pp: List$1<number>;
    protected bf(): SeriesView;
    iv(a: SeriesView): void;
    private po;
    en(a: Point, b: boolean, c: boolean): number;
    fc(a: Point, b: boolean): number;
    fe(a: Point, b: boolean): number;
    eh(): number;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class PriceChannelBucketCalculator extends FinancialBucketCalculator {
    static $t: Type;
    constructor(a: FinancialSeriesView);
    protected f: PriceChannelOverlayView;
    getBucket(a: number): number[];
}
/**
 * @hidden
 */
export declare class PriceChannelOverlayView extends FinancialSeriesView {
    static $t: Type;
    private b5;
    private ca;
    private cb;
    readonly b4: Polygon;
    readonly b8: Polyline;
    readonly b9: Polyline;
    b0: PriceChannelOverlay;
    constructor(a: PriceChannelOverlay);
    ap(): void;
    protected bv(): FinancialBucketCalculator;
    b1(): void;
    b2(a: number, b: (arg1: number) => number, c: (arg1: number) => number, d: (arg1: number) => number, e: (arg1: number) => number): void;
    private b3;
    private b6;
    private b7;
    protected a9(): void;
    protected a3(a: RenderingContext, b: boolean): void;
    ai(a: any): void;
}
