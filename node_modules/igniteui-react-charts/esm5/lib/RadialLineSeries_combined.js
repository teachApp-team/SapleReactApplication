/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { AnchoredRadialSeries } from "./AnchoredRadialSeries";
import { UnknownValuePlotting_$type } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Array_$type, enumGetBox, markType, markDep } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { AnchoredRadialSeriesView } from "./AnchoredRadialSeriesView";
import { Path } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
/**
 * @hidden
 */
var RadialLineSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(RadialLineSeries, _super);
    function RadialLineSeries() {
        var _this = _super.call(this) || this;
        _this.ab = RadialLineSeries.$;
        return _this;
    }
    RadialLineSeries.prototype.bf = function () {
        return new RadialLineSeriesView(this);
    };
    RadialLineSeries.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.ou = a;
    };
    RadialLineSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
    };
    RadialLineSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    RadialLineSeries.prototype.hw = function (a, b) {
        _super.prototype.hw.call(this, a, b);
        var c = b;
        c.cx();
    };
    RadialLineSeries.prototype.np = function (a, b) {
        _super.prototype.np.call(this, a, b);
        var c = b.bs;
        var d = b.br;
        var e = a.f;
        var f = e.count;
        var g = new List$1(Array_$type, 2, f);
        var h = 0;
        for (var i = 0; i < f; i++) {
            var j = new Array(4);
            g.add(j);
            j[0] = this.m7.d(a.f._inner[i][0], a.f._inner[i][1], c, d);
            j[1] = this.m7.e(a.f._inner[i][0], a.f._inner[i][1], c, d);
            j[2] = this.m7.d(a.f._inner[i][0], a.f._inner[i][2], c, d);
            var k = a.f._inner[i][2];
            j[3] = this.m7.e(a.f._inner[i][0], k, c, d);
            if (k > h) {
                h = k;
            }
        }
        var l = b;
        l.cy(f, g, false, this.ov, this.nt(g, f - 1, b), l.co.b, this.eu);
    };
    RadialLineSeries.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
        switch (b) {
            case RadialLineSeries.$$p[0]:
                this.je(false);
                this.il();
                break;
        }
    };
    RadialLineSeries.prototype.get_n3 = function () {
        return true;
    };
    RadialLineSeries.$t = markType(RadialLineSeries, 'RadialLineSeries', AnchoredRadialSeries.$);
    RadialLineSeries.$$p = markDep(DependencyProperty, PropertyMetadata, RadialLineSeries, 'raisePropertyChanged', ['UnknownValuePlotting:ov:ox', [UnknownValuePlotting_$type, enumGetBox(UnknownValuePlotting_$type, 1)]]);
    return RadialLineSeries;
}(AnchoredRadialSeries));
export { RadialLineSeries };
/**
 * @hidden
 */
var RadialLineSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(RadialLineSeriesView, _super);
    function RadialLineSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.cw = null;
        _this.c0 = new Path();
        _this.cz = new Path();
        _this.c1 = new Path();
        _this.cw = a;
        return _this;
    }
    RadialLineSeriesView.prototype.cx = function () {
        this.c0.ak = null;
        this.cz.ak = null;
        this.c1.ak = null;
        this.an();
    };
    RadialLineSeriesView.prototype.cy = function (a, b, c, d, e, f, g) {
        this.cs.nv.m(this.c0, this.cz, this.c1, a, b, c, d, e, f, g);
        this.an();
    };
    RadialLineSeriesView.prototype.a8 = function () {
        _super.prototype.a8.call(this);
        this.c0._stroke = this.e.k4;
        this.c0.ac = this.e.ey;
        this.c0.ai = this.e.lc;
        this.c0.ad = this.e.ld;
        this.c1._stroke = this.e.k4;
        this.c1.ac = this.e.ey;
        this.c1.ai = this.e.lc;
        this.c1.ad = this.e.ld;
        this.cz._fill = this.e.k4;
        this.cz._opacity = 0.75;
    };
    RadialLineSeriesView.prototype.a9 = function () {
        _super.prototype.a9.call(this);
        var a = this.bl();
        this.c0._stroke = a;
        this.c0.ac = this.e.ey + 3;
        this.c1._stroke = a;
        this.c1.ac = this.e.ey + 3;
        this.cz._fill = a;
        this.cz._opacity = 1;
    };
    RadialLineSeriesView.prototype.a3 = function (a, b) {
        _super.prototype.a3.call(this, a, b);
        if (a.d) {
            a.s(this.cz);
            a.s(this.c0);
            a.s(this.c1);
        }
    };
    RadialLineSeriesView.prototype.ai = function (a) {
        _super.prototype.ai.call(this, a);
        this.e.a2.exportPathData(a, this.c0, "lowerShape", ["Lower", "Main"]);
        this.e.a2.exportPathData(a, this.c1, "upperShape", ["Upper"]);
        this.e.a2.exportPathData(a, this.cz, "translucentShape", ["Translucent"]);
    };
    RadialLineSeriesView.prototype.ac = function () {
        var a = new Color();
        a.colorString = "rgba(95,95,95,0.5)";
        this.e.lb = a;
        this.e.ev = 3;
        this.e.ew = 1;
        this.e.ex = 4;
        this.e.du = false;
    };
    RadialLineSeriesView.$t = markType(RadialLineSeriesView, 'RadialLineSeriesView', AnchoredRadialSeriesView.$);
    return RadialLineSeriesView;
}(AnchoredRadialSeriesView));
export { RadialLineSeriesView };
//# sourceMappingURL=RadialLineSeries_combined.js.map
