/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { DependencyProperty } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { Base, typeCast, Array_$type, Number_$type, markType } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { NumericScaler } from "./NumericScaler";
import { VerticalAxisLabelPanel } from "./VerticalAxisLabelPanel";
import { MathUtil } from "igniteui-react-core";
import { AxisRangeChangedEventArgs } from "./AxisRangeChangedEventArgs";
import { LinearCategorySnapper } from "./LinearCategorySnapper";
import { NumericXAxis } from "./NumericXAxis";
import { LabelPosition } from "./LabelPosition";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate, isNaN_, isInfinity } from "igniteui-react-core";
import { CategoryAxisBaseView } from "./CategoryAxisBaseView";
/**
 * @hidden
 */
var CategoryYAxis = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(CategoryYAxis, _super);
    function CategoryYAxis() {
        var _this = _super.call(this) || this;
        _this.k5 = 0;
        _this.k7 = 0;
        _this.ld = 1;
        _this.lc = 1;
        _this.jt = new List$1(Number_$type, 0);
        _this.ab = CategoryYAxis.$;
        return _this;
    }
    CategoryYAxis.prototype.a2 = function () {
        return new CategoryYAxisView(this);
    };
    CategoryYAxis.prototype.gx = function (a) {
        _super.prototype.gx.call(this, a);
        this.k4 = a;
    };
    CategoryYAxis.prototype.get_ch = function () {
        return true;
    };
    CategoryYAxis.prototype.dx = function () {
        return this.i8.height;
    };
    CategoryYAxis.prototype.k1 = function (a, b, c) {
        return this.k2(a, b, c, true);
    };
    CategoryYAxis.prototype.k3 = function (a) {
        if (typeCast(List$1.$.specialize(Array_$type), a) !== null) {
            return a.asArray();
        }
        return null;
    };
    CategoryYAxis.prototype.gr = function (a, b, c, d, e) {
        var f;
        var g = e.e;
        var h = e.d;
        var i = e.c;
        var j = e.a;
        var k = !i.isEmpty;
        var l = this.categoryMode == 0 ? this.j5 - 1 : this.j5;
        if (l < 0) {
            l = 0;
        }
        var m = i.top;
        var n = i.height;
        var o = g.top;
        var p = g.height;
        var q = h.top;
        var r = h.height;
        var s = 0;
        var t = 1;
        var u = this.k3(a);
        var v = false;
        if (u != null) {
            v = true;
        }
        var w;
        for (var x = 0; x < b.count; x++) {
            w = b.item(x);
            for (var y = c; y < d; y++) {
                if (v) {
                    f = u[y];
                }
                else {
                    f = a.item(y);
                }
                if (k) {
                    var z = l >= 1 ? (f[w]) / (l) : l == 0 ? 0.5 : NaN;
                    if (!j) {
                        z = 1 - z;
                    }
                    z = m + n * (z - s) / t;
                    var aa = (z - (o * r)) / p;
                    f[w] = aa;
                }
                else {
                    var ab = l >= 1 ? (f[w]) / (l) : l == 0 ? 0.5 : NaN;
                    if (!j) {
                        ab = 1 - ab;
                    }
                    ab = q + r * (ab - o) / p;
                    f[w] = ab;
                }
            }
        }
    };
    Object.defineProperty(CategoryYAxis.prototype, "la", {
        get: function () {
            return this.c(CategoryYAxis.lm);
        },
        set: function (a) {
            this.h(CategoryYAxis.lm, a);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryYAxis.prototype, "k6", {
        get: function () {
            return this.k5;
        },
        set: function (a) {
            if (this.k6 != a) {
                var b = this.k5;
                this.k5 = a;
                this.g5("ActualInterval", b, this.k6);
            }
        },
        enumerable: true,
        configurable: true
    });
    CategoryYAxis.prototype.d9 = function () {
        return this.k6;
    };
    Object.defineProperty(CategoryYAxis.prototype, "lb", {
        get: function () {
            return this.c(CategoryYAxis.ln);
        },
        set: function (a) {
            this.h(CategoryYAxis.ln, a);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryYAxis.prototype, "k8", {
        get: function () {
            return this.k7;
        },
        set: function (a) {
            if (this.k8 != a) {
                var b = this.k7;
                this.k7 = a;
                this.g5("ActualMinorInterval", b, this.k8);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryYAxis.prototype, "lf", {
        get: function () {
            return this.ld;
        },
        set: function (a) {
            this.ld = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryYAxis.prototype, "le", {
        get: function () {
            return this.lc;
        },
        set: function (a) {
            this.lc = a;
        },
        enumerable: true,
        configurable: true
    });
    CategoryYAxis.prototype.dy = function (a, b) {
        if (!b.c.isEmpty) {
            var c = this.k9(a, NumericScaler.ac, b.c);
            c = (c - b.d.top) / b.d.height;
            c = b.d.top + b.d.height * (c - b.e.top) / b.e.height;
            return c;
        }
        return this.k9(a, b.e, b.d);
    };
    CategoryYAxis.prototype.k9 = function (a, b, c) {
        var d = this.categoryMode == 0 ? this.j5 - 1 : this.j5;
        if (d < 0) {
            d = 0;
        }
        var e = d >= 1 ? (a) / (d) : d == 0 ? 0.5 : NaN;
        if (!this.cb) {
            e = 1 - e;
        }
        return c.top + c.height * (e - b.top) / b.height;
    };
    CategoryYAxis.prototype.d1 = function (a, b) {
        if (!b.c.isEmpty) {
            var c = b.e.top + b.e.height * (a - b.d.top) / b.d.height;
            c = (c * b.d.height) + b.d.top;
            c = this.getUnscaledValue3(c, NumericScaler.ac, b.c, this.categoryMode);
            return c;
        }
        return this.getUnscaledValue3(a, b.e, b.d, this.categoryMode);
    };
    CategoryYAxis.prototype.d2 = function (a, b, c) {
        if (!b.c.isEmpty) {
            var d = b.e.top + b.e.height * (a - b.d.top) / b.d.height;
            d = (d * b.d.height) + b.d.top;
            d = this.getUnscaledValue3(d, NumericScaler.ac, b.c, c);
            return d;
        }
        return this.getUnscaledValue3(a, b.e, b.d, c);
    };
    CategoryYAxis.prototype.getUnscaledValue3 = function (a, b, c, d) {
        var e = b.top + (a - c.top) * b.height / c.height;
        if (!this.cb) {
            e = 1 - e;
        }
        var f = d == 0 ? this.j5 - 1 : this.j5;
        if (f < 0) {
            f = 0;
        }
        return e * f;
    };
    CategoryYAxis.prototype.ll = function (a, b) {
        if (a == NaN || b == NaN || this.jm == null || this.jm.count == 0) {
            return;
        }
        var c = a / this.jm.count;
        var d = b / this.jm.count;
        this.bh.m6 = new Rect(0, this.bh.m6.x, 1 - d, this.bh.m6.width, d - c);
    };
    CategoryYAxis.prototype.at = function () {
        return new VerticalAxisLabelPanel();
    };
    CategoryYAxis.prototype.dl = function () {
        return this.la;
    };
    CategoryYAxis.prototype.getCategorySize = function (a, b, c) {
        var d = this.i6(b, c);
        return d.height / (this.j5 * a.height);
    };
    CategoryYAxis.prototype.jy = function (a, b, c) {
        var d = 0;
        if (!isNaN_(this.jv)) {
            d = MathUtil.b(this.jv, 0, 1);
        }
        var e = 0;
        if (!isNaN_(this.j2)) {
            e = Math.min(this.j2, 1);
        }
        var f = 1 - 0.5 * d;
        var g = this.getCategorySize(a, b, c) * f / (this.j8 - (this.j8 - 1) * e);
        return g;
    };
    CategoryYAxis.prototype.getGroupCenter = function (a, b, c, d) {
        var e = 0.5;
        if (this.j8 > 1) {
            var f = 0;
            if (!isNaN_(this.jv)) {
                f = MathUtil.b(this.jv, 0, 1);
            }
            var g = 0;
            if (!isNaN_(this.j2)) {
                g = Math.min(this.j2, 1);
            }
            var h = 1 - 0.5 * f;
            var i = h / (this.j8 - (this.j8 - 1) * g);
            var j = (h - i) / (this.j8 - 1);
            e = 0.25 * f + 0.5 * i + a * j;
        }
        return this.getCategorySize(b, c, d) * e;
    };
    CategoryYAxis.prototype.lk = function (a) {
        var b = this.bh != null ? this.bh.mr : Rect.empty;
        b = b.copy();
        var c = this.i8;
        var d = new Rect(0, 0, 0, 1, 1);
        var e = this.i5();
        var f = new ScalerParams(0, d, d, this.ca, e);
        var g = !b.isEmpty && !c.isEmpty && this.jm != null ? this.jm.indexOf(a) : -1;
        var h = g > -1 ? this.dy(g, f) : NaN;
        if (!isNaN_(h) && this.bh.c0) {
            if (!isNaN_(h)) {
                if (h < b.top + 0.1 * b.height) {
                    h = h + 0.4 * b.height;
                    b.y = h - 0.5 * b.height;
                }
                if (h > b.bottom - 0.1 * b.height) {
                    h = h - 0.4 * b.height;
                    b.y = h - 0.5 * b.height;
                }
            }
            this.bh.kn(b, false, true);
        }
    };
    CategoryYAxis.prototype.cp = function () {
        if (this.ci && this.cq) {
            this.ba = this.a9();
        }
        if (this.jm == null) {
            return false;
        }
        var a = this.jm.count;
        if (a != this.le) {
            var b = new AxisRangeChangedEventArgs(0, 1, 1, this.le, a);
            this.le = a;
            this.g6(b);
            return true;
        }
        return false;
    };
    CategoryYAxis.prototype.jp = function (a) {
        if (a == null) {
            return false;
        }
        var b = this.bc();
        if (b == null) {
            return false;
        }
        return b.synchronizeVertically;
    };
    CategoryYAxis.prototype.hc = function (a) {
        _super.prototype.hc.call(this, a);
        var b = this.bh != null ? this.bh.mr : Rect.empty;
        var c = this.i8;
        var d = this.i3();
        var e = this.i2();
        var f = new ScalerParams(0, b, c, this.ca, d);
        var g = this.a3.ay();
        var h = this.a3.a1();
        var i = this.a3.az();
        var j = this.a3.a0();
        var k = this.a3.e();
        var l = this.a3.f();
        var m = this.a3.g();
        this.hj();
        this.gn(g);
        this.gn(h);
        this.gn(i);
        this.gn(j);
        this.cx.clear();
        this.cy.clear();
        this.jt.clear();
        this.a3.at(this, b, c);
        if (b.isEmpty || c.isEmpty) {
            this.bq.count = 0;
            this.bp.count = 0;
            this.bo.count = 0;
        }
        if (this.bq.count == 0 && this.bp.count == 0) {
            this.a3.y();
        }
        if (this.ax != null) {
            this.ax.registerAxis(this);
        }
        if (this.itemsSource == null || this.jm == null || this.jm.count == 0) {
            this.bq.count = 0;
            this.bp.count = 0;
            this.bo.count = 0;
            this.a3.y();
            return;
        }
        if (!b.isEmpty && !c.isEmpty) {
            var n = this.d1(e.top, f);
            var o = this.d1(e.bottom, f);
            if (!this.ca) {
                n = Math.ceil(n);
                o = Math.floor(o);
            }
            else {
                n = Math.floor(n);
                o = Math.ceil(o);
            }
            var p = c.left;
            var q = 0;
            if (this.ah != null) {
                var r = typeCast(NumericXAxis.$, this.ah);
                if (r != null) {
                    var s = this.hf(p, q, b, c, d, c.left, c.right);
                    p = s.p0;
                    q = s.p1;
                }
            }
            this.hk(g, p, c, k, true);
            this.a3.ao(q);
            var t = Math.min(n, o);
            var u = Math.max(n, o);
            var v = new LinearCategorySnapper(1, t, u, e.height, this.la, this.categoryMode, this.eb());
            var w = Math.floor((t - 0) / v.g);
            var x = Math.ceil((u - 0) / v.g);
            if (!isNaN_(w) && !isNaN_(x)) {
                var y = truncate(w);
                var z = truncate(x);
                var aa = this.dy(0 + y * v.g, f);
                var ab = Math.abs(this.dy(v.g, f) - this.dy(0, f));
                this.au.bn = this.dy(v.g, f);
                for (var ac = y; ac <= z; ++ac) {
                    var ad = this.dy(0 + (ac + 1) * v.g, f);
                    if (aa <= e.bottom) {
                        if (ac % 2 == 0) {
                            this.gw(h, aa, ad, c);
                        }
                        this.gv(i, aa, c, l, false);
                        this.jt.add(aa);
                    }
                    if (this.categoryMode != 0 && this.j8 != 0 && this.cl) {
                        if (this.lb > 0 && this.lb < v.g) {
                            var ae = ab * this.lb;
                            if (!this.ca) {
                                var af = aa;
                                while (af - ae > ad) {
                                    af -= ae;
                                    if (Math.abs(af - ad) < 0.0001) {
                                        break;
                                    }
                                    this.gv(j, af, c, m, false);
                                }
                            }
                            else {
                                var ag = aa;
                                while (ag + ae < ad) {
                                    ag += ae;
                                    if (Math.abs(ag - ad) < 0.0001) {
                                        break;
                                    }
                                    this.gv(j, ag, c, m, false);
                                }
                            }
                            this.k8 = this.lb;
                        }
                        else {
                            for (var ah = 0; ah < truncate(v.g); ah++) {
                                for (var ai = 0; ai < this.j8; ai++) {
                                    var aj = this.getGroupCenter(ai, b, c, d);
                                    if (!this.ca) {
                                        aj = -aj;
                                    }
                                    var ak = this.dy(ah + ac * v.g, f) + aj;
                                    this.gv(j, ak, c, m, false);
                                }
                            }
                            this.k8 = 0.5;
                        }
                    }
                    var al = aa;
                    if (this.categoryMode != 0) {
                        var am = this.dy(ac * v.g + 1, f);
                        al = (aa + am) / 2;
                    }
                    if (al <= e.bottom && al >= e.top) {
                        var an = 0;
                        if (v.g >= 1) {
                            an = ac * truncate(Math.floor(v.g));
                        }
                        else {
                            if ((ac * v.g) * 2 % 2 == 0) {
                                an = truncate(Math.floor(ac * v.g));
                            }
                            else {
                                an = -1;
                            }
                        }
                        if (this.jm != null && an < this.jm.count && an >= 0) {
                            var ao = this.jm.item(an);
                            var ap = this.e8(ao);
                            if (!isNaN_(al) && !isInfinity(al) && ap != null) {
                                if ((typeof ap === 'string') && Base.equalsStatic(ap, "")) {
                                }
                                else {
                                    this.cx.add1(ap);
                                    this.cy.add(new LabelPosition(al));
                                }
                            }
                        }
                    }
                    aa = ad;
                }
            }
            this.k6 = v.g;
            if ((this.ax == null || this.ax.visibility == 0) && this.ah != null) {
                if (this.ax != null && (this.ax.location == 6 || this.ax.location == 7)) {
                    this.bh.hu();
                }
            }
            this.a3.au(this.cx, this.cy);
            this.kt();
        }
    };
    CategoryYAxis.prototype.get_a0 = function () {
        return 1;
    };
    Object.defineProperty(CategoryYAxis.prototype, "a0", {
        get: function () {
            return this.get_a0();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryYAxis.prototype, "isVertical", {
        get: function () {
            return this.ch;
        },
        enumerable: true,
        configurable: true
    });
    CategoryYAxis.prototype.j$c = function (a, b) {
        return this.d1.apply(this, arguments);
    };
    CategoryYAxis.prototype.j$b = function (a, b) {
        return this.dy.apply(this, arguments);
    };
    CategoryYAxis.prototype.j$d = function (a, b, c, d, e) {
        this.gr.apply(this, arguments);
    };
    CategoryYAxis.prototype.j$e = function (a, b, c, d) {
        this.gs.apply(this, arguments);
    };
    CategoryYAxis.prototype.j$f = function (a, b, c, d) {
        this.gt.apply(this, arguments);
    };
    Object.defineProperty(CategoryYAxis.prototype, "j$a", {
        get: function () {
            return this.ca;
        },
        enumerable: true,
        configurable: true
    });
    CategoryYAxis.$t = markType(CategoryYAxis, 'CategoryYAxis', CategoryAxisBase.$);
    CategoryYAxis.lm = DependencyProperty.i("Interval", Number_$type, CategoryYAxis.$, new PropertyMetadata(2, NaN, function (a, b) {
        a.g5("Interval", b.oldValue, b.newValue);
        a.hb(false);
    }));
    CategoryYAxis.ln = DependencyProperty.i("MinorInterval", Number_$type, CategoryYAxis.$, new PropertyMetadata(2, NaN, function (a, b) {
        (typeCast(CategoryYAxis.$, a)).g5("MinorInterval", b.oldValue, b.newValue);
        (typeCast(CategoryYAxis.$, a)).hb(false);
    }));
    return CategoryYAxis;
}(CategoryAxisBase));
export { CategoryYAxis };
/**
 * @hidden
 */
var CategoryYAxisView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(CategoryYAxisView, _super);
    function CategoryYAxisView(a) {
        var _this = _super.call(this, a) || this;
        _this.bg = null;
        _this.bg = a;
        return _this;
    }
    CategoryYAxisView.$t = markType(CategoryYAxisView, 'CategoryYAxisView', CategoryAxisBaseView.$);
    return CategoryYAxisView;
}(CategoryAxisBaseView));
export { CategoryYAxisView };
//# sourceMappingURL=CategoryYAxis_combined.js.map
