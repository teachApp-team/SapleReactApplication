/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { SelectionChangedEventArgsDescriptionMetadata } from "./SelectionChangedEventArgsDescriptionMetadata";
import { DatePickerDescription } from "./DatePickerDescription";
/**
 * @hidden
 */
var DatePickerDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(DatePickerDescriptionMetadata, _super);
    function DatePickerDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DatePickerDescriptionMetadata.b = function (a) {
        if (DatePickerDescriptionMetadata.a == null) {
            DatePickerDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            DatePickerDescriptionMetadata.c(a, DatePickerDescriptionMetadata.a);
            SelectionChangedEventArgsDescriptionMetadata.d(a);
        }
    };
    DatePickerDescriptionMetadata.c = function (a, b) {
        b.item("SelectedDate", "Date");
        b.item("Density", "ExportedType:string:ControlDisplayDensity");
        b.item("BaseTheme", "ExportedType:string:BaseControlTheme");
        b.item("SelectionChangedRef", "EventRef::selectionChanged");
    };
    DatePickerDescriptionMetadata.d = function (a) {
        DatePickerDescriptionMetadata.b(a);
        a.n("DatePicker", function () { return new DatePickerDescription(); });
        a.m("DatePicker", DatePickerDescriptionMetadata.a);
    };
    DatePickerDescriptionMetadata.$t = markType(DatePickerDescriptionMetadata, 'DatePickerDescriptionMetadata');
    DatePickerDescriptionMetadata.a = null;
    return DatePickerDescriptionMetadata;
}(Base));
export { DatePickerDescriptionMetadata };
//# sourceMappingURL=DatePickerDescriptionMetadata.js.map
