/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { AnnotationLayer } from "./AnnotationLayer";
import { DependencyProperty } from "igniteui-react-core";
import { Base, String_$type, typeCast, enumGetBox, fromEnum, runOn, delegateCombine, delegateRemove, Date_$type, Point_$type, markType, markDep } from "igniteui-react-core";
import { Series } from "./Series";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { CalloutCollisionMode_$type } from "./CalloutCollisionMode";
import { FontUtil } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { CalloutLayerFrame } from "./CalloutLayerFrame";
import { HashSet$1 } from "igniteui-react-core";
import { CalloutAnnotationWrapper } from "./CalloutAnnotationWrapper";
import { List$1 } from "igniteui-react-core";
import { LinkedList$1 } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { LinkedListNode$1 } from "igniteui-react-core";
import { LabelCollisionManager } from "igniteui-react-core";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { CalloutAnnotation } from "./CalloutAnnotation";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { CalloutSeriesSelectingEventArgs } from "./CalloutSeriesSelectingEventArgs";
import { CalloutStyleUpdatingEventArgs } from "./CalloutStyleUpdatingEventArgs";
import { QuadTreeBoundingBox } from "igniteui-react-core";
import { LabelCollisionInfo } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { Size } from "igniteui-react-core";
import { CalloutContentUpdatingEventArgs } from "./CalloutContentUpdatingEventArgs";
import { CalloutLabelUpdatingEventArgs } from "./CalloutLabelUpdatingEventArgs";
import { CalloutKey } from "./CalloutKey";
import { DataContext } from "igniteui-react-core";
import { HashPool$2 } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { FastItemObjectColumn } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { BrushUtil } from "igniteui-react-core";
import { TextBlock } from "igniteui-react-core";
import { DOMExecutionContext } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
import { Line } from "igniteui-react-core";
import { CalloutViewHelper } from "./CalloutViewHelper";
import { Rectangle } from "igniteui-react-core";
import { TranslateTransform } from "igniteui-react-core";
/**
 * @hidden
 */
export let CalloutLayer = /*@__PURE__*/ (() => {
    class CalloutLayer extends AnnotationLayer {
        constructor() {
            super();
            this.calloutStyleUpdating = null;
            this.ng = null;
            this.nh = null;
            this.ni = null;
            this.nf = null;
            this.ne = null;
            this.n5 = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            this.n8 = new List$1(CalloutAnnotationWrapper.$, 0);
            this.n9 = new List$1(CalloutAnnotationWrapper.$, 0);
            this.nc = null;
            this.n6 = new LinkedList$1(CalloutAnnotationWrapper.$);
            this.n3 = new Dictionary$2(CalloutAnnotationWrapper.$, LinkedListNode$1.$.specialize(CalloutAnnotationWrapper.$), 0);
            this.no = null;
            this.qy = new Rect(0, 0, 0, 1, 1);
            this.nv = false;
            this.oj = 0;
            this.qx = Rect.empty;
            this.nt = false;
            this.nu = false;
            this.calloutContentUpdating = null;
            this.calloutLabelUpdating = null;
            this.calloutSeriesSelecting = null;
            this.n7 = new List$1(SeriesPointOfInterest.$, 0);
            this.nx = false;
            this.ny = false;
            this.ob = 0;
            this.nw = false;
            this.ns = true;
            FastItemObjectColumn.m();
            this.mb = true;
            let a = new CalloutLayerFrame();
            let b = new CalloutLayerFrame();
            let c = new CalloutLayerFrame();
            let d = this.fi / 1000;
            this.l3 = a;
            this.l2 = b;
            this.l4 = c;
            this.ab = CalloutLayer.$;
        }
        pq(a, b) {
            this.n9.clear();
            this.je(false);
        }
        hz(a, b, c, d) {
            super.hz(a, b, c, d);
            let e = this.n4();
            switch (a) {
                case 3:
                    this.p2(b, e);
                    break;
                case 1:
                    for (let f = b; f < b + c; f++) {
                        let g = new CalloutAnnotation();
                        let h = new CalloutAnnotationWrapper();
                        h.b = g;
                        h.b.series = this.nb;
                        this.n9.insert(f, h);
                        this.p2(f, e);
                    }
                    break;
                case 0:
                    this.n9.v(b, c);
                    break;
                case 2:
                    for (let i = b; i < b + c; i++) {
                        this.p2(i, e);
                    }
                    break;
                case 4:
                    this.n9.clear();
                    for (let j = 0; j < this.bz.count; j++) {
                        let k = new CalloutAnnotation();
                        let l = new CalloutAnnotationWrapper();
                        l.b = k;
                        l.b.series = this.nb;
                        this.n9.add(l);
                        this.p2(j, e);
                    }
                    break;
            }
            this.je(true);
        }
        da(a) {
            return false;
        }
        n4() {
            let a = new Dictionary$2(String_$type, Series.$, 0);
            if (this.bs != null) {
                for (let b = 0; b < this.bs.series.count; b++) {
                    let c = this.bs.series._inner[b];
                    if (c.name != null && !a.containsKey(c.name)) {
                        a.addItem(c.name, c);
                    }
                }
            }
            return a;
        }
        p2(a, b) {
            if (this.nn == null || this.nl == null) {
                return;
            }
            let c = a;
            if (this.nm != null) {
                c = this.nm.item(a);
            }
            let d = this.nn.item(a);
            let e = this.nl.item(a);
            let f = this.n9._inner[a];
            if (this.nk != null) {
                f.b.key = this.nk.item(a);
            }
            if (this.n3.containsKey(f)) {
                f.b = this.n3.item(f).c.b;
            }
            f.b.xValue = c;
            f.b.yValue = d;
            f.b.text = e != null ? e.toString() : "";
            if (this.nj != null) {
                f.b.content = this.nj.item(a);
            }
            else {
                f.b.content = this.bz.item(a);
            }
            if (this.calloutSeriesSelecting != null) {
                let g = ((() => {
                    let $ret = new CalloutSeriesSelectingEventArgs();
                    $ret.c = c;
                    $ret.d = d;
                    $ret.item = this.bz.item(a);
                    return $ret;
                })());
                this.calloutSeriesSelecting(this, g);
                if (g.a != null) {
                    f.b.series = g.a;
                }
                else if (g.e != null) {
                    if (b.containsKey(g.e)) {
                        f.b.series = b.item(g.e);
                    }
                }
            }
            this.p3(f);
        }
        p3(a) {
            let b = new Thickness(0, 3);
            if (isNaN_(this.q0.c) || isNaN_(this.q0.e) || isNaN_(this.q0.d) || isNaN_(this.q0.b)) {
                b = new Thickness(0, 3);
            }
            else {
                b = this.q0;
            }
            let c = this.qt != null ? this.qt : this.m8.ce(a.b.series);
            let d = this.qw != null ? this.qw : this.m8.ch();
            let e = this.qv != null ? this.qv : this.m8.cg();
            let f = this.qu != null ? this.qu : this.m8.cf(a.b.series);
            let g = isNaN_(this.oh) ? 0 : this.oh;
            if (this.n1 && this.calloutStyleUpdating != null) {
                let h = new CalloutStyleUpdatingEventArgs();
                h.item = a.b.content;
                h.xValue = a.b.xValue;
                h.yValue = a.b.yValue;
                h.series = a.b.series;
                h.background = c;
                h.textColor = d;
                h.outline = e;
                h.leaderBrush = f;
                h.strokeThickness = g;
                this.calloutStyleUpdating(this, h);
                c = h.background;
                d = h.textColor;
                e = h.outline;
                f = h.leaderBrush;
                g = h.strokeThickness;
            }
            a.b.backgroundPadding = b;
            a.b.background = c;
            a.b.textColor = d;
            a.b.outline = e;
            a.b.leaderBrush = f;
            a.b.strokeThickness = g;
        }
        fs(a, b) {
            let c = this.gv(b);
            if (c == CalloutLayer.$$p[19]) {
                return this.ft(a, b, this.pe);
            }
            if (c == CalloutLayer.$$p[23]) {
                return this.ft(a, b, this.pl);
            }
            if (c == CalloutLayer.$$p[24]) {
                return this.ft(a, b, this.po);
            }
            if (c == CalloutLayer.$$p[18]) {
                return this.ft(a, b, this.pb);
            }
            if (c == CalloutLayer.$$p[14]) {
                return this.ft(a, b, this.o5);
            }
            return super.fs(a, b);
        }
        get nl() {
            return this.ng;
        }
        set nl(a) {
            if (this.ng != a) {
                let b = this.ng;
                this.ng = a;
                this.raisePropertyChanged("LabelColumn", b, this.ng);
            }
        }
        get nm() {
            return this.nh;
        }
        set nm(a) {
            if (this.nh != a) {
                let b = this.nh;
                this.nh = a;
                this.raisePropertyChanged("XColumn", b, this.nh);
            }
        }
        get nn() {
            return this.ni;
        }
        set nn(a) {
            if (this.ni != a) {
                let b = this.ni;
                this.ni = a;
                this.raisePropertyChanged("YColumn", b, this.ni);
            }
        }
        get nk() {
            return this.nf;
        }
        set nk(a) {
            if (this.nf != a) {
                let b = this.nf;
                this.nf = a;
                this.raisePropertyChanged("KeyColumn", b, this.nf);
            }
        }
        get nj() {
            return this.ne;
        }
        set nj(a) {
            if (this.ne != a) {
                let b = this.ne;
                this.ne = a;
                this.raisePropertyChanged("ContentColumn", b, this.ne);
            }
        }
        ps(a, b) {
            if (b.propertyName == CalloutAnnotation.$$p[13] || b.propertyName == CalloutAnnotation.$$p[14]) {
                let c = a.k;
                if (!this.n5.contains(c)) {
                    this.n5.add_1(c);
                    this.n8.add(c);
                    this.je(false);
                }
            }
        }
        bf() {
            return new CalloutLayerView(this);
        }
        iv(a) {
            super.iv(a);
            this.m8 = a;
        }
        get q0() {
            return new Thickness(1, this.od, this.of, this.oe, this.oc);
        }
        get nd() {
            if (this.nc == null) {
                this.nc = FontUtil.toFontInfo(this.e4, this.ph);
            }
            return this.nc;
        }
        mm(a, b) {
            if (this.nb == null || this.nb == a) {
                if (!this.aq.c) {
                    this.je(b);
                }
            }
        }
        mo(a, b) {
            super.mo(a, b);
            let c = a;
            c.p.clear();
            c.q.clear();
            c.m.clear();
            c.f.clear();
            c.h.clear();
            c.g.clear();
            c.j.clear();
            c.l.clear();
            c.k.clear();
            c.i.clear();
            c.n.clear();
            c.o.clear();
            c.t.clear();
            c.u.clear();
            c.r.clear();
            c.s.clear();
            let d = this.oa();
            let e = new List$1(CalloutAnnotationWrapper.$, 0);
            if (this.nz) {
                if (this.l9(this.nb)) {
                    this.pz(this.nb, c, e);
                }
                else {
                    for (let f of fromEnum(this.bs.series)) {
                        if (this.l9(f)) {
                            this.pz(f, c, e);
                        }
                    }
                }
            }
            this.py(c, d, e);
        }
        ju(a, b) {
            super.ju(a, b);
            let c = b.width - this.qy.width;
            let d = b.height - this.qy.height;
            let e = 0;
            if (Math.abs(c) > Math.abs(d)) {
                e = c;
                this.ob = c * this.lz.width;
            }
            else {
                e = d;
                this.ob = d * this.lz.height;
            }
            if (e > 0 && this.ob > 5) {
                this.ny = true;
            }
            if (e < 0 && this.ob > 5) {
                this.nx = true;
            }
        }
        jt(a, b) {
            super.jt(a, b);
            if (!a.equals1(b)) {
                this.nw = true;
            }
        }
        get qz() {
            return this.qx;
        }
        set qz(a) {
            this.qx = a;
        }
        py(a, b, c) {
            if (this.bs != null) {
                this.qy = this.bs.mr;
            }
            if (this.lz.isEmpty) {
                return;
            }
            this.qz = new Rect(0, this.lz.left, this.lz.top, this.lz.width, this.lz.height);
            if (this.no != null && this.o2 != null && this.o2 != this.no.ak) {
                this.pu();
            }
            if (this.no == null) {
                let d = this.np();
                if (d != null) {
                    this.no = d;
                    let e = this.no;
                    e.labelsMoved = delegateCombine(e.labelsMoved, runOn(this, this.pr));
                }
                else {
                    let f = this.lr(this.bi);
                    let g = 0;
                    if (this.nb != null) {
                        if (this.nb.isVertical) {
                            g = 2;
                        }
                    }
                    else {
                        let h = false;
                        if (this.bs != null && this.bs.series.count > 0) {
                            h = true;
                            for (let i of fromEnum(this.bs.series)) {
                                if (!i.cj) {
                                    if (!i.isVertical) {
                                        h = false;
                                    }
                                }
                            }
                        }
                        if (h) {
                            g = 2;
                        }
                    }
                    this.no = new LabelCollisionManager(this.lz.right, this.lz.bottom, this.lz, this.m8.b4(), this.og, this.nq(), g, this.on(), this.om(), this.n0);
                    if (this.o2 != null) {
                        this.no.ak = this.o2;
                        this.no.ai = this;
                    }
                    let j = this.no;
                    j.labelsMoved = delegateCombine(j.labelsMoved, runOn(this, this.pr));
                }
            }
            if (this.nx) {
                this.nx = false;
                if (this.no.ag > 2) {
                    this.nv = true;
                }
            }
            if (this.ny) {
                this.ny = false;
                if (this.ob > 5) {
                    this.nv = true;
                }
            }
            if (this.nw) {
                this.nw = false;
                this.no.ay(this.lz.right, this.lz.bottom, this.lz);
                this.nv = true;
            }
            let k = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            let l = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            let m = new List$1(CalloutAnnotationWrapper.$, 0);
            let n = new List$1(CalloutAnnotationWrapper.$, 0);
            let o = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            for (let p = 0; p < b.count; p++) {
                o.add_1(b._inner[p]);
            }
            for (let q = 0; q < c.count; q++) {
                o.add_1(c._inner[q]);
            }
            let r = this.n6.c;
            while (r != null) {
                let s = r.a;
                if (!o.contains(r.c)) {
                    n.add(r.c);
                    l.add_1(r.c);
                    let t = r.c.b;
                    t.propertyChanged = delegateRemove(t.propertyChanged, runOn(this, this.ps));
                    this.n6.h(r);
                    this.n3.removeItem(r.c);
                    this.no.ax(r.c.c);
                }
                r = s;
            }
            for (let u = 0; u < b.count; u++) {
                if (!this.n3.containsKey(b._inner[u])) {
                    this.n6.f(b._inner[u]);
                    let v = b._inner[u].b;
                    v.propertyChanged = delegateCombine(v.propertyChanged, runOn(this, this.ps));
                    this.n3.addItem(b._inner[u], this.n6.d);
                    m.add(b._inner[u]);
                    k.add_1(b._inner[u]);
                    this.nv = true;
                }
            }
            for (let w = 0; w < c.count; w++) {
                if (!this.n3.containsKey(c._inner[w])) {
                    this.n6.f(c._inner[w]);
                    this.n3.addItem(c._inner[w], this.n6.d);
                    let x = c._inner[w].b;
                    x.propertyChanged = delegateCombine(x.propertyChanged, runOn(this, this.ps));
                    m.add(c._inner[w]);
                    k.add_1(c._inner[w]);
                    this.nv = true;
                }
            }
            if (this.nt == true) {
                this.nt = false;
                this.nv = true;
            }
            if (this.n8.count > 0) {
                this.nv = true;
                this.n8.clear();
                this.n5.clear();
            }
            r = this.n6.c;
            while (r != null) {
                let y = this.nr(r.c);
                if (y == null) {
                    return;
                }
                if (!Base.equalsStatic(y, r.c.c.c)) {
                    let z = false;
                    if (r.c.c.c == null) {
                        z = true;
                    }
                    let aa = r.c.c;
                    aa.o = y.b;
                    aa.p = y.c;
                    if (!isNaN_(aa.o) && !isNaN_(aa.p)) {
                        aa.n = y.e;
                        aa.m = y.d;
                        if (aa.b == null) {
                            this.no.p(aa);
                        }
                        if (z) {
                            this.no.al(aa);
                        }
                        else {
                            this.no.au(aa);
                        }
                    }
                }
                r = r.a;
            }
            let ab = this.no.ah();
            let ac = this.no.q();
            if (this.nv && (ab != 0 || ac)) {
                this.nv = false;
                this.oj = 0x7FFFFFFF;
                if (this.o2 != null) {
                    let ad = true;
                    for (let ae = 0; ae < this.bs.series.count; ae++) {
                        let af = this.bs.series._inner[ae];
                        if (af.cj && typeCast(CalloutLayer.$, af) !== null) {
                            let ag = af;
                            if (ag.o2 == this.o2) {
                                if (!ag.qz.equals1(this.no.a0)) {
                                    ad = false;
                                    break;
                                }
                            }
                        }
                    }
                    if (ad) {
                        this.no.az();
                    }
                    else {
                        this.no.am();
                        this.no.an();
                    }
                }
                else {
                    this.no.az();
                }
            }
            else {
                this.no.an();
            }
            let ah = this.n6.c;
            while (ah != null) {
                let ai = ah.c;
                a.m.add1(ai);
                a.f.add(ai.b.background);
                a.h.add(ai.b.outline);
                a.g.add(ai.b.leaderBrush);
                a.j.add(ai.b.backgroundPadding.c);
                a.l.add(ai.b.backgroundPadding.e);
                a.k.add(ai.b.backgroundPadding.d);
                a.i.add(ai.b.backgroundPadding.b);
                a.n.add(ai.b.strokeThickness);
                a.o.add(ai.b.textColor);
                a.p.add1(ai.b.text);
                a.q.add1(ai.b.content);
                let aj = ai.c;
                a.t.add(ai.c.o - (ai.c.g - ai.c.l));
                a.u.add(ai.c.p - (ai.c.h - ai.c.k));
                a.r.add(ai.c.g - ai.c.l);
                a.s.add(ai.c.h - ai.c.k);
                ah = ah.a;
            }
        }
        pu() {
            if (this.no != null) {
                let a = this.n6.c;
                while (a != null) {
                    let b = a.c.c;
                    if (b != null) {
                        this.no.ax(b);
                    }
                    a = a.a;
                }
                let c = this.no;
                c.labelsMoved = delegateRemove(c.labelsMoved, runOn(this, this.pr));
                this.no = null;
            }
            this.pt();
        }
        np() {
            if (this.bs == null) {
                return null;
            }
            for (let a = 0; a < this.bs.series.count; a++) {
                let b = this.bs.series._inner[a];
                if (b.cj && typeCast(CalloutLayer.$, b) !== null) {
                    let c = b;
                    if (c != this) {
                        if (c.o2 != null && c.o2 == this.o2) {
                            if (c.no != null) {
                                return c.no;
                            }
                        }
                    }
                }
            }
            return null;
        }
        om() {
            return 20000;
        }
        on() {
            return 300;
        }
        nq() {
            switch (this.m5) {
                case 0: return 2;
                case 2: return 1;
                case 3: return 2;
                case 1: return 0;
            }
            return 2;
        }
        pr(a) {
            let b = this.no.ah();
            if (b < this.oj) {
                this.oj = b;
                this.je(false);
            }
        }
        nr(a) {
            let b = this.nb;
            if (a.b.series != null) {
                b = a.b.series;
            }
            if (b == null) {
                for (let c = 0; c < this.bs.series.count; c++) {
                    let d = this.bs.series._inner[c];
                    if (!d.cj) {
                        b = d;
                        break;
                    }
                }
            }
            if (b == null) {
                return null;
            }
            let e = b.ag();
            let f = b.eh();
            let g = null;
            let h = null;
            for (let i = 0; i < e.length; i++) {
                if (e[i].ch) {
                    h = e[i];
                }
                else {
                    g = e[i];
                }
            }
            if (g == null || h == null) {
                return null;
            }
            if (!g.cg() || !h.cg()) {
                return null;
            }
            let j = 0;
            let k = 0;
            if (g.b4 && g.categoryMode != 0) {
                if (b.cr) {
                    j = b.getOffsetValue();
                }
                else if (b.cl) {
                    j = b.getOffsetValue();
                }
            }
            if (h.b4 && h.categoryMode != 0) {
                if (b.cl) {
                    k = b.getOffsetValue();
                }
            }
            let l = new ScalerParams(0, this.bs.mr, g.i8, g.ca, g.i3());
            l.b = f;
            let m = new ScalerParams(0, this.bs.mr, h.i8, h.ca, h.i3());
            m.b = f;
            let n = g.dy(this.oi(a.b.xValue), l) + j;
            let o = h.dy(this.oi(a.b.yValue), m) + k;
            let p = new QuadTreeBoundingBox();
            p.b = n;
            p.c = o;
            p.e = 3;
            p.d = 3;
            p.g = a.b;
            return p;
        }
        oi(a) {
            if (typeCast(Date_$type, a) !== null) {
                return a.getTime();
            }
            if (a == null) {
                return 0;
            }
            return a;
        }
        oa() {
            let a = new List$1(CalloutAnnotationWrapper.$, 0);
            for (let b = 0; b < this.n9.count; b++) {
                if (stringIsNullOrEmpty(this.n9._inner[b].b.text)) {
                    continue;
                }
                if (this.n9._inner[b].c == null) {
                    let c = new LabelCollisionInfo();
                    this.n9._inner[b].c = c;
                    let d = this.m8.cj(this.oo(this.n9._inner[b]), this.n9._inner[b].b.backgroundPadding);
                    c.k = d.height / 2;
                    c.l = d.width / 2;
                }
                let e = this.nr(this.n9._inner[b]);
                if (e == null || e.b < this.lz.left || e.b > this.lz.right || e.c < this.lz.top || e.c > this.lz.bottom) {
                    continue;
                }
                a.add(this.n9._inner[b]);
            }
            return a;
        }
        oo(a) {
            return a.b.text;
        }
        l9(a) {
            if (!super.l9(a)) {
                return false;
            }
            return true;
        }
        ip() {
            super.ip();
            if (!this.aq.c && !this.ca()) {
                return;
            }
            if (this.ns) {
                this.ns = false;
                this.pw();
            }
            if (this.ca()) {
                this.p1(this.l4, false);
            }
            else {
                this.p1(this.l2, false);
            }
        }
        px() {
            if (!this.nu) {
                this.nu = true;
                this.je(true);
            }
        }
        pz(a, b, c) {
            if (a.ch(this.n7, this.n2, this.ok)) {
                let d = this.n7;
                for (let e = 0; e < this.n7.count; e++) {
                    let f = d._inner[e];
                    let g = f.a.item != null ? f.a.item : f.a;
                    let h = a;
                    let i = new CalloutKey(g, h);
                    let j = new CalloutAnnotationWrapper();
                    let k = new CalloutAnnotation();
                    j.b = k;
                    k.key = i;
                    let l = false;
                    let m = false;
                    if (this.nu) {
                        this.nu = false;
                        m = true;
                    }
                    if (this.n3.containsKey(j)) {
                        j = this.n3.item(j).c;
                        k = j.b;
                    }
                    else {
                        if (!m) {
                            l = true;
                        }
                    }
                    let n = k.xValue;
                    let o = k.yValue;
                    if (this.oi(n) != this.oi(f.b)) {
                        k.xValue = f.b;
                    }
                    if (this.oi(o) != this.oi(f.c)) {
                        k.yValue = f.c;
                    }
                    k.series = a;
                    if (l && this.calloutLabelUpdating != null) {
                        let p = ((() => {
                            let $ret = new CalloutLabelUpdatingEventArgs();
                            $ret.c = k.xValue;
                            $ret.d = k.yValue;
                            $ret.item = g;
                            return $ret;
                        })());
                        this.calloutLabelUpdating(this, p);
                        if (p.b != null && !Base.equalsStatic(p.b, j.b.text)) {
                            let q = p.b;
                            j.b.text = q != null ? q.toString() : "";
                        }
                    }
                    else {
                        if (f.d != null) {
                            k.text = f.d;
                        }
                    }
                    if (k.text == null) {
                        continue;
                    }
                    if (l) {
                        if (this.calloutContentUpdating != null) {
                            let r = ((() => {
                                let $ret = new CalloutContentUpdatingEventArgs();
                                $ret.c = k.xValue;
                                $ret.d = k.yValue;
                                $ret.item = g;
                                $ret.a = g;
                                return $ret;
                            })());
                            this.calloutContentUpdating(this, r);
                            if (r.a != null && r.a != j.b.content) {
                                j.b.content = r.a;
                            }
                        }
                        else {
                            if (g != null && g != j.b.content) {
                                j.b.content = g;
                            }
                        }
                    }
                    if (l) {
                        this.p3(j);
                    }
                    if (j.c == null) {
                        let s = new LabelCollisionInfo();
                        j.c = s;
                        let t = this.m8.cj(this.oo(j), j.b.backgroundPadding);
                        s.k = t.height / 2;
                        s.l = t.width / 2;
                    }
                    let u = this.nr(j);
                    if (u == null || u.b < this.lz.left || u.b > this.lz.right || u.c < this.lz.top || u.c > this.lz.bottom) {
                        continue;
                    }
                    c.add(j);
                }
            }
        }
        bd() {
            return 1;
        }
        ar(a, b) {
            let c = this.no.d(a, b);
            if (c == null) {
                return null;
            }
            return c.u;
        }
        dh(a, b) {
            if (this.no == null) {
                return false;
            }
            return this.no.d(a, b) != null;
        }
        p1(a, b) {
            let c = 0;
            let d = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            for (c = 0; c < a.p.count; c++) {
                let e = a.m._inner[c];
                if (isNaN_(a.t._inner[c]) || isNaN_(a.u._inner[c])) {
                    continue;
                }
                let f = this.m8.b6.item(e);
                d.add_1(e);
                if (f.f != a.p._inner[c]) {
                    f.f = a.p._inner[c];
                    let g = f.s();
                }
                f.c = a.n._inner[c];
                f.k = a.f._inner[c];
                f.n = a.o._inner[c];
                f.m = f.c > 0 ? a.h._inner[c] : this.bi.bn();
                f.l = a.g._inner[c];
                f.v = new Thickness(1, a.j._inner[c], a.l._inner[c], a.k._inner[c], a.i._inner[c]);
                this.m8.cc(f, Math.min(a.r._inner[c], a.r._inner[c] + a.t._inner[c]), Math.min(a.s._inner[c], a.s._inner[c] + a.u._inner[c]));
                this.m8.cd(f, e, a.q._inner[c]);
                f.p = { $type: Point_$type, x: a.t._inner[c], y: a.u._inner[c] };
            }
            let h = new List$1(CalloutAnnotationWrapper.$, 0);
            for (let i of fromEnum(this.m8.b6.c)) {
                if (!d.contains(i)) {
                    h.add(i);
                }
            }
            for (let j = 0; j < h.count; j++) {
                this.m8.b6.g(h._inner[j]);
            }
        }
        mr(a, b) {
            super.mr(a, b);
            if (this.ca()) {
                this.p1(this.l4, true);
            }
            else {
                this.p1(this.l2, false);
            }
        }
        c8() {
            return true;
        }
        i0(a, b, c, d) {
            super.i0(a, b, c, d);
            switch (b) {
                case CalloutLayer.$$p[21]:
                    this.nc = null;
                    this.je(true);
                    break;
                case CalloutLayer.$$p[20]:
                    this.je(true);
                    break;
                case CalloutLayer.$$p[13]:
                    this.je(true);
                    break;
                case "SeriesViewer":
                    if (c != null) {
                        let e = c;
                        e.seriesAnimating = delegateRemove(e.seriesAnimating, runOn(this, this.p0));
                    }
                    if (d != null) {
                        let f = d;
                        f.seriesAnimating = delegateCombine(f.seriesAnimating, runOn(this, this.p0));
                    }
                    if (d == null) {
                        this.pu();
                    }
                    break;
                case CalloutLayer.$$p[15]:
                case CalloutLayer.$$p[16]:
                case CalloutLayer.$$p[1]:
                case CalloutLayer.$$p[5]:
                case CalloutLayer.$$p[4]:
                case CalloutLayer.$$p[7]:
                case CalloutLayer.$$p[9]:
                case CalloutLayer.$$p[8]:
                case CalloutLayer.$$p[6]:
                case CalloutLayer.$$p[11]:
                case CalloutLayer.$$p[12]:
                    this.pv();
                    break;
                case CalloutLayer.$$p[19]:
                    if (this.bz != null) {
                        this.bz.deregisterColumn(this.nl);
                        this.nl = this.by(this.pe);
                    }
                    break;
                case "LabelColumn":
                    this.pv();
                    break;
                case CalloutLayer.$$p[14]:
                    if (this.bz != null) {
                        this.bz.deregisterColumn(this.nj);
                        this.nj = this.by(this.o5);
                    }
                    break;
                case "ContentColumn":
                    this.pv();
                    break;
                case CalloutLayer.$$p[23]:
                    if (this.bz != null) {
                        this.bz.deregisterColumn(this.nm);
                        this.nm = stringIsNullOrEmpty(this.pl) == false ? this.by(this.pl) : null;
                    }
                    break;
                case "XColumn":
                    this.pv();
                    break;
                case CalloutLayer.$$p[24]:
                    if (this.bz != null) {
                        this.bz.deregisterColumn(this.nn);
                        this.nn = this.by(this.po);
                    }
                    break;
                case "YColumn":
                    this.pv();
                    break;
                case CalloutLayer.$$p[18]:
                    if (this.bz != null) {
                        this.bz.deregisterColumn(this.nk);
                        this.nk = this.by(this.pb);
                    }
                    break;
                case "KeyColumn":
                    this.pv();
                    break;
                case "FastItemsSource":
                    this.nt = true;
                    if (typeCast(IFastItemsSource_$type, c) != null) {
                        c.deregisterColumn(this.nl);
                        c.deregisterColumn(this.nj);
                        c.deregisterColumn(this.nm);
                        c.deregisterColumn(this.nn);
                        c.deregisterColumn(this.nk);
                        this.nl = null;
                        this.nj = null;
                        this.nm = null;
                        this.nn = null;
                        this.nk = null;
                        this.n9.clear();
                    }
                    if (typeCast(IFastItemsSource_$type, d) != null) {
                        this.nl = this.by(this.pe);
                        this.nj = this.by(this.o5);
                        if (stringIsNullOrEmpty(this.pl) == false) {
                            this.nm = this.by(this.pl);
                        }
                        this.nn = this.by(this.po);
                        this.nk = this.by(this.pb);
                    }
                    this.pv();
                    break;
            }
        }
        p0(a) {
            if (a.cj) {
                return;
            }
            if ((a == this.nb || this.nb == null) && this.nz) {
                this.je(false);
            }
        }
        pv() {
            if (this.ns == false) {
                this.ns = true;
                this.je(false);
            }
        }
        pt() {
            this.m8.b6.clear();
            this.n6.g();
            this.n3.clear();
        }
        pw() {
            if (this.nn == null || this.nl == null) {
                let a = this.n6.c;
                while (a != null) {
                    this.p3(a.c);
                    a = a.a;
                }
                return;
            }
            let b = this.n4();
            for (let c = 0; c < this.nn.count; c++) {
                let d;
                if (this.n9.count <= c) {
                    let e = new CalloutAnnotation();
                    d = new CalloutAnnotationWrapper();
                    d.b = e;
                    d.b.series = this.nb;
                    this.n9.add(d);
                }
                else {
                    d = this.n9._inner[c];
                }
                this.p2(c, b);
            }
        }
    }
    CalloutLayer.$t = /*@__PURE__*/ markType(CalloutLayer, 'CalloutLayer', AnnotationLayer.$);
    CalloutLayer.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, CalloutLayer, 'raisePropertyChanged', ['AutoCalloutLabelPrecision:ok:p4', [1, 5], 'CalloutBackground:qt:p5', [Brush.$, null], 'CalloutCollisionMode:m5:p6', [CalloutCollisionMode_$type, /*@__PURE__*/ enumGetBox(CalloutCollisionMode_$type, 3)], 'CalloutInterpolatedValuePrecision:ol:p7', [1, -1], 'CalloutLeaderBrush:qu:p8', [Brush.$, null], 'CalloutOutline:qv:p9', [Brush.$, null], 'CalloutPaddingBottom:oc:qa', [1, NaN], 'CalloutPaddingLeft:od:qb', [1, NaN], 'CalloutPaddingRight:oe:qc', [1, NaN], 'CalloutPaddingTop:of:qd', [1, NaN], 'CalloutPositionPadding:og:qe', [1, 10], 'CalloutStrokeThickness:oh:qf', [1, NaN], 'CalloutTextColor:qw:qg', [Brush.$, null], 'CollisionChannel:o2:qh', [2, null], 'ContentMemberPath:o5:qi', [2, null], 'IsAutoCalloutBehaviorEnabled:nz:qj', [0, false], 'IsCalloutOffsettingEnabled:n0:qk', [0, true], 'IsCustomCalloutStyleEnabled:n1:ql', [0, false], 'KeyMemberPath:pb:qm', [2, null], 'LabelMemberPath:pe:qn', [2, null], 'TargetSeries:nb:qo', [Series.$, null], 'TextStyle:ph:qp', [2, null], 'UseValueForAutoCalloutLabels:n2:qq', [0, true], 'XMemberPath:pl:qr', [2, null], 'YMemberPath:po:qs', [2, null]]);
    return CalloutLayer;
})();
/**
 * @hidden
 */
export let CalloutLayerView = /*@__PURE__*/ (() => {
    class CalloutLayerView extends AnnotationLayerView {
        constructor(a) {
            super(a);
            this.b1 = null;
            this.b7 = null;
            this.b6 = null;
            this.b8 = NaN;
            this.b2 = null;
            this.b1 = a;
            this.b7 = new List$1(CalloutView.$, 0);
        }
        ap() {
            super.ap();
            this.b6 = ((() => {
                let $ret = new HashPool$2(CalloutAnnotationWrapper.$, CalloutView.$);
                $ret.create = runOn(this, this.b3);
                $ret.activate = runOn(this, this.b9);
                $ret.disactivate = runOn(this, this.cb);
                $ret.destroy = runOn(this, this.ca);
                return $ret;
            })());
        }
        b3() {
            let a = new CalloutView(this);
            this.b7.add(a);
            return a;
        }
        b9(a) {
            a.w = 0;
        }
        cb(a) {
            a.w = 1;
        }
        ca(a) {
            this.b7.remove(a);
        }
        ci(a) {
            if (a == null) {
                return a;
            }
            return BrushUtil.l(a, 0.1);
        }
        a3(a, b) {
            super.a3(a, b);
            a.ac(this.b5());
            if (a.d && !b) {
                for (let c = 0; c < this.b7.count; c++) {
                    let d = this.b7._inner[c];
                    if (d.w == 0) {
                        d.h(a);
                    }
                }
            }
        }
        b5() {
            if (this.b1.nd != null) {
                return this.b1.nd;
            }
            return this.e.bs.getFontInfo();
        }
        ai(a) {
            super.ai(a);
            for (let b = 0; b < this.b7.count; b++) {
                let c = this.b7._inner[b];
                if (c.w != 0) {
                    continue;
                }
                c.g(this.b1, this.b5(), a);
            }
        }
        ck(a) {
            if (isNaN_(this.b8)) {
                this.b8 = this.e.bs.bn.a7;
            }
            return new Size(1, this.h.f(a.ak), this.b8);
        }
        cj(a, b) {
            if (this.b2 == null) {
                this.b2 = new CalloutView(this);
            }
            this.b2.f = a;
            this.b2.v = b;
            let c = this.b2.s();
            this.b2.f = null;
            return c;
        }
        b4() {
            return new DOMExecutionContext(this.e.bs.bn.i.ae);
        }
        cc(a, b, c) {
            a.d = b;
            a.e = c;
        }
        cd(a, b, c) {
            a.i(this.e, b, c);
        }
        ce(a) {
            if (a != null) {
                return this.ci(a.k4);
            }
            return this.e.k4;
        }
        ch() {
            return ((() => {
                let $ret = new Brush();
                $ret.color = Color.u(255, 255, 255, 255);
                return $ret;
            })());
        }
        cg() {
            return ((() => {
                let $ret = new Brush();
                $ret.color = Color.u(255, 255, 255, 255);
                return $ret;
            })());
        }
        cf(a) {
            if (a != null) {
                return this.ci(a.k4);
            }
            return this.e.k4;
        }
    }
    CalloutLayerView.$t = /*@__PURE__*/ markType(CalloutLayerView, 'CalloutLayerView', AnnotationLayerView.$);
    return CalloutLayerView;
})();
/**
 * @hidden
 */
export let CalloutView = /*@__PURE__*/ (() => {
    class CalloutView extends Base {
        constructor(a) {
            super();
            this.a = null;
            this.w = 0;
            this.j = null;
            this.r = null;
            this.o = { $type: Point_$type, x: 0, y: 0 };
            this.q = null;
            this.u = new Thickness(0, 0);
            this.t = null;
            this.d = 0;
            this.e = 0;
            this.b = null;
            this.q = new Line();
            this.q.ab = false;
            this.q._stroke = ((() => {
                let $ret = new Brush();
                $ret.color = Color.u(255, 0, 0, 0);
                return $ret;
            })());
            this.q.ac = 2;
            this.j = new TextBlock();
            this.r = new Rectangle();
            this.r.ac = 0;
            this.a = a;
            this.w = 0;
        }
        h(a) {
            a.z();
            a.af(this.d, this.e);
            let b = new TranslateTransform();
            b.j = this.t.c;
            b.k = this.t.e;
            this.r.j = b;
            a.r(this.q);
            a.z();
            this.r.width = this.j.m + this.u.c + this.u.d;
            this.r.height = this.j.l + this.u.e + this.u.b;
            a.j(this.r.j);
            a.v(this.r);
            this.j.o = this.u.e;
            this.j.n = this.u.c;
            a.w(this.j);
            a.y();
            a.y();
        }
        get p() {
            return this.o;
        }
        set p(a) {
            if (this.o.x != a.x || this.o.y != a.y) {
                let b = this.s();
                let c = b.height;
                let d = b.width;
                this.o = a;
                let e = CalloutViewHelper.b(this.p, d, c, this.q);
                this.t = e;
            }
        }
        get n() {
            return this.j.am;
        }
        set n(a) {
            this.j.am = a;
        }
        get m() {
            return this.r._stroke;
        }
        set m(a) {
            this.r._stroke = a;
        }
        get l() {
            return this.q._stroke;
        }
        set l(a) {
            this.q._stroke = a;
        }
        get k() {
            return this.r._fill;
        }
        set k(a) {
            this.r._fill = a;
        }
        get c() {
            return this.r.ac;
        }
        set c(a) {
            this.r.ac = a;
        }
        get v() {
            return this.u;
        }
        set v(a) {
            this.u = a;
        }
        get f() {
            return this.j.ak;
        }
        set f(a) {
            if (a == null) {
                this.j.ak = "";
            }
            else {
                this.j.ak = a.toString();
            }
            let b = this.s();
            let c = b.height;
            let d = b.width;
            let e = CalloutViewHelper.b(this.p, d, c, this.q);
            this.t = e;
        }
        s() {
            let a = this.a.ck(this.j);
            this.j.m = a.width;
            this.j.l = a.height;
            return new Size(1, a.width + this.u.c + this.u.d, a.height + this.u.e + this.u.b);
        }
        i(a, b, c) {
            if (this.b == null) {
                this.b = new DataContext();
            }
            this.b.series = a;
            this.b.item = c;
            if (b.c != null) {
                b.c.u = this.b;
            }
        }
        g(a, b, c) {
            a.a2.exportCalloutData(this.d, this.e, this.t.c, this.t.e, c, this.r, this.j, b, this.q, "callout", ["Main", "Callout"]);
        }
    }
    CalloutView.$t = /*@__PURE__*/ markType(CalloutView, 'CalloutView');
    return CalloutView;
})();
//# sourceMappingURL=CalloutLayer_combined.js.map
