/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Series } from "./Series";
import { DependencyProperty } from "igniteui-react-core";
import { IEnumerable$1_$type, typeCast, Point_$type, fromEnum, Array_$type, Number_$type, markType, markDep, runOn } from "igniteui-react-core";
import { NumericXAxis } from "./NumericXAxis";
import { NumericYAxis } from "./NumericYAxis";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { PointCollectionUtil } from "igniteui-react-core";
import { FlattenedShape } from "./FlattenedShape";
import { SeriesView } from "./SeriesView";
import { Clipper } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { Dictionary$2 } from "igniteui-react-core";
import { Tuple$2 } from "igniteui-react-core";
import { PolySimplification } from "igniteui-react-core";
import { DefaultFlattener } from "./DefaultFlattener";
import { DataContext } from "igniteui-react-core";
import { FrameworkElement } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { Style } from "igniteui-react-core";
import { StyleShapeEventArgs } from "./StyleShapeEventArgs";
import { PropertyMetadata } from "igniteui-react-core";
import { boxArray$1 } from "igniteui-react-core";
import { InvalidOperationException } from "igniteui-react-core";
import { isNaN_, truncate } from "igniteui-react-core";
import { FastItemObjectColumn } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { Pool$1 } from "igniteui-react-core";
import { ShapeHitRegion } from "./ShapeHitRegion";
import { PointCollection } from "igniteui-react-core";
import { PathGeometry } from "igniteui-react-core";
import { PolyLineSegment } from "igniteui-react-core";
import { PathFigure } from "igniteui-react-core";
import { GeometryUtil } from "igniteui-react-core";
import { PolygonUtil } from "igniteui-react-core";
import { RectUtil } from "igniteui-react-core";
/**
 * @hidden
 */
var ShapeSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ShapeSeriesBase, _super);
    function ShapeSeriesBase() {
        var _this = _super.call(this) || this;
        _this.mb = null;
        _this.l6 = null;
        _this.l8 = null;
        _this.mo = 0;
        _this.mk = null;
        _this.l2 = null;
        _this.l4 = null;
        _this.l3 = null;
        _this.l1 = null;
        _this.m9 = null;
        _this.mq = 0;
        _this.styleShape = null;
        FastItemObjectColumn.m();
        _this.mq = _this.mp;
        _this.m9 = Rect.empty;
        return _this;
    }
    ShapeSeriesBase.prototype.hu = function () {
        _super.prototype.hu.call(this);
        this.l7 = null;
        this.l9 = null;
    };
    ShapeSeriesBase.prototype.ag = function () {
        return [this.l7, this.l9];
    };
    ShapeSeriesBase.prototype.fs = function (a, b) {
        var c = this.gv(b);
        if (c == ShapeSeriesBase.$$p[1]) {
            return this.ft(a, b, this.mv);
        }
        return null;
    };
    Object.defineProperty(ShapeSeriesBase.prototype, "mc", {
        get: function () {
            return this.mb;
        },
        set: function (a) {
            var b = this.mc != a;
            if (b) {
                var c = this.mc;
                this.mb = a;
                this.raisePropertyChanged("ShapeColumn", c, this.mc);
            }
        },
        enumerable: true,
        configurable: true
    });
    ShapeSeriesBase.prototype.mf = function (array_) {
        var a = (Array.isArray(array_));
        return a;
    };
    ShapeSeriesBase.mh = function (a) {
        if (a == null) {
            return true;
        }
        var val_ = a;
        return (val_ == undefined);
    };
    ShapeSeriesBase.prototype.convertToListList = function (a) {
        if (a == null) {
            return null;
        }
        var b = new List$1(List$1.$.specialize(Point_$type), 0);
        var c;
        var curr_;
        var d;
        var e;
        var f = false;
        var g = false;
        for (var h = 0; h < a.length; h++) {
            c = a[h];
            if (c == null) {
                continue;
            }
            var i = new List$1(Point_$type, 0);
            for (var j = 0; j < c.length; j++) {
                curr_ = c[j];
                if (f) {
                    d = (curr_.X);
                    e = (curr_.Y);
                }
                else {
                    d = (curr_.x);
                    e = (curr_.y);
                }
                if (!g) {
                    if ((isNaN_(d) || ShapeSeriesBase.mh(d)) && (isNaN_(e) || ShapeSeriesBase.mh(e))) {
                        d = (curr_.X);
                        e = (curr_.Y);
                        if (!isNaN_(d) && !ShapeSeriesBase.mh(d) && !isNaN_(e) && !ShapeSeriesBase.mh(e)) {
                            g = true;
                            f = true;
                        }
                    }
                    else {
                        g = true;
                    }
                }
                i.add({ $type: Point_$type, x: d, y: e });
            }
            b.add(i);
        }
        return b;
    };
    ShapeSeriesBase.prototype.by = function (a) {
        if (this.bz != null && this.mf(this.itemsSource) && a != null && a.split('!').length != 2) {
            if (this.coercionMethods == null) {
                this.coercionMethods = {};
            }
            var methods_ = this.coercionMethods;
            methods_.convertToListList = this.convertToListList;
            a += "!convertToListList";
        }
        return _super.prototype.by.call(this, a);
    };
    ShapeSeriesBase.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
        var e = false;
        var f = false;
        switch (b) {
            case "FastItemsSource":
                var g = typeCast(IFastItemsSource_$type, c);
                if (g != null) {
                    g.deregisterColumn(this.mc);
                    this.mc = null;
                }
                var h = typeCast(IFastItemsSource_$type, d);
                if (h != null) {
                    this.mc = this.by(this.mv);
                }
                e = this.l7 != null && !this.l7.cn();
                f = this.l9 != null && !this.l9.cn();
                if (e || f) {
                    this.je(false);
                }
                break;
            case ShapeSeriesBase.$$p[1]:
                if (this.bz != null) {
                    this.bz.deregisterColumn(this.mc);
                    this.mc = this.by(this.mv);
                }
                break;
            case "ShapeColumn":
                this.m2();
                e = this.l7 != null && !this.l7.cn();
                f = this.l9 != null && !this.l9.cn();
                if (e || f) {
                    this.je(false);
                }
                this.il();
                break;
            case ShapeSeriesBase.$$p[2]:
            case ShapeSeriesBase.$$p[3]:
                this.l6 = this.l7;
                this.l8 = this.l9;
                var i = c;
                var j = d;
                this.m3(i);
                this.m0(j);
                if ((j != null && !j.cn()) || (j == null && i != null)) {
                    this.je(false);
                }
                this.il();
                break;
            case "Resolution":
                this.mo = this.eu;
                this.il();
                break;
            case "ActualBrush":
                this.je(false);
                break;
            case ShapeSeriesBase.$$p[0]:
                this.mq = this.mp;
                this.je(false);
                this.il();
                break;
            case "Thickness":
                this.je(false);
                this.il();
                break;
        }
    };
    ShapeSeriesBase.prototype.me = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    ShapeSeriesBase.prototype.md = function (a) {
        if (typeCast(NumericXAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    ShapeSeriesBase.prototype.m2 = function () {
        this.mk = null;
        if (this.mc == null) {
            return;
        }
        this.mk = new List$1(Rect.$, 2, this.mc.count);
        for (var a = 0; a < this.mc.count; a++) {
            this.mk.add(PointCollectionUtil.j(this.mc.item(a)));
        }
    };
    ShapeSeriesBase.prototype.na = function (a) {
        if (typeCast(IEnumerable$1_$type.specialize(IEnumerable$1_$type.specialize(Point_$type)), a) !== null) {
            return PointCollectionUtil.h(a);
        }
        else if (typeCast(IEnumerable$1_$type.specialize(Point_$type), a) !== null) {
            return PointCollectionUtil.g(a);
        }
        return Rect.empty;
    };
    ShapeSeriesBase.prototype.mm = function (a, b, c, d, e) {
        var e_1, _a;
        return this.mn(a, b, c, d, e);
        if (typeCast(List$1.$.specialize(List$1.$.specialize(Point_$type)), c) !== null) {
            return this.mn(a, b, c, d, e);
        }
        else if (typeCast(IEnumerable$1_$type.specialize(IEnumerable$1_$type.specialize(Point_$type)), c) !== null) {
            var f = c;
            var g = new List$1(FlattenedShape.$, 0);
            var h = null;
            try {
                for (var _b = tslib_1.__values(fromEnum(f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var i = _c.value;
                    h = this.l5(a, b, PointCollectionUtil.b(i), d, e);
                    if (h == null) {
                        continue;
                    }
                    g.add(h);
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return g;
        }
        else if (typeCast(IEnumerable$1_$type.specialize(Point_$type), c) !== null) {
            var j = c;
            var k = this.l5(a, b, PointCollectionUtil.b(j), d, e);
            var l = new List$1(FlattenedShape.$, 0);
            if (k != null) {
                l.add(k);
            }
            return l;
        }
        else {
            throw new InvalidOperationException(1, "Unrecognized data in ShapeColumn");
        }
    };
    ShapeSeriesBase.prototype.get_mg = function () {
        return true;
    };
    Object.defineProperty(ShapeSeriesBase.prototype, "mg", {
        get: function () {
            return this.get_mg();
        },
        enumerable: true,
        configurable: true
    });
    ShapeSeriesBase.prototype.mj = function () {
        return false;
    };
    ShapeSeriesBase.prototype.jf = function (a) {
        this.m1(this.bi);
    };
    ShapeSeriesBase.prototype.jd = function (a, b, c, d, e) {
        _super.prototype.jd.call(this, a, b, c, d, e);
        var f = this.a0.a$h.item(d);
        var g = f;
        f.ay(c);
        if (this.cc(f)) {
            return;
        }
        this.m1(f);
    };
    ShapeSeriesBase.prototype.m1 = function (a) {
        if (this.cc(a)) {
            return;
        }
        var b;
        var c;
        var d = a;
        var e = a.getViewInfo(c, b);
        c = e.p0;
        b = e.p1;
        if (c.width < 1 || c.height < 1 || this.mc == null) {
            return;
        }
        var f = this.l7;
        var g = this.l9;
        var h = this.getEffectiveViewport1(a);
        var i = new ScalerParams(1, b, c, f.ca);
        i.c = h;
        var j = new ScalerParams(1, b, c, g.ca);
        j.c = h;
        d.cj();
        var k = new Rect(0, 0, 0, 0, 0);
        var l;
        var m;
        var n;
        var o;
        var p = this.mc.count;
        if (this.l4 == null || this.l4.length != p) {
            this.l4 = new Array(p);
            this.l2 = new Array(p);
            this.l3 = new Array(p);
            this.l1 = new Array(p);
        }
        var q = this.l4;
        var r = this.l2;
        var s = this.l3;
        var t = this.l1;
        var u;
        for (var v = 0; v < p; v++) {
            u = this.mk._inner[v];
            q[v] = u.top;
            r[v] = u.left;
            s[v] = u.right;
            t[v] = u.bottom;
        }
        this.l6.gs(boxArray$1(r), 0, r.length, i);
        this.l6.gs(boxArray$1(s), 0, s.length, i);
        this.l8.gs(boxArray$1(q), 0, q.length, j);
        this.l8.gs(boxArray$1(t), 0, t.length, j);
        d.ck(r, q, s, t);
        var w = this.mc;
        var x = this.bz;
        this.m4(d);
        var y = c.left;
        var z = c.right;
        var aa = c.top;
        var ab = c.bottom;
        var ac = null;
        if (this.m9.isEmpty) {
            ac = null;
        }
        else {
            ac = new Clipper(1, this.m9.left, this.m9.bottom, this.m9.right, this.m9.top, this.mg);
        }
        var ad = this.mj();
        if (ad) {
            d.b3.clear();
        }
        var ae;
        for (var af = 0; af < p; af++) {
            n = r[af];
            l = q[af];
            m = t[af];
            o = s[af];
            k.x = Math.min(n, o);
            k.y = Math.min(l, m);
            k.width = Math.max(n, o) - k.x;
            k.height = Math.max(l, m) - k.y;
            if (k.intersectsWith(c)) {
                if (k.x < y || k.y < aa || k.x > z || k.y > ab) {
                    ae = ac;
                }
                else {
                    ae = null;
                }
                var ag = this.mm(a, ae, w.item(af), i, j);
                if (ad) {
                    var ah = 0;
                    var ai = null;
                    for (var aj = 0; aj < ag.count; aj++) {
                        var ak = ag._inner[aj];
                        var al = ak.b.width * ak.b.height;
                        if (al > ah) {
                            ah = al;
                            ai = ak;
                        }
                    }
                    d.b3.addItem(af, ai);
                }
                d.b8(af, x.item(af), k, ag);
            }
        }
        d.ci();
    };
    ShapeSeriesBase.prototype.ic = function () {
        _super.prototype.ic.call(this);
        if (this.l7 != null) {
            this.l7.ha();
        }
        if (this.l9 != null) {
            this.l9.ha();
        }
    };
    ShapeSeriesBase.prototype.ju = function (a, b) {
        this.je(false);
    };
    ShapeSeriesBase.prototype.jt = function (a, b) {
        this.je(false);
    };
    ShapeSeriesBase.prototype.hz = function (a, b, c, d) {
        _super.prototype.hz.call(this, a, b, c, d);
        switch (a) {
            case 3:
                if (d == this.mv) {
                    this.mk._inner[b] = this.na(this.mc.item(b));
                }
                break;
            case 1:
                for (var e = b; e < b + c; e++) {
                    this.mk.insert(e, this.na(this.mc.item(e)));
                }
                break;
            case 0:
                this.mk.v(b, c);
                break;
            case 2:
                for (var f = b; f < b + c; f++) {
                    this.mk._inner[f] = this.na(this.mc.item(f));
                }
                break;
            case 4:
                this.m2();
                break;
        }
        this.je(false);
    };
    ShapeSeriesBase.prototype.dw = function (a, b, c) {
        var d = true;
        if (!_super.prototype.dw.call(this, a, b, c) || (this.mi && this.mc == null) || b.isEmpty || a.isEmpty || this.l7 == null || this.l9 == null || this.l7.bh == null || this.l9.bh == null || this.l7.kb == this.l7.ka || this.l9.kb == this.l9.ka || this.mc == null || this.mc.count == 0 || this.mk == null || this.mk.count == 0 || this.mk.count != this.mc.count) {
            d = false;
        }
        return d;
    };
    ShapeSeriesBase.prototype.get_mi = function () {
        return true;
    };
    Object.defineProperty(ShapeSeriesBase.prototype, "mi", {
        get: function () {
            return this.get_mi();
        },
        enumerable: true,
        configurable: true
    });
    ShapeSeriesBase.prototype.iv = function (a) {
        _super.prototype.iv.call(this, a);
        this.ma = typeCast(ShapeSeriesViewBase.$, a);
    };
    ShapeSeriesBase.prototype.mn = function (a, b, c, d, e) {
        var f = new List$1(FlattenedShape.$, 0);
        var g;
        var h = c.count;
        for (var i = 0; i < h; i++) {
            g = c._inner[i];
            var j = this.l5(a, b, g, d, e);
            if (j == null) {
                continue;
            }
            f.add(j);
        }
        return f;
    };
    ShapeSeriesBase.prototype.l5 = function (a, b, c, d, e) {
        var f = this.mz(c, d, e);
        var g = f.c;
        var h = f.d;
        var i = g.length;
        var j = 1.7976931348623157E+308;
        var k = 1.7976931348623157E+308;
        var l = -1.7976931348623157E+308;
        var m = -1.7976931348623157E+308;
        var n;
        var o;
        for (var p = 0; p < i; p++) {
            n = g[p];
            o = h[p];
            j = n < j ? n : j;
            k = o < k ? o : k;
            l = n > l ? n : l;
            m = o > m ? o : m;
        }
        var q = !(j > this.m9.right || l < this.m9.left || k > this.m9.bottom || m < this.m9.top);
        if (!q) {
            return null;
        }
        var r = b != null && (j < this.m9.left || k < this.m9.top || l > this.m9.right || m > this.m9.bottom);
        var s = new Rect(0, j, k, l - j, m - k);
        if (!a.b2(s)) {
            return null;
        }
        j = j < this.m9.left ? this.m9.left : j;
        l = l > this.m9.right ? this.m9.right : l;
        k = k < this.m9.top ? this.m9.top : k;
        m = m > this.m9.bottom ? this.m9.bottom : m;
        var t = PolySimplification.b(f, this.eu);
        var u = new DefaultFlattener().c(f.c, f.d, t, this.mo);
        var v = u.count;
        if (r) {
            var w = new List$1(Point_$type, 0);
            b.i = w;
            for (var x = 0; x < v; x++) {
                b.j(u._inner[x]);
            }
            b.i = null;
            u = w;
        }
        if (u == null || u.count == 0) {
            return null;
        }
        var y = new FlattenedShape();
        y.a = u;
        y.b = new Rect(0, j, k, l - j, m - k);
        y.c = s;
        return y;
    };
    ShapeSeriesBase.prototype.mz = function (a, b, c) {
        var d = this.l6;
        var e = this.l8;
        var f = a.count;
        var g = new Array(f);
        var h = new Array(f);
        for (var i = 0; i < f; i++) {
            g[i] = a._inner[i].x;
            h[i] = a._inner[i].y;
        }
        d.gs(boxArray$1(g), 0, g.length, b);
        e.gs(boxArray$1(h), 0, h.length, c);
        return new Tuple$2(Array_$type, Array_$type, g, h);
    };
    ShapeSeriesBase.prototype.m4 = function (a) {
        a.cp();
    };
    ShapeSeriesBase.prototype.hw = function (a, b) {
        _super.prototype.hw.call(this, a, b);
        var c = b;
        c.cd();
    };
    ShapeSeriesBase.prototype.m0 = function (a) {
        if (a != null) {
            a.ck(this);
        }
    };
    ShapeSeriesBase.prototype.m3 = function (a) {
        if (a != null) {
            a.bx(this);
        }
    };
    ShapeSeriesBase.prototype.ar = function (a, b) {
        var c = this.ma.cr(a, b);
        var d = null;
        if (c != null) {
            d = c.dataContext;
        }
        if (d != null) {
            return d;
        }
        return _super.prototype.ar.call(this, a, b);
    };
    ShapeSeriesBase.prototype.ms = function (a) {
        return this.bz.item(a);
    };
    ShapeSeriesBase.prototype.get_dq = function () {
        return true;
    };
    ShapeSeriesBase.prototype.set_dq = function (a) {
        _super.prototype.set_dq.call(this, a);
    };
    ShapeSeriesBase.prototype.an = function (a) {
        var e_2, _a, e_3, _b;
        if (typeCast(NumericXAxis.$, a) !== null && this.mk != null) {
            var b = 1.7976931348623157E+308;
            var c = -1.7976931348623157E+308;
            try {
                for (var _c = tslib_1.__values(fromEnum(this.mk)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var d = _d.value;
                    b = Math.min(b, d.left);
                    c = Math.max(c, d.right);
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return new AxisRange(b, c);
        }
        if (typeCast(NumericYAxis.$, a) !== null && this.mk != null) {
            var e = 1.7976931348623157E+308;
            var f = -1.7976931348623157E+308;
            try {
                for (var _e = tslib_1.__values(fromEnum(this.mk)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var g = _f.value;
                    e = Math.min(e, g.top);
                    f = Math.max(f, g.bottom);
                }
            }
            catch (e_3_1) {
                e_3 = { error: e_3_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_3)
                        throw e_3.error;
                }
            }
            return new AxisRange(e, f);
        }
        return null;
    };
    ShapeSeriesBase.prototype.get_c5 = function () {
        return true;
    };
    ShapeSeriesBase.prototype.nb = function (a, b, c) {
        if (this.styleShape != null) {
            if (this.ma.cx != null && c == this.ma.cx) {
                c = new Style();
                var d = this.ma.cx;
                c.fill = d.fill;
                c.opacity = d.opacity;
                c.stroke = d.stroke;
                c.strokeThickness = d.strokeThickness;
            }
            else {
                if (c != null) {
                    var e = new Style();
                    e.fill = c.fill;
                    e.opacity = c.opacity;
                    e.stroke = c.stroke;
                    e.strokeThickness = c.strokeThickness;
                    c = e;
                }
                else {
                    c = new Style();
                }
            }
            var f = new StyleShapeEventArgs(a, b, c);
            this.styleShape(this, f);
            return f.d();
        }
        return null;
    };
    ShapeSeriesBase.$t = markType(ShapeSeriesBase, 'ShapeSeriesBase', Series.$);
    ShapeSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, ShapeSeriesBase, 'raisePropertyChanged', ['ShapeFilterResolution:mp:m5', [1, 2], 'ShapeMemberPath:mv:m6', [2, null], 'XAxis:l7:m7', [NumericXAxis.$, null], 'YAxis:l9:m8', [NumericYAxis.$, null]]);
    return ShapeSeriesBase;
}(Series));
export { ShapeSeriesBase };
/**
 * @hidden
 */
var ShapeSeriesViewBase = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ShapeSeriesViewBase, _super);
    function ShapeSeriesViewBase(a) {
        var _this = _super.call(this, a) || this;
        _this.b3 = null;
        _this.by = null;
        _this.b4 = new List$1(ShapeHitRegion.$, 0);
        _this.b7 = 0;
        _this.b6 = null;
        _this.b1 = null;
        _this.bz = null;
        _this.cw = null;
        _this.bv = null;
        _this.bx = null;
        _this.bw = null;
        _this.bu = null;
        _this.by = a;
        _this.b1 = _this.b0();
        _this.b6 = new List$1(Path.$, 0);
        _this.b3 = new Dictionary$2(Number_$type, FlattenedShape.$, 0);
        return _this;
    }
    ShapeSeriesViewBase.prototype.b0 = function () {
        var _this = this;
        return ((function () {
            var $ret = new Pool$1(FrameworkElement.$);
            $ret.create = runOn(_this, _this.cq);
            $ret.activate = runOn(_this, _this.cf);
            $ret.disactivate = runOn(_this, _this.cg);
            $ret.destroy = runOn(_this, _this.ch);
            return $ret;
        })());
    };
    ShapeSeriesViewBase.prototype.b2 = function (a) {
        return a.width >= this.by.mq && a.height >= this.by.mq;
    };
    ShapeSeriesViewBase.b5 = function (a) {
        var b = new List$1(PointCollection.$, 0);
        var c;
        var d = a.count;
        for (var e = 0; e < d; e++) {
            c = a._inner[e];
            var f = new PointCollection(1, c.a);
            b.add(f);
        }
        return b;
    };
    ShapeSeriesViewBase.prototype.b8 = function (a, b, c, d) {
        if (d != null && d.count > 0) {
            var e = ShapeSeriesViewBase.b5(d);
            c.intersect(this.br);
            if (!this.b2(c)) {
            }
            else {
                var f = this.cu(a, e);
                if (f != null) {
                    var g = this.ct(this.b7, b);
                    for (var h = 0; h < d.count; h++) {
                        var i = new ShapeHitRegion();
                        i.d = d._inner[h].b;
                        i.a = d._inner[h].a;
                        i.b = a;
                        i.c = g;
                        this.b4.add(i);
                    }
                    this.ce(g);
                    this.ca(g, f);
                    this.cc(g, b);
                    this.b7 = this.b7 + 1;
                }
            }
        }
    };
    ShapeSeriesViewBase.prototype.ct = function (a, b) {
        var c = this.b1.item(this.b7);
        if (c.dataContext != null) {
            c.dataContext.item = b;
        }
        return c;
    };
    ShapeSeriesViewBase.cb = function (a, b, c) {
        if (b._fill == null) {
            b._fill = a.e.k4;
        }
        if (b._stroke == null) {
            b._stroke = a.e.k5;
        }
        if (b.y == null) {
            b.ac = a.e.ey;
        }
    };
    ShapeSeriesViewBase.prototype.cc = function (a, b) {
        if (a == null) {
            return;
        }
        var c = false;
        if (this.bz != null) {
            var d = this.bz.selectStyle(b, a);
            if (d != null) {
                c = true;
            }
            a.y = d;
        }
        if (!c) {
            a.y = this.cw;
        }
        a.y = this.by.nb(b, a, a.y);
    };
    ShapeSeriesViewBase.prototype.ce = function (a) {
    };
    ShapeSeriesViewBase.prototype.b9 = function (a, b) {
        var c = truncate(Math.floor(a.left));
        var d = truncate(Math.ceil(a.right));
        var e = truncate(Math.floor(a.top));
        var f = truncate(Math.ceil(a.bottom));
        for (var g = c; g < d; g++) {
            for (var h = e; h < f; h++) {
                this.cm(g, h, b);
            }
        }
    };
    ShapeSeriesViewBase.prototype.cm = function (a, b, c) {
    };
    ShapeSeriesViewBase.prototype.cj = function () {
        this.b7 = 0;
    };
    ShapeSeriesViewBase.prototype.ci = function () {
        this.b1.count = this.b7;
        this.an();
    };
    ShapeSeriesViewBase.prototype.cl = function (a, b) {
    };
    ShapeSeriesViewBase.prototype.cd = function () {
        this.b1.count = 0;
        this.an();
    };
    ShapeSeriesViewBase.prototype.cq = function () {
        var a = this.by;
        var b = ((function () {
            var $ret = new Path();
            $ret.dataContext = ((function () {
                var $ret = new DataContext();
                $ret.series = a;
                return $ret;
            })());
            return $ret;
        })());
        this.b6.add(b);
        return b;
    };
    ShapeSeriesViewBase.prototype.cf = function (a) {
        a._visibility = 0;
    };
    ShapeSeriesViewBase.prototype.cg = function (a) {
        a.dataContext.item = null;
        a._visibility = 1;
    };
    ShapeSeriesViewBase.prototype.ch = function (a) {
        this.b6.remove(a);
    };
    ShapeSeriesViewBase.prototype.cv = function (a, b, c) {
        if (b == null) {
            return null;
        }
        var d = new PathGeometry();
        var e;
        var f = b.count;
        for (var g = 0; g < f; g++) {
            e = b._inner[g];
            if (e.count < 1) {
                continue;
            }
            var h = new PolyLineSegment();
            h._points = e;
            var i = new PathFigure();
            i._isFilled = c;
            i._isClosed = c;
            i._startPoint = e._inner[0];
            i._segments.add(h);
            d.c.add(i);
        }
        return d;
    };
    ShapeSeriesViewBase.prototype.bb = function (a, b) {
        _super.prototype.bb.call(this, a, b);
        var c = a;
        c._fill = this.e.k4;
        c._stroke = this.e.k5;
        c.ac = this.e.ey;
        if (c.y != null) {
            this.h.i(c, c.y);
        }
    };
    ShapeSeriesViewBase.prototype.bc = function (a, b) {
        _super.prototype.bc.call(this, a, b);
        var c = a;
        var d = this.bm(b);
        c._fill = d;
        c._stroke = d;
        c.ac = this.e.ey + 3;
    };
    ShapeSeriesViewBase.prototype.a3 = function (a, b) {
        _super.prototype.a3.call(this, a, b);
        for (var c = 0; c < this.b6.count; c++) {
            var d = this.b6._inner[c];
            if (d._visibility != 1) {
                this.ba(d, c, b);
                a.s(d);
            }
        }
    };
    Object.defineProperty(ShapeSeriesViewBase.prototype, "cx", {
        get: function () {
            return this.cw;
        },
        enumerable: true,
        configurable: true
    });
    ShapeSeriesViewBase.prototype.co = function (a) {
        this.bz = a;
    };
    ShapeSeriesViewBase.prototype.cn = function (a) {
        this.cw = a;
    };
    ShapeSeriesViewBase.prototype.cr = function (a, b) {
        return this.cs(a, b, false);
    };
    ShapeSeriesViewBase.prototype.cs = function (a, b, c) {
        if (this.b4.count == 0) {
            return null;
        }
        var d = a.x;
        var e = a.y;
        var f = this.b4.count;
        var g = this.b4;
        var h = null;
        for (var i = 0; i < f; i++) {
            h = g._inner[i];
            if (h.a == null || h.a.count == 0) {
                continue;
            }
            if (d >= h.d.left && d <= h.d.right && e >= h.d.top && e <= h.d.bottom) {
                if (c) {
                    var j = this.by.ey / 2 + this.by.ee(b);
                    if (GeometryUtil.b(a, h.a._inner[0], h.a, j)) {
                        return h.c;
                    }
                }
                else {
                    if (PolygonUtil.a(h.a, a)) {
                        return h.c;
                    }
                }
            }
        }
        return null;
    };
    ShapeSeriesViewBase.prototype.ck = function (a, b, c, d) {
        this.bv = a;
        this.bx = b;
        this.bw = c;
        this.bu = d;
        this.b4.clear();
    };
    ShapeSeriesViewBase.prototype.cp = function () {
        var _this = this;
        var a = this.br;
        var b = ((function () {
            var $ret = new Path();
            $ret.y = _this.cw;
            return $ret;
        })());
        b.ac = 1;
        if (this.h != null) {
            this.h.i(b, b.y);
        }
        this.by.m9 = RectUtil.r(a, b.ac);
    };
    ShapeSeriesViewBase.prototype.ai = function (a) {
        _super.prototype.ai.call(this, a);
        if (this.b1.a == null) {
            return;
        }
        for (var b = 0; b < this.b1.a.count; b++) {
            var c = typeCast(Path.$, this.b1.a._inner[b]);
            if (c._visibility != 1) {
                this.e.a2.exportPathData(a, c, "shape" + b, ["Main "]);
            }
        }
    };
    ShapeSeriesViewBase.$t = markType(ShapeSeriesViewBase, 'ShapeSeriesViewBase', SeriesView.$);
    return ShapeSeriesViewBase;
}(SeriesView));
export { ShapeSeriesViewBase };
//# sourceMappingURL=ShapeSeriesBase_combined.js.map
