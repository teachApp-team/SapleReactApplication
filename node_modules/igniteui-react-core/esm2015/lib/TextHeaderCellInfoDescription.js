/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { TextCellInfoDescription } from "./TextCellInfoDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let TextHeaderCellInfoDescription = /*@__PURE__*/ (() => {
    class TextHeaderCellInfoDescription extends TextCellInfoDescription {
        constructor() {
            super();
            this.e8 = false;
            this.fe = null;
            this.fb = null;
            this.fd = null;
            this.fc = null;
        }
        get_type() {
            return "TextHeaderCellInfo";
        }
        get isColumnOptionsEnabled() {
            return this.e8;
        }
        set isColumnOptionsEnabled(a) {
            this.e8 = a;
            this.e("IsColumnOptionsEnabled");
        }
        get sortIndicatorStyle() {
            return this.fe;
        }
        set sortIndicatorStyle(a) {
            this.fe = a;
            this.e("SortIndicatorStyle");
        }
        get columnOptionsIconAlignment() {
            return this.fb;
        }
        set columnOptionsIconAlignment(a) {
            this.fb = a;
            this.e("ColumnOptionsIconAlignment");
        }
        get columnOptionsIconColor() {
            return this.fd;
        }
        set columnOptionsIconColor(a) {
            this.fd = a;
            this.e("ColumnOptionsIconColor");
        }
        get columnOptionsIconBehavior() {
            return this.fc;
        }
        set columnOptionsIconBehavior(a) {
            this.fc = a;
            this.e("ColumnOptionsIconBehavior");
        }
    }
    TextHeaderCellInfoDescription.$t = /*@__PURE__*/ markType(TextHeaderCellInfoDescription, 'TextHeaderCellInfoDescription', TextCellInfoDescription.$);
    TextHeaderCellInfoDescription.__marshalByValue2 = true;
    TextHeaderCellInfoDescription.__marshalByValueAlias2 = "TextHeaderCellModel";
    return TextHeaderCellInfoDescription;
})();
//# sourceMappingURL=TextHeaderCellInfoDescription.js.map
