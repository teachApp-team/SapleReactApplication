import { DomainChart } from "./DomainChart";
import { IEnumerable$1, Type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { HorizontalAlignment } from "igniteui-react-core";
import { VerticalAlignment } from "igniteui-react-core";
import { Visibility } from "igniteui-react-core";
import { AxisLabelsLocation } from "./AxisLabelsLocation";
import { Axis } from "./Axis";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { TitleSettings } from "./TitleSettings";
import { DataSeries } from "igniteui-react-core";
import { XamDataChart } from "./XamDataChart";
import { CategoryAxisBase } from "./CategoryAxisBase";
/**
 * @hidden
 */
export declare abstract class XYChart extends DomainChart {
    static $t: Type;
    provideContainer(a: any): void;
    protected gj(): void;
    protected g4(a: string, b: any, c: any): void;
    private ig;
    ii: (item: any) => string;
    private ih;
    ij: (item: any) => string;
    private iu;
    jw: number;
    private iw;
    jy: number;
    private iv;
    jx: number;
    private it;
    jv: number;
    private jb;
    kd: number;
    private jd;
    kf: number;
    private jc;
    ke: number;
    private ja;
    kc: number;
    private nx;
    ob: Brush;
    private n4;
    oi: Brush;
    private i5;
    j7: number;
    private jm;
    ko: number;
    private i4;
    j6: number;
    private jl;
    kn: number;
    private i7;
    j9: number;
    private jo;
    kq: number;
    private i6;
    j8: number;
    private jn;
    kp: number;
    private i3;
    j5: number;
    private jk;
    km: number;
    private n3;
    oh: Brush;
    private oa;
    oo: Brush;
    protected g5(a: string, b: any, c: any): void;
    private kw;
    lh: string;
    private k0;
    mm: string;
    private ky;
    l5: string;
    private k2;
    na: string;
    private ng;
    private ni;
    protected hk(a: DataSeries): void;
    protected abstract id(): Axis;
    protected abstract ie(): Axis;
    protected nj(a: (arg1: Axis) => void): void;
    protected nk(a: (arg1: Axis) => void, b: string): void;
    protected no(a: (arg1: Axis) => void, b: boolean): void;
    protected nn(a: (arg1: Axis) => void): void;
    protected nm(a: (arg1: TitleSettings) => void): void;
    protected nq(a: (arg1: TitleSettings) => void): void;
    protected np(a: (arg1: AxisLabelSettings) => void): void;
    protected nl(a: (arg1: AxisLabelSettings) => void): void;
    jp(a: number): number;
    jr(a: number): number;
    jq(a: number): number;
    js(a: number): number;
    protected hi(a: XamDataChart): void;
    static k3(a: CategoryAxisBase, b: IEnumerable$1<DataSeries>): string;
    protected ge(a: XamDataChart): void;
    protected nf(a: Axis): void;
    protected nh(a: Axis): void;
    protected gb(): void;
    protected nd(a: Axis, b: (arg1: AxisLabelSettings) => void): void;
    protected ne(a: Axis, b: (arg1: TitleSettings) => void): void;
    protected g3(a: string, b: any, c: any): void;
    private kr;
    kt: any;
    private ks;
    ku: any;
    private ny;
    oc: Brush;
    private n5;
    oj: Brush;
    private ix;
    jz: number;
    private je;
    kg: number;
    private iy;
    j0: number;
    private jf;
    kh: number;
    private n0;
    oe: Brush;
    private n7;
    ol: Brush;
    private n1;
    of: Brush;
    private n8;
    om: Brush;
    private iz;
    j1: number;
    private jg;
    ki: number;
    private i0;
    j2: number;
    private jh;
    kj: number;
    private n2;
    og: Brush;
    private n9;
    on: Brush;
    private i1;
    j3: number;
    private ji;
    kk: number;
    private kx;
    lw: string;
    private k1;
    m1: string;
    private nz;
    od: Brush;
    private n6;
    ok: Brush;
    private is;
    ju: number;
    private i9;
    kb: number;
    private ir;
    jt: number;
    private i8;
    ka: number;
    private i2;
    j4: number;
    private jj;
    kl: number;
    private im;
    ip: boolean;
    private io;
    iq: boolean;
    private ns;
    nv: HorizontalAlignment;
    private or;
    ou: VerticalAlignment;
    private nr;
    nu: HorizontalAlignment;
    private nt;
    protected get_nw(): HorizontalAlignment;
    protected set_nw(a: HorizontalAlignment): void;
    nw: HorizontalAlignment;
    private op;
    os: VerticalAlignment;
    private oq;
    ot: VerticalAlignment;
    private ov;
    ox: Visibility;
    private ow;
    oy: Visibility;
    private ik;
    protected get_il(): AxisLabelsLocation;
    protected set_il(a: AxisLabelsLocation): void;
    il: AxisLabelsLocation;
    private kv;
    k9: string;
    private h9;
    ib: any[];
    private kz;
    md: string;
    private ia;
    ic: any[];
}
